Search.setIndex({"alltitles": {"0.10.0.dev1": [[0, "id62"]], "0.10.0.dev2": [[0, "id59"]], "0.10.0.dev3": [[0, "id56"]], "0.10.1": [[0, "id55"]], "0.10.1.dev1": [[0, "dev1"]], "0.10.1.dev2": [[0, "dev2"]], "0.10.1.dev3": [[0, "dev3"]], "0.10.1.dev4": [[0, "dev4"]], "0.10.1.dev5": [[0, "dev5"]], "0.10.2": [[0, "id47"]], "0.10.3": [[0, "id44"]], "0.10.4": [[0, "id41"]], "0.10.5": [[0, "id38"]], "0.10.6": [[0, "id35"]], "0.10.7": [[0, "id32"]], "0.10.8": [[0, "id29"]], "0.11.0": [[0, "id26"]], "0.12.0": [[0, "id23"]], "0.13.0": [[0, "id20"]], "0.14.0": [[0, "id17"]], "0.14.1": [[0, "id14"]], "0.15.0": [[0, "id11"]], "0.15.1": [[0, "id8"]], "0.16.0": [[0, "id5"]], "0.16.1": [[0, "id2"]], "0.16.2(dev)": [[0, "dev"]], "1 Introduction": [[69, "1-Introduction"]], "1. Consumer with Explicit Permanent Income": [[45, "1.-Consumer-with-Explicit-Permanent-Income"]], "1. Main Example Notebook": [[4, "main-example-notebook"]], "1. Serial Unemployment": [[51, "1.-Serial-Unemployment"]], "1. The baseline model of optimal portfolio choice": [[54, "1.-The-baseline-model-of-optimal-portfolio-choice"]], "2 Before you start": [[69, "2-Before-you-start"]], "2. Discrete portfolio choice": [[54, "2.-Discrete-portfolio-choice"]], "2. KS with Sequence Space Jacobian": [[4, "ks-with-sequence-space-jacobian"]], "2. Persistent income shock consumer": [[45, "2.-Persistent-income-shock-consumer"]], "2. Unemployment immunity for a fixed period": [[51, "2.-Unemployment-immunity-for-a-fixed-period"]], "3 Few words about HARK structure": [[69, "3-Few-words-about-HARK-structure"]], "3. A model of \u201csticky\u201d portfolio choice": [[54, "3.-A-model-of-%22sticky%22-portfolio-choice"]], "3. SSJ Explanation": [[4, "ssj-explanation"]], "3. Serial permanent income growth": [[51, "3.-Serial-permanent-income-growth"]], "4 Agent-type class": [[69, "4-Agent-type-class"]], "4. Journey Notebooks": [[4, "journey-notebooks"]], "4. Life-cycle model of portfolio choice": [[54, "4.-Life-cycle-model-of-portfolio-choice"]], "4. Serial Interest factor": [[51, "4.-Serial-Interest-factor"]], "4.1 Introductory example": [[69, "4.1-Introductory-example"]], "4.2 The Agent-Type structure": [[69, "4.2-The-Agent-Type-structure"]], "4.3 Main tutorials": [[69, "4.3-Main-tutorials"]], "4.4 Supplementary tutorials": [[69, "4.4-Supplementary-tutorials"]], "5 Market class": [[69, "5-Market-class"]], "5. Portfolio choice with Merton-Samuelson limiting shares": [[54, "5.-Portfolio-choice-with-Merton-Samuelson-limiting-shares"]], "5.1 Introductory example": [[69, "5.1-Introductory-example"]], "5.2 Market class structure": [[69, "5.2-Market-class-structure"]], "5.3 Tutorial": [[69, "5.3-Tutorial"]], "5.3.1 If you want to learn (a little) how the Market class works": [[69, "5.3.1-If-you-want-to-learn-(a-little)-how-the-Market-class-works"]], "6 If you need to study a source code": [[69, "6-If-you-need-to-study-a-source-code"]], "6.1 A few more words on HARK structure": [[69, "6.1-A-few-more-words-on-HARK-structure"]], "6.2 HARK solution": [[69, "6.2-HARK-solution"]], "6.2.1 Solution method for agent problem": [[69, "6.2.1-Solution-method-for-agent-problem"]], "6.2.2 Finding general equilibrium": [[69, "6.2.2-Finding-general-equilibrium"]], "6.3 How to study HARK codes": [[69, "6.3-How-to-study-HARK-codes"]], "A First Example": [[74, "A-First-Example"]], "A Gentle Introduction to HARK": [[64, null]], "A Life Cycle Model: The Distribution of Assets By Age": [[70, null]], "A Universal Solver": [[8, "a-universal-solver"]], "API Reference": [[28, null]], "ARKitecture of Econ-ARK": [[8, null]], "Adding examples to the documentation": [[1, "adding-examples-to-the-documentation"]], "Additional Examples and Tutorials": [[3, "additional-examples-and-tutorials"], [5, "additional-examples-and-tutorials"], [8, "additional-examples-and-tutorials"]], "Additional Requirements for AgentTypes to Participate in a Market": [[65, "Additional-Requirements-for-AgentTypes-to-Participate-in-a-Market"]], "Additional parameter value to solve an instance of MarkovConsumerType": [[51, null]], "Additional parameter values to solve an instance of PrefShockConsumerType": [[57, "Additional-parameter-values-to-solve-an-instance-of-PrefShockConsumerType"]], "Additional parameters to solve ExplicitPermInc model": [[45, "Additional-parameters-to-solve-ExplicitPermInc-model"]], "Additional parameters to solve PersistentShock model": [[45, "Additional-parameters-to-solve-PersistentShock-model"]], "Advanced Topics": [[4, "advanced-topics"]], "Advanced and Uncommon HARK Concepts": [[60, null]], "Advantages of SSJ": [[75, "Advantages-of-SSJ"]], "Agent Parameters (init_KS_agents)": [[4, "agent-parameters-init-ks-agents"]], "AgentType Class": [[8, "agenttype-class"]], "AggShockConsumerType": [[4, "aggshockconsumertype"]], "AggShockMarkovConsumerType": [[4, "aggshockmarkovconsumertype"]], "Algorithm Summary": [[66, "Algorithm-Summary"]], "Are You Sure This Thing Works?": [[74, "Are-You-Sure-This-Thing-Works?"]], "Attributes of a Market": [[8, "attributes-of-a-market"]], "Attributes of an AgentType": [[8, "attributes-of-an-agenttype"]], "Background on HA-SSJs": [[74, "Background-on-HA-SSJs"]], "Background on the Model": [[46, "Background-on-the-Model"]], "Basic Health Investment in a Consumption-Saving Model": [[46, null]], "Basic SSJ Functionality": [[74, "Basic-SSJ-Functionality"]], "Basic Simulator Usage": [[6, "basic-simulator-usage"]], "Basics of Distributions in HARK": [[60, "Basics-of-Distributions-in-HARK"]], "Breaking Changes": [[0, "breaking-changes"]], "Bringing Model to Code": [[71, "Bringing-Model-to-Code"]], "Bugs": [[1, "bugs"]], "Build environment setup": [[1, "build-environment-setup"]], "Calculate Transition Matrices with Neutral Measure (Harmenberg 2021)": [[76, "Calculate-Transition-Matrices-with-Neutral-Measure-(Harmenberg-2021)"]], "Calculating the Path of Consumption given an Perfect foresight MIT shock": [[76, "Calculating-the-Path-of-Consumption-given-an-Perfect-foresight-MIT-shock"]], "Calibrate Steady State Values": [[71, "Calibrate-Steady-State-Values"]], "Calibrate and find steady states of TANK and RANK models.": [[71, "Calibrate-and-find-steady-states-of-TANK-and-RANK-models."]], "Calibration": [[35, null]], "Calibration and setup": [[73, "Calibration-and-setup"]], "Caveats and Notes": [[65, "Caveats-and-Notes"]], "Changes": [[0, "changes"]], "Changing Agent Parameters": [[64, "Changing-Agent-Parameters"]], "Changing Constructed Attributes": [[64, "Changing-Constructed-Attributes"]], "Changing Parameter Values": [[62, "Changing-Parameter-Values"]], "Characterizing the Solution": [[46, "Characterizing-the-Solution"]], "Checking Convergence": [[4, "checking-convergence"]], "CobbDouglasEconomy and CobbDouglasMarkovEconomy": [[4, "cobbdouglaseconomy-and-cobbdouglasmarkoveconomy"]], "Code Organization and Resources": [[4, "code-organization-and-resources"]], "Code of Conduct": [[1, "code-of-conduct"]], "Common Issues and Solutions": [[4, "common-issues-and-solutions"]], "Compare Idiosyncratic Income Shocks with Risky Return": [[55, "Compare-Idiosyncratic-Income-Shocks-with-Risky-Return"]], "Compare Idiosyncratic Shock Type with Fixed Share at 0.0 Type": [[55, "Compare-Idiosyncratic-Shock-Type-with-Fixed-Share-at-0.0-Type"]], "Compare Income Shocks, Risky Return, and RR w/ Portfolio Choice": [[55, "Compare-Income-Shocks,-Risky-Return,-and-RR-w/-Portfolio-Choice"]], "Compare RR w/ Portfolio Choice with Portfolio Choice Type": [[55, "Compare-RR-w/-Portfolio-Choice-with-Portfolio-Choice-Type"]], "Comparing Simulated Path of Aggregate Assets": [[76, "Comparing-Simulated-Path-of-Aggregate-Assets"]], "Comparing Steady State Outputs of Both Methods": [[76, "Comparing-Steady-State-Outputs-of-Both-Methods"]], "Comparing time series of HANK, TANK, and RANK": [[71, "Comparing-time-series-of-HANK,-TANK,-and-RANK"]], "Computational Efficiency": [[4, "computational-efficiency"]], "Compute Jacobians": [[72, "Compute-Jacobians"]], "Compute Path of Aggregate Consumption": [[76, "Compute-Path-of-Aggregate-Consumption"]], "Compute Sequence Space Jacobian Matrices": [[71, "Compute-Sequence-Space-Jacobian-Matrices"]], "Compute Steady State": [[72, "Compute-Steady-State"]], "Compute Steady State Distribution": [[76, "Compute-Steady-State-Distribution"]], "Computing Heterogenous Agent Sequence Space Jacobians in HARK": [[72, null]], "Computing Jacobians using SSJ": [[73, "Computing-Jacobians-using-SSJ"]], "Connecting a Model File to a HARK Model": [[6, "connecting-a-model-file-to-a-hark-model"]], "ConsAggShockModel": [[11, null], [67, "ConsAggShockModel"]], "ConsBequestModel": [[12, null]], "ConsBequestModel: Models with a warm glow bequest motive": [[67, "ConsBequestModel:-Models-with-a-warm-glow-bequest-motive"]], "ConsGenIncProcessModel": [[13, null]], "ConsHealthModel": [[14, null]], "ConsIndShockModel": [[15, null]], "ConsIndShockModel: Models With(out) Idiosyncratic Income Risk and One Risk-Free Asset": [[67, "ConsIndShockModel:-Models-With(out)-Idiosyncratic-Income-Risk-and-One-Risk-Free-Asset"]], "ConsIndShockModelFast": [[16, null]], "ConsLaborModel": [[17, null]], "ConsMarkovModel": [[18, null]], "ConsMedModel": [[19, null]], "ConsMedModel: Models with medical expenses as an additional choice": [[67, "ConsMedModel:-Models-with-medical-expenses-as-an-additional-choice"]], "ConsNewKeynesianModel": [[20, null]], "ConsPortfolioModel": [[21, null]], "ConsPrefShockModel": [[22, null]], "ConsRepAgentModel": [[23, null]], "ConsRepAgentModel: What\u2019s this doing here?": [[67, "ConsRepAgentModel:-What's-this-doing-here?"]], "ConsRiskyAssetModel": [[24, null]], "ConsRiskyContribModel": [[25, null]], "ConsWealthPortfolioModel: Agents who value wealth in and of itself": [[67, "ConsWealthPortfolioModel:-Agents-who-value-wealth-in-and-of-itself"]], "Constructed Attributes and Model Defaults": [[62, null]], "Constructed Inputs for MedExtMargConsumerType": [[52, "Constructed-Inputs-for-MedExtMargConsumerType"]], "Constructed Inputs for MedShockConsumerType": [[53, "Constructed-Inputs-for-MedShockConsumerType"]], "Constructed inputs to solve ConsPrefShockModel": [[57, "Constructed-inputs-to-solve-ConsPrefShockModel"]], "Constructed inputs to solve ExplicitPermInc": [[45, "Constructed-inputs-to-solve-ExplicitPermInc"]], "Constructed inputs to solve GenIncProcess": [[45, "Constructed-inputs-to-solve-GenIncProcess"]], "Constructed inputs to solve KinkyPref": [[57, "Constructed-inputs-to-solve-KinkyPref"]], "Constructed inputs to solve PersistentShock": [[45, "Constructed-inputs-to-solve-PersistentShock"]], "Constructor Functions for Complex Model Inputs": [[62, "Constructor-Functions-for-Complex-Model-Inputs"]], "Consumption Saving": [[27, null]], "Consumption-Saving model with Idiosyncratic Income Shocks": [[47, null]], "Consumption-Saving model with Idiosyncratic Income Shocks and Different Interest Rates on Borrowing and Saving": [[48, null]], "Consumption-Saving with Intensive Margin Labor Supply Choice": [[50, null]], "Consumption-Saving with Medical Care Choice on the Extensive Margin": [[52, null]], "Consumption-Saving with Portfolio Allocation: Sequential Solvers": [[56, null]], "Consumption-saving models with a realistic income process": [[63, "Consumption-saving-models-with-a-realistic-income-process"]], "Content Aside from the Toolkit": [[3, "content-aside-from-the-toolkit"]], "Contributing Guide": [[1, "contributing-guide"]], "Contributing to Econ-ARK": [[1, null]], "Contributing to documentation": [[1, "contributing-to-documentation"]], "Core": [[29, null]], "Create Agent": [[72, "Create-Agent"]], "Create an Instance of IndShockConsumerType and Solve": [[76, "Create-an-Instance-of-IndShockConsumerType-and-Solve"]], "Cubic Spline Interpolation": [[66, "Cubic-Spline-Interpolation"]], "Custom Parameters": [[4, "custom-parameters"]], "Debugging": [[4, "debugging"]], "Declaring parameters, functions, and distributions": [[6, "declaring-parameters-functions-and-distributions"]], "Declaring variables": [[6, "declaring-variables"]], "DemARK": [[8, "demark"]], "Demonstrations And Illustrations": [[3, "demonstrations-and-illustrations"]], "Demonstrations on using HARK": [[5, "demonstrations-on-using-hark"]], "Derivative Methods": [[66, "Derivative-Methods"]], "Determination of Wage and Interest Rates": [[75, "Determination-of-Wage-and-Interest-Rates"]], "Developer\u2019s Certificate of Origin 1.1": [[1, "developer-s-certificate-of-origin-1-1"]], "Development": [[2, null]], "Developmental Features": [[0, "developmental-features"]], "Directory of Consumption-Saving Models in HARK": [[67, null]], "Distribution": [[31, null]], "Distribution of Liquid Assets": [[76, "Distribution-of-Liquid-Assets"]], "Distribution of Normalized Market Resources": [[76, "Distribution-of-Normalized-Market-Resources"]], "Distribution of Wealth": [[76, "Distribution-of-Wealth"]], "Distributions of Permanent Income": [[76, "Distributions-of-Permanent-Income"]], "Do the same thing with the new version and compare them": [[72, "Do-the-same-thing-with-the-new-version-and-compare-them"], [72, "id1"], [72, "id2"]], "Documentation Convention": [[1, "documentation-convention"]], "Down on the Farm": [[8, "down-on-the-farm"]], "Dynamics of Productivity": [[75, "Dynamics-of-Productivity"]], "Econ-ARK documentation \u2013 HARK": [[77, null]], "Econforgeinterp": [[32, null]], "Economy Parameters (init_KS_economy)": [[4, "economy-parameters-init-ks-economy"]], "Elements of a Market": [[65, "Elements-of-a-Market"]], "Elements of an AgentType Subclass": [[61, null]], "Endogenous Grid Method Math": [[66, "Endogenous-Grid-Method-Math"]], "Equilibrium Computation": [[4, "equilibrium-computation"]], "Essential Methods": [[4, "essential-methods"]], "Estimation": [[33, null]], "Estimation and Optimization": [[60, "Estimation-and-Optimization"]], "Examining Simulation Output": [[6, "examining-simulation-output"]], "Example ConsAggShockModel": [[44, null]], "Example Implementation of MedExtMargConsumerType": [[52, "Example-Implementation-of-MedExtMargConsumerType"]], "Example Implementation of MedShockConsumerType": [[53, "Example-Implementation-of-MedShockConsumerType"]], "Example Implementations of AggShockMarkovConsumerType": [[44, "Example-Implementations-of-AggShockMarkovConsumerType"]], "Example Implementations of HARK.ConsumptionSaving.ConsRiskyAssetModel": [[55, null]], "Example Model Solution": [[46, "Example-Model-Solution"]], "Example Parameters for MedShockConsumerType": [[53, "Example-Parameters-for-MedShockConsumerType"]], "Example Parameters for the Extensive Margin Medical Shocks Model": [[52, "Example-Parameters-for-the-Extensive-Margin-Medical-Shocks-Model"]], "Example Usage": [[60, "Example-Usage"]], "Example implementation of AggShockConsumerType": [[44, "Example-implementation-of-AggShockConsumerType"]], "Example model: Consumption-saving with income risk": [[68, "Example-model:-Consumption-saving-with-income-risk"]], "Example parameter values to construct an instance of IndShockConsumerType": [[47, "Example-parameter-values-to-construct-an-instance-of-IndShockConsumerType"]], "Example parameter values to construct an instance of KinkedRconsumerType": [[48, "Example-parameter-values-to-construct-an-instance-of-KinkedRconsumerType"]], "Example parameter values to construct an instance of PerfForesightConsumerType": [[49, "Example-parameter-values-to-construct-an-instance-of-PerfForesightConsumerType"]], "Example parameter values to solve GenIncProcess model": [[45, "Example-parameter-values-to-solve-GenIncProcess-model"]], "Example: Installing HARK and Running a Simple Model": [[3, "example-installing-hark-and-running-a-simple-model"], [5, "example-installing-hark-and-running-a-simple-model"]], "Examples": [[9, null]], "Examples and Notebooks": [[4, "examples-and-notebooks"]], "Extending the Model": [[4, "extending-the-model"]], "Extensive Margin Medical Care Model": [[52, "Extensive-Margin-Medical-Care-Model"]], "External Resources": [[4, "external-resources"]], "Extra Steps: pre_solve and post_solve": [[61, "Extra-Steps:-pre_solve-and-post_solve"]], "Find Equilibrium Discount Factor": [[71, "Find-Equilibrium-Discount-Factor"]], "Finite horizon approximation to infinite horizon problem": [[63, "Finite-horizon-approximation-to-infinite-horizon-problem"]], "Finite horizon, life-cycle example model": [[63, "Finite-horizon,-life-cycle-example-model"]], "Finite horizon, life-cycle problem": [[63, "Finite-horizon,-life-cycle-problem"]], "Firm setup": [[73, "Firm-setup"]], "Firms and Production": [[75, "Firms-and-Production"]], "Function Evaluation Events": [[6, "function-evaluation-events"]], "GenIncProcessModel: Non-Permanent-Income-Normalized Models": [[67, "GenIncProcessModel:-Non-Permanent-Income-Normalized-Models"]], "General Income Process model": [[45, "General-Income-Process-model"]], "General Purpose Tools": [[8, "general-purpose-tools"]], "Generalizing the Medical Shock Distribution": [[52, "Generalizing-the-Medical-Shock-Distribution"]], "Generating simulated data": [[49, "Generating-simulated-data"]], "Getting Started": [[1, "getting-started"]], "Getting to the Point: transition": [[61, "Getting-to-the-Point:-transition"]], "Government Budget Constraint and Market Clearing": [[71, "Government-Budget-Constraint-and-Market-Clearing"]], "Government Spending Shock (Balanced Budget)": [[71, "Government-Spending-Shock-(Balanced-Budget)"]], "Government spending shock (deficit financed)": [[71, "Government-spending-shock-(deficit-financed)"]], "Guidelines": [[1, "guidelines"]], "Guides": [[2, null]], "HANK vs TANK vs RANK": [[71, "HANK-vs-TANK-vs-RANK"]], "HARK": [[8, "hark"]], "HARK Documentation": [[4, "hark-documentation"]], "HARK Models": [[9, null]], "HARK Solves for the Microeconomic Steady State": [[71, "HARK-Solves-for-the-Microeconomic-Steady-State"]], "HARK \\rightarrow SSJ lets us solve macro models with rich micro realism": [[71, "HARK-\\rightarrow-SSJ-lets-us-solve-macro-models-with-rich-micro-realism"]], "HARK agent": [[73, "HARK-agent"]], "HARK and the Sequence Space Jacobian (SSJ) Method": [[71, null]], "HARK installation guide": [[3, null]], "HARK.core": [[8, "hark-core"]], "HARK.distributions": [[8, "hark-distributions"]], "HARK.estimation": [[8, "hark-estimation"]], "HARK.interpolation": [[8, "hark-interpolation"]], "HARK.metric": [[8, "hark-metric"]], "HARK.parallel": [[8, "hark-parallel"]], "HARK.rewards": [[8, "hark-rewards"]], "HARK.utilities": [[8, "hark-utilities"]], "Helper Functions": [[4, "helper-functions"]], "Helpers": [[34, null]], "Heterogenous Agent Jacobian": [[75, "Heterogenous-Agent-Jacobian"]], "Households": [[75, "Households"]], "Household\u2019s Problem": [[75, "Household's-Problem"]], "How Do I Know What the Model Variables Are Called?": [[74, "How-Do-I-Know-What-the-Model-Variables-Are-Called?"]], "How Does HARK Incorporate these Concepts?": [[65, "How-Does-HARK-Incorporate-these-Concepts?"]], "How Does Permanent Income Normalization Work With SSJs?": [[74, "How-Does-Permanent-Income-Normalization-Work-With-SSJs?"]], "How Market\u2019s solve Method Works": [[65, "How-Market's-solve-Method-Works"]], "How to Contribute": [[1, "how-to-contribute"]], "How to make simulated data: Legacy method": [[68, "How-to-make-simulated-data:-Legacy-method"]], "I Don\u2019t Want To and You Can\u2019t Make Me": [[61, "I-Don't-Want-To-and-You-Can't-Make-Me"]], "Idiosyncratic Income Shocks Consumer Type": [[55, "Idiosyncratic-Income-Shocks-Consumer-Type"]], "Implement perturbation in Real Interest Rate": [[76, "Implement-perturbation-in-Real-Interest-Rate"]], "Impulse Response Functions and Simulations": [[73, "Impulse-Response-Functions-and-Simulations"]], "Impulse responses to deficit financed G shocks:": [[71, "Impulse-responses-to-deficit-financed-G-shocks:"]], "In-Line Utility Functions": [[60, "In-Line-Utility-Functions"]], "Inbound Information: Declaring arrival variables": [[6, "inbound-information-declaring-arrival-variables"]], "Income Processes": [[60, "Income-Processes"]], "Individual Problem": [[4, "individual-problem"]], "Infinite horizon cyclical example model": [[63, "Infinite-horizon-cyclical-example-model"]], "Infinite horizon, cyclical problem": [[63, "Infinite-horizon,-cyclical-problem"]], "Initializing agents: model \u201cbirth\u201d": [[68, "Initializing-agents:-model-%22birth%22"]], "Initializing and Running a Simulation": [[6, "initializing-and-running-a-simulation"]], "Inputs to the Solver": [[46, "Inputs-to-the-Solver"]], "Installing HARK": [[5, "installing-hark"]], "Instructions for a new user": [[3, "instructions-for-a-new-user"]], "Instructions for an advanced user/developer": [[3, "instructions-for-an-advanced-user-developer"]], "Integration with Sequence Space Jacobian": [[4, "integration-with-sequence-space-jacobian"]], "Interpolation": [[37, null]], "Interpolation Methods": [[66, "Interpolation-Methods"]], "Intertemporal Transitions: Do the twist": [[6, "intertemporal-transitions-do-the-twist"]], "Introduction": [[0, "introduction"], [4, "introduction"]], "Introduction to HARK": [[9, null], [10, null]], "It\u2019s about time: cycles and T_cycle": [[63, "It's-about-time:-cycles-and-T_cycle"]], "I\u2019m a Man of Action: get_controls": [[61, "I'm-a-Man-of-Action:-get_controls"]], "Journey: Economics PhD Student": [[69, null]], "Just Gimme Whatever: Default AgentType Options": [[62, "Just-Gimme-Whatever:-Default-AgentType-Options"]], "Krusell Smith Model in Sequence Space": [[75, "Krusell-Smith-Model-in-Sequence-Space"]], "Krusell-Smith Model in HARK": [[4, null]], "KrusellSmithEconomy Class": [[4, "krusellsmitheconomy-class"]], "KrusellSmithType Class": [[4, "krusellsmithtype-class"]], "Labor Income": [[75, "Labor-Income"]], "Learning About HARK": [[9, null]], "Learning HARK": [[5, "learning-hark"]], "Learning More About HARK": [[64, "Learning-More-About-HARK"]], "Legacy Simulation System Methods": [[61, "Legacy-Simulation-System-Methods"]], "License": [[7, null]], "Life-Cycle Parameter Calibrations": [[60, "Life-Cycle-Parameter-Calibrations"]], "Lifecycle simulation": [[68, "Lifecycle-simulation"]], "Linear Spline Interpolation": [[66, "Linear-Spline-Interpolation"]], "Liquidity constrained perfect foresight example": [[49, "Liquidity-constrained-perfect-foresight-example"]], "Lognormal Discretization": [[66, "Lognormal-Discretization"]], "Main Components": [[4, "main-components"]], "Major Changes": [[0, "major-changes"], [0, "id3"], [0, "id6"], [0, "id9"], [0, "id12"], [0, "id15"], [0, "id18"], [0, "id21"], [0, "id24"], [0, "id27"], [0, "id30"], [0, "id33"], [0, "id36"], [0, "id39"], [0, "id42"], [0, "id45"], [0, "id53"], [0, "id57"], [0, "id60"], [0, "id63"]], "Make Agents with Calibrated Discount Factor": [[71, "Make-Agents-with-Calibrated-Discount-Factor"]], "Making Heterogeneous Agent Sequence Space Jacobian Matrices in HARK": [[74, null]], "Manually altering simulation outcomes": [[68, "Manually-altering-simulation-outcomes"]], "Market Class": [[8, "market-class"]], "Market Clearing": [[75, "Market-Clearing"]], "Markov Draw Events": [[6, "markov-draw-events"]], "Measuring Up: Distance in HARK": [[60, "Measuring-Up:-Distance-in-HARK"]], "Medical Care as a Consumption Good with Stochastic Demand": [[53, null]], "Medical Need Shocks Model": [[53, "Medical-Need-Shocks-Model"]], "Method 1: Monte Carlo": [[76, "Method-1:-Monte-Carlo"]], "Method 2: Transition Matrices": [[76, "Method-2:-Transition-Matrices"]], "Micro Agent Parameters": [[71, "Micro-Agent-Parameters"]], "Minimal Working Example": [[4, "minimal-working-example"]], "Minor Changes": [[0, "minor-changes"], [0, "id4"], [0, "id7"], [0, "id10"], [0, "id13"], [0, "id16"], [0, "id19"], [0, "id22"], [0, "id25"], [0, "id28"], [0, "id31"], [0, "id34"], [0, "id37"], [0, "id40"], [0, "id43"], [0, "id46"], [0, "id48"], [0, "id49"], [0, "id50"], [0, "id51"], [0, "id52"], [0, "id54"], [0, "id58"], [0, "id61"], [0, "id64"]], "Model": [[38, null], [71, "Model"]], "Model Components": [[4, "model-components"]], "Model File Basics": [[6, "model-file-basics"]], "Model File Specification": [[6, "model-file-specification"]], "Model Parameters": [[4, "model-parameters"]], "Model Statement": [[46, "Model-Statement"]], "Model as defined by diff eqns in sequence space": [[75, "Model-as-defined-by-diff-eqns-in-sequence-space"]], "Model features": [[71, "Model-features"]], "Models": [[28, null]], "Monte Carlo Simulation with Harmenberg Trick": [[76, "Monte-Carlo-Simulation-with-Harmenberg-Trick"]], "Mortality Processes": [[60, "Mortality-Processes"]], "Multidimensional Interpolators": [[66, "Multidimensional-Interpolators"]], "Multiplicative Shocks to Utility": [[57, null]], "Naming Conventions": [[1, "naming-conventions"]], "New Simulation System and Model Specification Files for HARK": [[6, null]], "New way? What\u2019s this about a new way?": [[68, "New-way?-What's-this-about-a-new-way?"]], "Next steps": [[5, "next-steps"]], "Non-standard time structures": [[63, "Non-standard-time-structures"]], "Note* Increasing the number of gridpoints increases the accuracy of the transition matrix method": [[76, "Note*-Increasing-the-number-of-gridpoints-increases-the-accuracy-of-the-transition-matrix-method"]], "Nothing\u2019s Shocking: Random Variables and Distributions": [[61, "Nothing's-Shocking:-Random-Variables-and-Distributions"]], "Numba Tools": [[39, null]], "Numeric Methods Commonly Used in HARK": [[66, null]], "Options for Debugging Constructors": [[62, "Options-for-Debugging-Constructors"]], "Ordinary Dynamic Events": [[6, "ordinary-dynamic-events"]], "Other Changes": [[0, "other-changes"]], "Other Notes": [[0, "other-notes"]], "Other Utility Functions in HARK.rewards": [[60, "Other-Utility-Functions-in-HARK.rewards"]], "Our Workhorse: DiscreteDistribution": [[60, "Our-Workhorse:-DiscreteDistribution"]], "Overall algorithm": [[75, "Overall-algorithm"]], "Overview": [[9, null]], "Parallelizing Operations": [[60, "Parallelizing-Operations"]], "Parameters (passed as attributes of the input parameters)": [[35, "parameters-passed-as-attributes-of-the-input-parameters"]], "Parameters:": [[20, "parameters"]], "Params": [[11, "params"], [11, "id1"]], "Path of Aggregate Assets given an anticipated interest rate shock at t=10": [[76, "Path-of-Aggregate-Assets-given-an-anticipated-interest-rate-shock-at-t=10"]], "Path of Aggregate Consumption given an anticipated interest rate shock at t=10": [[76, "Path-of-Aggregate-Consumption-given-an-anticipated-interest-rate-shock-at-t=10"]], "Perfect foresight consumption-saving": [[49, null]], "Perhaps You Had Better Start From the End: solution_terminal": [[61, "Perhaps-You-Had-Better-Start-From-the-End:-solution_terminal"]], "Permanent income normalized": [[45, "Permanent-income-normalized"]], "Permanent versus Persistent Income Shocks": [[45, null]], "Plot Sequence Space Jacobians": [[71, "Plot-Sequence-Space-Jacobians"]], "Portfolio Consumer Type": [[55, "Portfolio-Consumer-Type"]], "Portfolio Models in HARK": [[54, null]], "Pre-commit hooks": [[1, "pre-commit-hooks"]], "Pre-drawing and manipulating shocks": [[68, "Pre-drawing-and-manipulating-shocks"]], "Precision vs Accuracy": [[76, "Precision-vs-Accuracy"]], "Primary Reference": [[4, "primary-reference"]], "Pull request codes": [[1, "pull-request-codes"]], "Quick Start": [[4, "quick-start"]], "Quick Start Guide": [[5, null]], "REMARK": [[8, "remark"]], "REMARK: Replications and Examples Made Using the ARK": [[3, "remark-replications-and-examples-made-using-the-ark"]], "Random Realization Events": [[6, "random-realization-events"]], "References": [[4, "references"]], "Related Literature": [[4, "related-literature"]], "Related Models in HARK": [[4, "related-models-in-hark"]], "Release Notes": [[0, null], [0, "id1"]], "Representative Agent Consumption-Saving Model": [[58, null]], "Representative Agent\u2019s Problem": [[58, "Representative-Agent's-Problem"]], "Representing Agents in HARK": [[64, "Representing-Agents-in-HARK"]], "Representing Distributions": [[60, "Representing-Distributions"]], "Representing the Model\u2019s Solution": [[61, "Representing-the-Model's-Solution"]], "Responding to Issues and Pull Requests": [[1, "responding-to-issues-and-pull-requests"]], "Rewards": [[40, null]], "Risky Return Consumer Type": [[55, "Risky-Return-Consumer-Type"]], "Risky Return Consumer Type with Portfolio Choice": [[55, "Risky-Return-Consumer-Type-with-Portfolio-Choice"]], "Risky Return Given Fixed Portfolio Share": [[55, "Risky-Return-Given-Fixed-Portfolio-Share"]], "SSJ toolkit takes micro soln as input, and calculates macro": [[71, "SSJ-toolkit-takes-micro-soln-as-input,-and-calculates-macro"]], "Say My Name: DiscreteDistributionLabeled": [[60, "Say-My-Name:-DiscreteDistributionLabeled"]], "SequentialPortfolioConsumerType Example Implementation": [[56, "SequentialPortfolioConsumerType-Example-Implementation"]], "Set up Computational Environment": [[76, "Set-up-Computational-Environment"]], "Set up the Dictionary": [[76, "Set-up-the-Dictionary"]], "Setting simulation parameters": [[49, "Setting-simulation-parameters"]], "Shock to Real Interest Rate": [[72, "Shock-to-Real-Interest-Rate"]], "Shock to Standard Deviation to Permanent Income Shocks": [[72, "Shock-to-Standard-Deviation-to-Permanent-Income-Shocks"]], "Shock to Unemployment Probability": [[72, "Shock-to-Unemployment-Probability"]], "Show Me How the Model Kills: sim_death and sim_birth": [[61, "Show-Me-How-the-Model-Kills:-sim_death-and-sim_birth"]], "Simple Consumption-Saving Model": [[66, "Simple-Consumption-Saving-Model"]], "Simulate deficit financed government spending shocks.": [[71, "Simulate-deficit-financed-government-spending-shocks."]], "Simulate with Monte Carlo with Harmenberg Trick": [[76, "Simulate-with-Monte-Carlo-with-Harmenberg-Trick"]], "Simulating Individual Histories": [[4, "simulating-individual-histories"]], "Simulating Microeconomic Models": [[68, null]], "Simulating With Harmenberg (2021) Method": [[76, "Simulating-With-Harmenberg-(2021)-Method"]], "Simulating the idiosyncratic income shocks model": [[47, "Simulating-the-idiosyncratic-income-shocks-model"]], "Simulating the model": [[73, "Simulating-the-model"]], "Simulating the perfect foresight consumer model": [[49, "Simulating-the-perfect-foresight-consumer-model"]], "Simulating the \u201ckinked R\u201d model": [[48, "Simulating-the-%22kinked-R%22-model"]], "Simulating time series": [[71, "Simulating-time-series"]], "Simulation": [[41, null]], "Simulation Attributes": [[6, "simulation-attributes"]], "Simulation Options": [[6, "simulation-options"]], "Simulation Variable Names": [[61, "Simulation-Variable-Names"]], "Simulation: Transition Matrix vs Monte Carlo": [[76, "Simulation:-Transition-Matrix-vs-Monte-Carlo"]], "Solution Algorithm": [[4, "solution-algorithm"]], "Solution When Liquidity Constrained and Representation of the Policy Function": [[53, "Solution-When-Liquidity-Constrained-and-Representation-of-the-Policy-Function"]], "Solution method for IndShockConsumerType": [[47, "Solution-method-for-IndShockConsumerType"]], "Solution method for PerfForesightConsumerType": [[49, "Solution-method-for-PerfForesightConsumerType"]], "Solve Agent": [[76, "Solve-Agent"]], "Solve MarkovConsumerType": [[51, "Solve-MarkovConsumerType"]], "Solve an Agent who Anticipates a Change in the Real Interest Rate": [[76, "Solve-an-Agent-who-Anticipates-a-Change-in-the-Real-Interest-Rate"]], "Solve the model by linearizing around the steady state": [[75, "Solve-the-model-by-linearizing-around-the-steady-state"]], "Solving Individual Problem Only": [[4, "solving-individual-problem-only"]], "Solving Krusell Smith Model with HARK and SSJ": [[73, null]], "Solving Using the HANK-SSJ Link": [[75, "Solving-Using-the-HANK-SSJ-Link"]], "Solving an Agent\u2019s Problem": [[64, "Solving-an-Agent's-Problem"]], "Solving and examining the solution of the idiosyncratic income shocks model": [[47, "Solving-and-examining-the-solution-of-the-idiosyncratic-income-shocks-model"]], "Solving and examining the solution of the perfect foresight model": [[49, "Solving-and-examining-the-solution-of-the-perfect-foresight-model"]], "Solving and examining the solution of the \u201ckinked R\u201d model": [[48, "Solving-and-examining-the-solution-of-the-%22kinked-R%22-model"]], "Solving for Impulse Responses": [[73, "Solving-for-Impulse-Responses"]], "Solving for \u201cMacroeconomic\u201d Equilibrium in HARK: the Market class": [[65, null]], "Solving the Consumption-Saving Problem": [[52, "Solving-the-Consumption-Saving-Problem"]], "Solving the Extensive Margin Medical Care Model": [[52, "Solving-the-Extensive-Margin-Medical-Care-Model"]], "Solving the Medical Needs Shock Model": [[53, "Solving-the-Medical-Needs-Shock-Model"]], "Solving the Medical Treatment Problem and Computing Expectations over Medical Shocks": [[52, "Solving-the-Medical-Treatment-Problem-and-Computing-Expectations-over-Medical-Shocks"]], "Solving the \u201ckinked R\u201d model": [[48, "Solving-the-%22kinked-R%22-model"]], "Special Cases: Declaring the solution and offset Parameters": [[6, "special-cases-declaring-the-solution-and-offset-parameters"]], "Special Constructors": [[62, "Special-Constructors"]], "Special Variables": [[6, "special-variables"]], "Specify a Two Agent (TA) economy (Campbell-Mankiw)": [[71, "Specify-a-Two-Agent-(TA)-economy-(Campbell-Mankiw)"]], "Specify a representative agent household": [[71, "Specify-a-representative-agent-household"]], "Standard infinite horizon example model": [[63, "Standard-infinite-horizon-example-model"]], "Standard infinite horizon problem": [[63, "Standard-infinite-horizon-problem"]], "State Variable Names": [[61, "State-Variable-Names"]], "Statement of idiosyncratic income shocks model": [[47, "Statement-of-idiosyncratic-income-shocks-model"]], "Statement of perfect foresight consumption-saving model": [[49, "Statement-of-perfect-foresight-consumption-saving-model"]], "Statement of \u201ckinked R\u201d model": [[48, "Statement-of-%22kinked-R%22-model"]], "Steady State Assets": [[73, "Steady-State-Assets"]], "Steady State Capital": [[73, "Steady-State-Capital"]], "Step 1: Install Python and a Text Editor": [[3, "step-1-install-python-and-a-text-editor"], [5, "step-1-install-python-and-a-text-editor"]], "Step 2: Create a Virtual Environment": [[3, "step-2-create-a-virtual-environment"], [5, "step-2-create-a-virtual-environment"]], "Step 3: Install HARK": [[3, "step-3-install-hark"], [5, "step-3-install-hark"]], "Step 4: Run a Simple Model": [[3, "step-4-run-a-simple-model"], [5, "step-4-run-a-simple-model"]], "Strange aeons": [[63, "Strange-aeons"]], "Style Conventions for Default Parameters": [[62, "Style-Conventions-for-Default-Parameters"]], "Stylistic Guidelines": [[1, "stylistic-guidelines"]], "Summary": [[4, "summary"]], "Support and Community": [[4, "support-and-community"]], "Take It From the Middle: from_solution and from_t": [[60, "Take-It-From-the-Middle:-from_solution-and-from_t"]], "Taking it One Day at a Time: solve_one_period": [[61, "Taking-it-One-Day-at-a-Time:-solve_one_period"]], "Tell Me More, Tell Me More: verbose": [[60, "Tell-Me-More,-Tell-Me-More:-verbose"]], "Testing": [[1, "testing"]], "Tests": [[4, "tests"]], "That\u2019s So Random: get_shocks and read_shocks": [[61, "That's-So-Random:-get_shocks-and-read_shocks"]], "The Block Where It Happens: Model dynamics": [[6, "the-block-where-it-happens-model-dynamics"]], "The Endogenous Grid Method": [[66, "The-Endogenous-Grid-Method"]], "The Nature of Time in HARK\u2019s Microeconomic Framework": [[63, null]], "The Sequence Space Jacobian (SSJ) method": [[75, null]], "The initialize Section": [[6, "the-initialize-section"]], "The perfect foresight model with age-dependent parameters": [[63, "The-perfect-foresight-model-with-age-dependent-parameters"]], "The symbols Section": [[6, "the-symbols-section"]], "This could be the end: pseudo_terminal": [[63, "This-could-be-the-end:-pseudo_terminal"]], "Time-Varying and Time-Invariant Solver Inputs": [[61, "Time-Varying-and-Time-Invariant-Solver-Inputs"]], "Tips and Best Practices": [[4, "tips-and-best-practices"]], "Tools": [[28, null], [36, null]], "TractableBufferStockModel": [[26, null]], "Traditional Solution Method": [[66, "Traditional-Solution-Method"]], "Turning Off pre_solve and post_solve": [[60, "Turning-Off-pre_solve-and-post_solve"]], "Uncommon Options When Solving Models": [[60, "Uncommon-Options-When-Solving-Models"]], "Updating Constructed Attributes": [[62, "Updating-Constructed-Attributes"]], "Usage": [[2, null]], "Usage Examples": [[4, "usage-examples"]], "Using Conda": [[3, "using-conda"], [5, "using-conda"]], "Using Non-Default Constructors": [[62, "Using-Non-Default-Constructors"]], "Using Parsed Parameters in a Model": [[60, "Using-Parsed-Parameters-in-a-Model"]], "Using Transition Matrix Methods under IndShockConsumerType": [[76, null]], "Using virtualenv": [[3, "using-virtualenv"], [5, "using-virtualenv"]], "Utilities": [[42, null]], "Utility Function Structure": [[60, "Utility-Function-Structure"]], "Utility Functions": [[60, "Utility-Functions"]], "Utility Shocks and Different Interest Rates": [[57, "Utility-Shocks-and-Different-Interest-Rates"]], "Validators": [[43, null]], "Variable Lower Bounds": [[66, "Variable-Lower-Bounds"]], "Viewing Constructors": [[62, "Viewing-Constructors"]], "Visualizing Results": [[4, "visualizing-results"]], "Visualizing simulated data": [[68, "Visualizing-simulated-data"]], "Welcome!": [[1, "welcome"]], "What Can Be Used As a Shock Variable?": [[74, "What-Can-Be-Used-As-a-Shock-Variable?"]], "What Do We Mean By \u201cEquilibrium\u201d?": [[65, "What-Do-We-Mean-By-%22Equilibrium%22?"]], "What if the model contains many equations?": [[75, "What-if-the-model-contains-many-equations?"]], "What parameters can depend on age?": [[63, "What-parameters-can-depend-on-age?"]], "What\u2019s Going On Under the Hood?": [[74, "What's-Going-On-Under-the-Hood?"]], "Who Interpolates the Interpolators? (We Do)": [[66, "Who-Interpolates-the-Interpolators?-(We-Do)"]], "Why Does Market Exist At All?": [[65, "Why-Does-Market-Exist-At-All?"]], "Why Is This So Complicated?": [[61, "Why-Is-This-So-Complicated?"]], "Why does HANK matter?": [[71, "Why-does-HANK-matter?"]], "Wrapping Up: get_poststates": [[61, "Wrapping-Up:-get_poststates"]], "Your First HARK Model: Perfect Foresight": [[64, "Your-First-HARK-Model:-Perfect-Foresight"]], "Your Second HARK Model: Adding Income Shocks": [[64, "Your-Second-HARK-Model:-Adding-Income-Shocks"]], "`AggShockConsumerType <../ConsAggShockModel/AggShockConsumerType.ipynb>`__: Standard model with aggregate and idiosyncratic income shocks": [[67, "`AggShockConsumerType-<../ConsAggShockModel/AggShockConsumerType.ipynb>`__:-Standard-model-with-aggregate-and-idiosyncratic-income-shocks"]], "`AggShockMarkovConsumerType <../ConsAggShockModel/AggShockConsumerType.ipynb>`__: Aggregate shocks with a discrete state": [[67, "`AggShockMarkovConsumerType-<../ConsAggShockModel/AggShockConsumerType.ipynb>`__:-Aggregate-shocks-with-a-discrete-state"]], "`BequestWarmGlowConsumerType <../ConsBequestModel/example_WarmGlowBequest.ipynb>`__: Idiosyncratic income shocks with a warm glow bequest motive": [[67, "`BequestWarmGlowConsumerType-<../ConsBequestModel/example_WarmGlowBequest.ipynb>`__:-Idiosyncratic-income-shocks-with-a-warm-glow-bequest-motive"]], "`BequestWarmGlowPortfolioType <../ConsBequestModel/example_WarmGlowBequestPort.ipynb>`__: Income shocks and portfolio choice with a warm glow bequest motive": [[67, "`BequestWarmGlowPortfolioType-<../ConsBequestModel/example_WarmGlowBequestPort.ipynb>`__:-Income-shocks-and-portfolio-choice-with-a-warm-glow-bequest-motive"]], "`ConsHealthModel <../ConsHealthModel/BasicHealthConsumerType.ipynb>`__: Consumption-saving models with endogenous health": [[67, "`ConsHealthModel-<../ConsHealthModel/BasicHealthConsumerType.ipynb>`__:-Consumption-saving-models-with-endogenous-health"]], "`ConsLaborModel <../ConsLaborModel/LaborIntMargConsumerType.ipynb>`__: Models with endogenous labor supply": [[67, "`ConsLaborModel-<../ConsLaborModel/LaborIntMargConsumerType.ipynb>`__:-Models-with-endogenous-labor-supply"]], "`ConsMarkovModel <../ConsMarkovModel/MarkovConsumerType.ipynb>`__: Models with a discrete state that evolves exogenously": [[67, "`ConsMarkovModel-<../ConsMarkovModel/MarkovConsumerType.ipynb>`__:-Models-with-a-discrete-state-that-evolves-exogenously"]], "`ConsPortfolioModel <../ConsPortfolioModel/PortfolioConsumerType.ipynb>`__: Consumption-saving with portfolio allocation and extra features": [[67, "`ConsPortfolioModel-<../ConsPortfolioModel/PortfolioConsumerType.ipynb>`__:-Consumption-saving-with-portfolio-allocation-and-extra-features"]], "`ConsPrefShockModel <../ConsPrefShockModel/PrefShockConsumerType.ipynb>`__: Consumption-saving with stochastic marginal utility": [[67, "`ConsPrefShockModel-<../ConsPrefShockModel/PrefShockConsumerType.ipynb>`__:-Consumption-saving-with-stochastic-marginal-utility"]], "`ConsRiskyAssetModel <../ConsPortfolioModel/RiskyAssetConsumerType.ipynb>`__: Consumption-saving with one risky and one risk-free asset": [[67, "`ConsRiskyAssetModel-<../ConsPortfolioModel/RiskyAssetConsumerType.ipynb>`__:-Consumption-saving-with-one-risky-and-one-risk-free-asset"]], "`GenIncProcessConsumerType <../ConsGenIncProcessModel/GenIncProcessConsumerType.ipynb>`__: Generalized income processes": [[67, "`GenIncProcessConsumerType-<../ConsGenIncProcessModel/GenIncProcessConsumerType.ipynb>`__:-Generalized-income-processes"]], "`IndShockConsumerType <../ConsIndShockModel/IndShockConsumerType.ipynb>`__: Consumption-saving with permanent-transitory income risk": [[67, "`IndShockConsumerType-<../ConsIndShockModel/IndShockConsumerType.ipynb>`__:-Consumption-saving-with-permanent-transitory-income-risk"]], "`IndShockExplicitPermIncConsumerType <../ConsGenIncProcessModel/GenIncProcessConsumerType.ipynb>`__: Workhorse model with explicit permanent income": [[67, "`IndShockExplicitPermIncConsumerType-<../ConsGenIncProcessModel/GenIncProcessConsumerType.ipynb>`__:-Workhorse-model-with-explicit-permanent-income"]], "`KinkedRconsumerType <../ConsIndShockModel/KinkedRconsumerType.ipynb>`__: Consumption-saving with a higher interest rate for borrowing": [[67, "`KinkedRconsumerType-<../ConsIndShockModel/KinkedRconsumerType.ipynb>`__:-Consumption-saving-with-a-higher-interest-rate-for-borrowing"]], "`KinkyPrefConsumerType <../ConsPrefShockModel/PrefShockConsumerType.ipynb>`__: Preference shocks and different interest rates for borrowing vs saving": [[67, "`KinkyPrefConsumerType-<../ConsPrefShockModel/PrefShockConsumerType.ipynb>`__:-Preference-shocks-and-different-interest-rates-for-borrowing-vs-saving"]], "`MedExtMargConsumerType <../ConsMedModel/MedExtMargConsumerType.ipynb>`__: Medical care choice on the extensive margin": [[67, "`MedExtMargConsumerType-<../ConsMedModel/MedExtMargConsumerType.ipynb>`__:-Medical-care-choice-on-the-extensive-margin"]], "`MedShockConsumerType <../ConsMedModel/MedShockConsumerType.ipynb>`__: Consumption-saving with medical care as a second consumption good": [[67, "`MedShockConsumerType-<../ConsMedModel/MedShockConsumerType.ipynb>`__:-Consumption-saving-with-medical-care-as-a-second-consumption-good"]], "`PerfForesightConsumerType <../ConsIndShockModel/PerfForesightConsumerType.ipynb>`__: Consumption-saving with no financial risk at all": [[67, "`PerfForesightConsumerType-<../ConsIndShockModel/PerfForesightConsumerType.ipynb>`__:-Consumption-saving-with-no-financial-risk-at-all"]], "`PersistentShockConsumerType <../ConsGenIncProcessModel/GenIncProcessConsumerType.ipynb>`__: Consumption-saving model with AR(1) income process": [[67, "`PersistentShockConsumerType-<../ConsGenIncProcessModel/GenIncProcessConsumerType.ipynb>`__:-Consumption-saving-model-with-AR(1)-income-process"]], "`PrefShockConsumerType <../ConsPrefShockModel/PrefShockConsumerType.ipynb>`__: Standard model with marginal utility shocks": [[67, "`PrefShockConsumerType-<../ConsPrefShockModel/PrefShockConsumerType.ipynb>`__:-Standard-model-with-marginal-utility-shocks"]], "`RepAgentConsumerType <../ConsRepAgentModel/RepAgentConsumerType.ipynb>`__: Basic representative agent model": [[67, "`RepAgentConsumerType-<../ConsRepAgentModel/RepAgentConsumerType.ipynb>`__:-Basic-representative-agent-model"]], "`RepAgentMarkovConsumerType <../ConsRepAgentModel/RepAgentConsumerType.ipynb>`__: Representative agent model with a discrete state": [[67, "`RepAgentMarkovConsumerType-<../ConsRepAgentModel/RepAgentConsumerType.ipynb>`__:-Representative-agent-model-with-a-discrete-state"]], "`TractableBufferStockModel <../TractableBufferStockModel/TractableBufferStockConsumerType.ipynb>`__: Illustrative model for learning consumption theory": [[67, "`TractableBufferStockModel-<../TractableBufferStockModel/TractableBufferStockConsumerType.ipynb>`__:-Illustrative-model-for-learning-consumption-theory"]], "calc_ergodic_dist": [[76, "calc_ergodic_dist"]], "conda": [[1, "conda"]], "dcegm": [[30, null]], "define_distribution_grid": [[76, "define_distribution_grid"]], "venv": [[1, "venv"]], "\u201cPseudo-Inverse\u201d Functions": [[66, "%22Pseudo-Inverse%22-Functions"]], "\u201cRisky Contribution\u201d Model (UNKNOWN / UNEXPLAINED)": [[59, null]]}, "docnames": ["docs/CHANGELOG", "docs/guides/contributing", "docs/guides/index", "docs/guides/installation", "docs/guides/krusell_smith", "docs/guides/quick_start", "docs/guides/simulation", "docs/license", "docs/overview/ARKitecture", "docs/overview/index", "docs/overview/introduction", "docs/reference/ConsumptionSaving/ConsAggShockModel", "docs/reference/ConsumptionSaving/ConsBequestModel", "docs/reference/ConsumptionSaving/ConsGenIncProcessModel", "docs/reference/ConsumptionSaving/ConsHealthModel", "docs/reference/ConsumptionSaving/ConsIndShockModel", "docs/reference/ConsumptionSaving/ConsIndShockModelFast", "docs/reference/ConsumptionSaving/ConsLaborModel", "docs/reference/ConsumptionSaving/ConsMarkovModel", "docs/reference/ConsumptionSaving/ConsMedModel", "docs/reference/ConsumptionSaving/ConsNewKeynesianModel", "docs/reference/ConsumptionSaving/ConsPortfolioModel", "docs/reference/ConsumptionSaving/ConsPrefShockModel", "docs/reference/ConsumptionSaving/ConsRepAgentModel", "docs/reference/ConsumptionSaving/ConsRiskyAssetModel", "docs/reference/ConsumptionSaving/ConsRiskyContribModel", "docs/reference/ConsumptionSaving/TractableBufferStockModel", "docs/reference/ConsumptionSaving/index", "docs/reference/index", "docs/reference/tools/core", "docs/reference/tools/dcegm", "docs/reference/tools/distribution", "docs/reference/tools/econforgeinterp", "docs/reference/tools/estimation", "docs/reference/tools/helpers", "docs/reference/tools/incomeprocess", "docs/reference/tools/index", "docs/reference/tools/interpolation", "docs/reference/tools/model", "docs/reference/tools/numba_tools", "docs/reference/tools/rewards", "docs/reference/tools/simulation", "docs/reference/tools/utilities", "docs/reference/tools/validators", "examples/ConsAggShockModel/AggShockConsumerType", "examples/ConsGenIncProcessModel/GenIncProcessConsumerType", "examples/ConsHealthModel/BasicHealthConsumerType", "examples/ConsIndShockModel/IndShockConsumerType", "examples/ConsIndShockModel/KinkedRconsumerType", "examples/ConsIndShockModel/PerfForesightConsumerType", "examples/ConsLaborModel/LaborIntMargConsumerType", "examples/ConsMarkovModel/MarkovConsumerType", "examples/ConsMedModel/MedExtMargConsumerType", "examples/ConsMedModel/MedShockConsumerType", "examples/ConsPortfolioModel/PortfolioConsumerType", "examples/ConsPortfolioModel/RiskyAssetConsumerType", "examples/ConsPortfolioModel/SequentialPortfolioConsumerType", "examples/ConsPrefShockModel/PrefShockConsumerType", "examples/ConsRepAgentModel/RepAgentConsumerType", "examples/ConsRiskyContribModel/RiskyContribConsumerType", "examples/Gentle-Intro/Advanced-Intro", "examples/Gentle-Intro/AgentType-Intro", "examples/Gentle-Intro/Constructors-Intro", "examples/Gentle-Intro/Cycles-Intro", "examples/Gentle-Intro/Gentle-Intro-To-HARK", "examples/Gentle-Intro/Market-Intro", "examples/Gentle-Intro/Methods-Intro", "examples/Gentle-Intro/Model-List", "examples/Gentle-Intro/Simulation-Intro", "examples/Journeys/Journey-PhD", "examples/LifecycleModel/LifecycleModel", "examples/SequenceSpaceJacobians/HANKFiscal_example", "examples/SequenceSpaceJacobians/Jacobian_Example", "examples/SequenceSpaceJacobians/KS-HARK-presentation", "examples/SequenceSpaceJacobians/SSJ-tutorial", "examples/SequenceSpaceJacobians/SSJ_explanation", "examples/SequenceSpaceJacobians/Transition_Matrix_Example", "index"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["docs/CHANGELOG.md", "docs/guides/contributing.md", "docs/guides/index.rst", "docs/guides/installation.md", "docs/guides/krusell_smith.md", "docs/guides/quick_start.md", "docs/guides/simulation.md", "docs/license.md", "docs/overview/ARKitecture.md", "docs/overview/index.rst", "docs/overview/introduction.md", "docs/reference/ConsumptionSaving/ConsAggShockModel.rst", "docs/reference/ConsumptionSaving/ConsBequestModel.rst", "docs/reference/ConsumptionSaving/ConsGenIncProcessModel.rst", "docs/reference/ConsumptionSaving/ConsHealthModel.rst", "docs/reference/ConsumptionSaving/ConsIndShockModel.rst", "docs/reference/ConsumptionSaving/ConsIndShockModelFast.rst", "docs/reference/ConsumptionSaving/ConsLaborModel.rst", "docs/reference/ConsumptionSaving/ConsMarkovModel.rst", "docs/reference/ConsumptionSaving/ConsMedModel.rst", "docs/reference/ConsumptionSaving/ConsNewKeynesianModel.rst", "docs/reference/ConsumptionSaving/ConsPortfolioModel.rst", "docs/reference/ConsumptionSaving/ConsPrefShockModel.rst", "docs/reference/ConsumptionSaving/ConsRepAgentModel.rst", "docs/reference/ConsumptionSaving/ConsRiskyAssetModel.rst", "docs/reference/ConsumptionSaving/ConsRiskyContribModel.rst", "docs/reference/ConsumptionSaving/TractableBufferStockModel.rst", "docs/reference/ConsumptionSaving/index.rst", "docs/reference/index.rst", "docs/reference/tools/core.rst", "docs/reference/tools/dcegm.rst", "docs/reference/tools/distribution.rst", "docs/reference/tools/econforgeinterp.rst", "docs/reference/tools/estimation.rst", "docs/reference/tools/helpers.rst", "docs/reference/tools/incomeprocess.rst", "docs/reference/tools/index.rst", "docs/reference/tools/interpolation.rst", "docs/reference/tools/model.rst", "docs/reference/tools/numba_tools.rst", "docs/reference/tools/rewards.rst", "docs/reference/tools/simulation.rst", "docs/reference/tools/utilities.rst", "docs/reference/tools/validators.rst", "examples/ConsAggShockModel/AggShockConsumerType.ipynb", "examples/ConsGenIncProcessModel/GenIncProcessConsumerType.ipynb", "examples/ConsHealthModel/BasicHealthConsumerType.ipynb", "examples/ConsIndShockModel/IndShockConsumerType.ipynb", "examples/ConsIndShockModel/KinkedRconsumerType.ipynb", "examples/ConsIndShockModel/PerfForesightConsumerType.ipynb", "examples/ConsLaborModel/LaborIntMargConsumerType.ipynb", "examples/ConsMarkovModel/MarkovConsumerType.ipynb", "examples/ConsMedModel/MedExtMargConsumerType.ipynb", "examples/ConsMedModel/MedShockConsumerType.ipynb", "examples/ConsPortfolioModel/PortfolioConsumerType.ipynb", "examples/ConsPortfolioModel/RiskyAssetConsumerType.ipynb", "examples/ConsPortfolioModel/SequentialPortfolioConsumerType.ipynb", "examples/ConsPrefShockModel/PrefShockConsumerType.ipynb", "examples/ConsRepAgentModel/RepAgentConsumerType.ipynb", "examples/ConsRiskyContribModel/RiskyContribConsumerType.ipynb", "examples/Gentle-Intro/Advanced-Intro.ipynb", "examples/Gentle-Intro/AgentType-Intro.ipynb", "examples/Gentle-Intro/Constructors-Intro.ipynb", "examples/Gentle-Intro/Cycles-Intro.ipynb", "examples/Gentle-Intro/Gentle-Intro-To-HARK.ipynb", "examples/Gentle-Intro/Market-Intro.ipynb", "examples/Gentle-Intro/Methods-Intro.ipynb", "examples/Gentle-Intro/Model-List.ipynb", "examples/Gentle-Intro/Simulation-Intro.ipynb", "examples/Journeys/Journey-PhD.ipynb", "examples/LifecycleModel/LifecycleModel.ipynb", "examples/SequenceSpaceJacobians/HANKFiscal_example.ipynb", "examples/SequenceSpaceJacobians/Jacobian_Example.ipynb", "examples/SequenceSpaceJacobians/KS-HARK-presentation.ipynb", "examples/SequenceSpaceJacobians/SSJ-tutorial.ipynb", "examples/SequenceSpaceJacobians/SSJ_explanation.ipynb", "examples/SequenceSpaceJacobians/Transition_Matrix_Example.ipynb", "index.rst"], "indexentries": {"add_aggshkdstn() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.add_AggShkDstn", false]], "add_aggshkdstn() (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.add_AggShkDstn", false]], "add_discrete_outcome() (in module hark.distributions)": [[31, "HARK.distributions.add_discrete_outcome", false]], "add_discrete_outcome_constant_mean() (in module hark.distributions)": [[31, "HARK.distributions.add_discrete_outcome_constant_mean", false]], "add_to_time_inv() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.add_to_time_inv", false]], "add_to_time_inv() (hark.core.parameters method)": [[29, "HARK.core.Parameters.add_to_time_inv", false]], "add_to_time_vary() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.add_to_time_vary", false]], "add_to_time_vary() (hark.core.parameters method)": [[29, "HARK.core.Parameters.add_to_time_vary", false]], "agent_database (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.agent_database", false]], "agent_type (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.agent_type", false]], "agent_type_count (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.agent_type_count", false]], "agentpopulation (class in hark.core)": [[29, "HARK.core.AgentPopulation", false]], "agents (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.agents", false]], "agenttype (class in hark.core)": [[29, "HARK.core.AgentType", false]], "agenttypemontecarlosimulator (class in hark.simulation.monte_carlo)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator", false]], "aggregate (class in hark.model)": [[38, "HARK.model.Aggregate", false]], "aggregatesavingrule (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggregateSavingRule", false]], "aggshockconsumertype (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType", false]], "aggshockmarkovconsumertype (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType", false]], "aggshocksdynamicrule (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShocksDynamicRule", false]], "antider_interp() (hark.interpolation.cubichermiteinterp method)": [[37, "HARK.interpolation.CubicHermiteInterp.antider_interp", false]], "append_solution() (hark.consumptionsaving.consindshockmodel.consumersolution method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.ConsumerSolution.append_solution", false]], "apply_fun_to_vals() (in module hark.utilities)": [[42, "HARK.utilities.apply_fun_to_vals", false]], "approx_beta() (in module hark.distributions)": [[31, "HARK.distributions.approx_beta", false]], "approx_distributions() (hark.core.agentpopulation method)": [[29, "HARK.core.AgentPopulation.approx_distributions", false]], "approx_lognormal_gauss_hermite() (in module hark.distributions)": [[31, "HARK.distributions.approx_lognormal_gauss_hermite", false]], "assign_parameters() (hark.core.model method)": [[29, "HARK.core.Model.assign_parameters", false]], "attrs (hark.distributions.discretedistributionlabeled property)": [[31, "HARK.distributions.DiscreteDistributionLabeled.attrs", false]], "axtragrid_default (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.aXtraGrid_default", false]], "axtragrid_default (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.aXtraGrid_default", false]], "axtragrid_default (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.aXtraGrid_default", false]], "axtragrid_default (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.aXtraGrid_default", false]], "axtragrid_default (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.aXtraGrid_default", false]], "axtragrid_default (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.aXtraGrid_default", false]], "axtragrid_defaults (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.aXtraGrid_defaults", false]], "axtragrid_defaults (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.aXtraGrid_defaults", false]], "axtragrid_defaults (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.aXtraGrid_defaults", false]], "axtragrid_defaults (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.aXtraGrid_defaults", false]], "basichealthconsumertype (class in hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType", false]], "benchmark() (in module hark.utilities)": [[42, "HARK.utilities.benchmark", false]], "bequestwarmglowconsumertype (class in hark.consumptionsaving.consbequestmodel)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowConsumerType", false]], "bequestwarmglowportfoliotype (class in hark.consumptionsaving.consbequestmodel)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowPortfolioType", false]], "bernoulli (class in hark.distributions)": [[31, "HARK.distributions.Bernoulli", false]], "bilinearinterp (class in hark.interpolation)": [[37, "HARK.interpolation.BilinearInterp", false]], "bilinearinterponinterp1d (class in hark.interpolation)": [[37, "HARK.interpolation.BilinearInterpOnInterp1D", false]], "bilinearinterponinterp2d (class in hark.interpolation)": [[37, "HARK.interpolation.BilinearInterpOnInterp2D", false]], "binaryincshkdstn (class in hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.BinaryIncShkDstn", false]], "block (class in hark.model)": [[38, "HARK.model.Block", false]], "blocks (hark.model.rblock attribute)": [[38, "HARK.model.RBlock.blocks", false]], "bootstrap_sample_from_data() (in module hark.estimation)": [[33, "HARK.estimation.bootstrap_sample_from_data", false]], "boundary_check() (in module hark.interpolation)": [[37, "HARK.interpolation.boundary_check", false]], "bufferstockincshkdstn (class in hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.BufferStockIncShkDstn", false]], "calc_afunc() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.calc_AFunc", false]], "calc_afunc() (hark.consumptionsaving.consaggshockmodel.cobbdouglasmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy.calc_AFunc", false]], "calc_bounding_values() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.calc_bounding_values", false]], "calc_bounding_values() (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.calc_bounding_values", false]], "calc_bounding_values() (hark.consumptionsaving.conslabormodel.laborintmargconsumertype method)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.calc_bounding_values", false]], "calc_bounding_values() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.calc_bounding_values", false]], "calc_bounding_values() (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.calc_bounding_values", false]], "calc_choice_probs() (in module hark.interpolation)": [[37, "HARK.interpolation.calc_choice_probs", false]], "calc_cross_points() (in module hark.dcegm)": [[30, "HARK.dcegm.calc_cross_points", false]], "calc_dynamics() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.calc_dynamics", false]], "calc_dynamics() (hark.consumptionsaving.consaggshockmodel.smallopeneconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy.calc_dynamics", false]], "calc_dynamics() (hark.consumptionsaving.consaggshockmodel.smallopenmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenMarkovEconomy.calc_dynamics", false]], "calc_ergodic_dist() (hark.consumptionsaving.consnewkeynesianmodel.newkeynesianconsumertype method)": [[20, "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType.calc_ergodic_dist", false]], "calc_exp_next() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.calc_exp_next", false]], "calc_expectation() (in module hark.distributions)": [[31, "HARK.distributions.calc_expectation", false]], "calc_impulse_response_manually() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.calc_impulse_response_manually", false]], "calc_jacobian() (hark.consumptionsaving.consnewkeynesianmodel.newkeynesianconsumertype method)": [[20, "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType.calc_jacobian", false]], "calc_limiting_values() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.calc_limiting_values", false]], "calc_limiting_values() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.calc_limiting_values", false]], "calc_linear_crossing() (in module hark.dcegm)": [[30, "HARK.dcegm.calc_linear_crossing", false]], "calc_log_sum() (in module hark.interpolation)": [[37, "HARK.interpolation.calc_log_sum", false]], "calc_log_sum_choice_probs() (in module hark.interpolation)": [[37, "HARK.interpolation.calc_log_sum_choice_probs", false]], "calc_lognormal_style_pars_from_normal_pars() (in module hark.distributions)": [[31, "HARK.distributions.calc_lognormal_style_pars_from_normal_pars", false]], "calc_nondecreasing_segments() (in module hark.dcegm)": [[30, "HARK.dcegm.calc_nondecreasing_segments", false]], "calc_normal_style_pars_from_lognormal_pars() (in module hark.distributions)": [[31, "HARK.distributions.calc_normal_style_pars_from_lognormal_pars", false]], "calc_r_and_w() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.calc_R_and_W", false]], "calc_reward() (hark.model.dblock method)": [[38, "HARK.model.DBlock.calc_reward", false]], "calc_sharelimit_for_crra() (in module hark.calibration.assets.assetprocesses)": [[35, "HARK.Calibration.Assets.AssetProcesses.calc_ShareLimit_for_CRRA", false]], "calc_stable_points() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.calc_stable_points", false]], "calc_subpop_avg() (in module hark.utilities)": [[42, "HARK.utilities.calc_subpop_avg", false]], "calc_transition_matrix() (hark.consumptionsaving.consnewkeynesianmodel.newkeynesianconsumertype method)": [[20, "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType.calc_transition_matrix", false]], "calibration_by_age() (in module hark.simulation.monte_carlo)": [[41, "HARK.simulation.monte_carlo.calibration_by_age", false]], "carautility() (in module hark.rewards)": [[40, "HARK.rewards.CARAutility", false]], "carautility_inv() (in module hark.rewards)": [[40, "HARK.rewards.CARAutility_inv", false]], "carautility_invp() (in module hark.rewards)": [[40, "HARK.rewards.CARAutility_invP", false]], "carautilityp() (in module hark.rewards)": [[40, "HARK.rewards.CARAutilityP", false]], "carautilityp_inv() (in module hark.rewards)": [[40, "HARK.rewards.CARAutilityP_inv", false]], "carautilitypp() (in module hark.rewards)": [[40, "HARK.rewards.CARAutilityPP", false]], "carautilityppp() (in module hark.rewards)": [[40, "HARK.rewards.CARAutilityPPP", false]], "cdutility() (in module hark.rewards)": [[40, "HARK.rewards.CDutility", false]], "cdutilitypc() (in module hark.rewards)": [[40, "HARK.rewards.CDutilityPc", false]], "cdutilitypc_inv() (in module hark.rewards)": [[40, "HARK.rewards.CDutilityPc_inv", false]], "cdutilitypd() (in module hark.rewards)": [[40, "HARK.rewards.CDutilityPd", false]], "check_aic() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.check_AIC", false]], "check_conditions() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.check_conditions", false]], "check_conditions() (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.check_conditions", false]], "check_conditions() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.check_conditions", false]], "check_elements_of_time_vary_are_lists() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.check_elements_of_time_vary_are_lists", false]], "check_fhwc() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.check_FHWC", false]], "check_fvac() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.check_FVAC", false]], "check_fvac() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.check_FVAC", false]], "check_gichrm() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.check_GICHrm", false]], "check_gicliv() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.check_GICLiv", false]], "check_gicmod() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.check_GICMod", false]], "check_gicraw() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.check_GICRaw", false]], "check_gicsdl() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.check_GICSdl", false]], "check_markov_inputs() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.check_markov_inputs", false]], "check_restrictions() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.check_restrictions", false]], "check_restrictions() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.check_restrictions", false]], "check_ric() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.check_RIC", false]], "check_wric() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.check_WRIC", false]], "clear_history() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.clear_history", false]], "clear_history() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.clear_history", false]], "clear_history() (hark.simulation.monte_carlo.montecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator.clear_history", false]], "cobb_douglas() (in module hark.rewards)": [[40, "HARK.rewards.cobb_douglas", false]], "cobb_douglas_p() (in module hark.rewards)": [[40, "HARK.rewards.cobb_douglas_p", false]], "cobb_douglas_pn() (in module hark.rewards)": [[40, "HARK.rewards.cobb_douglas_pn", false]], "cobb_douglas_pp() (in module hark.rewards)": [[40, "HARK.rewards.cobb_douglas_pp", false]], "cobbdouglaseconomy (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy", false]], "cobbdouglasmarkoveconomy (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy", false]], "combine_incshkdstn_and_riskydstn() (in module hark.calibration.assets.assetprocesses)": [[35, "HARK.Calibration.Assets.AssetProcesses.combine_IncShkDstn_and_RiskyDstn", false]], "combine_indep_dstns() (in module hark.distributions)": [[31, "HARK.distributions.combine_indep_dstns", false]], "combine_indep_wage_and_depr_dstns() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.combine_indep_wage_and_depr_dstns", false]], "compute_steady_state() (hark.consumptionsaving.consnewkeynesianmodel.newkeynesianconsumertype method)": [[20, "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType.compute_steady_state", false]], "conditional (hark.distributions.indexdistribution attribute)": [[31, "HARK.distributions.IndexDistribution.conditional", false]], "const_elast_subs() (in module hark.rewards)": [[40, "HARK.rewards.const_elast_subs", false]], "const_elast_subs_p() (in module hark.rewards)": [[40, "HARK.rewards.const_elast_subs_p", false]], "constantfunction (class in hark.interpolation)": [[37, "HARK.interpolation.ConstantFunction", false]], "construct() (hark.core.model method)": [[29, "HARK.core.Model.construct", false]], "construct_hank_lognormal_income_process_unemployment() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.construct_HANK_lognormal_income_process_unemployment", false]], "construct_lognormal_income_process_unemployment() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.construct_lognormal_income_process_unemployment", false]], "construct_lognormal_wage_dstn() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.construct_lognormal_wage_dstn", false]], "construct_markov_lognormal_income_process_unemployment() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.construct_markov_lognormal_income_process_unemployment", false]], "construct_shocks() (hark.model.dblock method)": [[38, "HARK.model.DBlock.construct_shocks", false]], "construct_shocks() (hark.model.rblock method)": [[38, "HARK.model.RBlock.construct_shocks", false]], "construct_shocks() (in module hark.model)": [[38, "HARK.model.construct_shocks", false]], "consumerlaborsolution (class in hark.consumptionsaving.conslabormodel)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.ConsumerLaborSolution", false]], "consumersolution (class in hark.consumptionsaving.consindshockmodel)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.ConsumerSolution", false]], "continuous_distributions (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.continuous_distributions", false]], "control (class in hark.model)": [[38, "HARK.model.Control", false]], "convergence_criteria (hark.interpolation.constantfunction attribute)": [[37, "HARK.interpolation.ConstantFunction.convergence_criteria", false]], "copy() (hark.core.parameters method)": [[29, "HARK.core.Parameters.copy", false]], "copy_module() (in module hark.helpers)": [[34, "HARK.helpers.copy_module", false]], "copy_module_to_local() (in module hark.helpers)": [[34, "HARK.helpers.copy_module_to_local", false]], "create_database() (hark.core.agentpopulation method)": [[29, "HARK.core.AgentPopulation.create_database", false]], "create_distributed_agents() (hark.core.agentpopulation method)": [[29, "HARK.core.AgentPopulation.create_distributed_agents", false]], "crracdutility() (in module hark.rewards)": [[40, "HARK.rewards.CRRACDutility", false]], "crracdutilitypc() (in module hark.rewards)": [[40, "HARK.rewards.CRRACDutilityPc", false]], "crracdutilitypc_inv() (in module hark.rewards)": [[40, "HARK.rewards.CRRACDutilityPc_inv", false]], "crracdutilitypd() (in module hark.rewards)": [[40, "HARK.rewards.CRRACDutilityPd", false]], "crrautility() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutility", false]], "crrautility_inv() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutility_inv", false]], "crrautility_invp() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutility_invP", false]], "crrautilityp() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutilityP", false]], "crrautilityp_inv() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutilityP_inv", false]], "crrautilityp_invp() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutilityP_invP", false]], "crrautilitypp() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutilityPP", false]], "crrautilityppp() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutilityPPP", false]], "crrautilitypppp() (in module hark.rewards)": [[40, "HARK.rewards.CRRAutilityPPPP", false]], "cthruxfunc (class in hark.consumptionsaving.consmedmodel)": [[19, "HARK.ConsumptionSaving.ConsMedModel.cThruXfunc", false]], "cubic_interp_fast() (in module hark.numba_tools)": [[39, "HARK.numba_tools.cubic_interp_fast", false]], "cubichermiteinterp (class in hark.interpolation)": [[37, "HARK.interpolation.CubicHermiteInterp", false]], "cubicinterp (class in hark.interpolation)": [[37, "HARK.interpolation.CubicInterp", false]], "cultivate() (hark.core.market method)": [[29, "HARK.core.Market.cultivate", false]], "curvilinear2dinterp (class in hark.interpolation)": [[37, "HARK.interpolation.Curvilinear2DInterp", false]], "dblock (class in hark.model)": [[38, "HARK.model.DBlock", false]], "decayinterp (class in hark.econforgeinterp)": [[32, "HARK.econforgeinterp.DecayInterp", false]], "default_ (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype attribute)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.default_", false]], "default_ (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype attribute)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.default_", false]], "default_ (hark.consumptionsaving.consbequestmodel.bequestwarmglowconsumertype attribute)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowConsumerType.default_", false]], "default_ (hark.consumptionsaving.consbequestmodel.bequestwarmglowportfoliotype attribute)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowPortfolioType.default_", false]], "default_ (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.default_", false]], "default_ (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.default_", false]], "default_ (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.default_", false]], "default_ (hark.consumptionsaving.conshealthmodel.basichealthconsumertype attribute)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.default_", false]], "default_ (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.default_", false]], "default_ (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.default_", false]], "default_ (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.default_", false]], "default_ (hark.consumptionsaving.consindshockmodelfast.indshockconsumertypefast attribute)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockConsumerTypeFast.default_", false]], "default_ (hark.consumptionsaving.consindshockmodelfast.perfforesightconsumertypefast attribute)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightConsumerTypeFast.default_", false]], "default_ (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.default_", false]], "default_ (hark.consumptionsaving.consmarkovmodel.markovconsumertype attribute)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.default_", false]], "default_ (hark.consumptionsaving.consmedmodel.medshockconsumertype attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.default_", false]], "default_ (hark.consumptionsaving.consnewkeynesianmodel.newkeynesianconsumertype attribute)": [[20, "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType.default_", false]], "default_ (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.default_", false]], "default_ (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.default_", false]], "default_ (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.default_", false]], "default_ (hark.consumptionsaving.consrepagentmodel.repagentconsumertype attribute)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentConsumerType.default_", false]], "default_ (hark.consumptionsaving.consrepagentmodel.repagentmarkovconsumertype attribute)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType.default_", false]], "default_ (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.default_", false]], "default_ (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.default_", false]], "default_ (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype attribute)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.default_", false]], "default_ (hark.core.agenttype attribute)": [[29, "HARK.core.AgentType.default_", false]], "define_distribution_grid() (hark.consumptionsaving.consnewkeynesianmodel.newkeynesianconsumertype method)": [[20, "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType.define_distribution_grid", false]], "del_from_time_inv() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.del_from_time_inv", false]], "del_from_time_inv() (hark.core.parameters method)": [[29, "HARK.core.Parameters.del_from_time_inv", false]], "del_from_time_vary() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.del_from_time_vary", false]], "del_from_time_vary() (hark.core.parameters method)": [[29, "HARK.core.Parameters.del_from_time_vary", false]], "del_param() (hark.core.model method)": [[29, "HARK.core.Model.del_param", false]], "der() (hark.rewards.utilityfunction method)": [[40, "HARK.rewards.UtilityFunction.der", false]], "der_interp() (hark.interpolation.cubichermiteinterp method)": [[37, "HARK.interpolation.CubicHermiteInterp.der_interp", false]], "derinv() (hark.rewards.utilityfunccrra method)": [[40, "HARK.rewards.UtilityFuncCRRA.derinv", false]], "derivative() (hark.interpolation.constantfunction method)": [[37, "HARK.interpolation.ConstantFunction.derivative", false]], "derivative() (hark.interpolation.harkinterpolator1d method)": [[37, "HARK.interpolation.HARKinterpolator1D.derivative", false]], "derivative() (hark.interpolation.identityfunction method)": [[37, "HARK.interpolation.IdentityFunction.derivative", false]], "derivative() (hark.rewards.utilityfunccobbdouglas method)": [[40, "HARK.rewards.UtilityFuncCobbDouglas.derivative", false]], "derivative() (hark.rewards.utilityfunccobbdouglascrra method)": [[40, "HARK.rewards.UtilityFuncCobbDouglasCRRA.derivative", false]], "derivative() (hark.rewards.utilityfuncconstelastsubs method)": [[40, "HARK.rewards.UtilityFuncConstElastSubs.derivative", false]], "derivative() (hark.rewards.utilityfunccrra method)": [[40, "HARK.rewards.UtilityFuncCRRA.derivative", false]], "derivative() (hark.rewards.utilityfuncstonegeary method)": [[40, "HARK.rewards.UtilityFuncStoneGeary.derivative", false]], "derivative() (hark.rewards.utilityfunction method)": [[40, "HARK.rewards.UtilityFunction.derivative", false]], "derivativew() (hark.interpolation.constantfunction method)": [[37, "HARK.interpolation.ConstantFunction.derivativeW", false]], "derivativew() (hark.interpolation.harkinterpolator4d method)": [[37, "HARK.interpolation.HARKinterpolator4D.derivativeW", false]], "derivativew() (hark.interpolation.identityfunction method)": [[37, "HARK.interpolation.IdentityFunction.derivativeW", false]], "derivativex() (hark.consumptionsaving.consmedmodel.cthruxfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.cThruXfunc.derivativeX", false]], "derivativex() (hark.consumptionsaving.consmedmodel.medshockpolicyfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockPolicyFunc.derivativeX", false]], "derivativex() (hark.consumptionsaving.consmedmodel.medthruxfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedThruXfunc.derivativeX", false]], "derivativex() (hark.interpolation.constantfunction method)": [[37, "HARK.interpolation.ConstantFunction.derivativeX", false]], "derivativex() (hark.interpolation.curvilinear2dinterp method)": [[37, "HARK.interpolation.Curvilinear2DInterp.derivativeX", false]], "derivativex() (hark.interpolation.harkinterpolator1d method)": [[37, "HARK.interpolation.HARKinterpolator1D.derivativeX", false]], "derivativex() (hark.interpolation.harkinterpolator2d method)": [[37, "HARK.interpolation.HARKinterpolator2D.derivativeX", false]], "derivativex() (hark.interpolation.harkinterpolator3d method)": [[37, "HARK.interpolation.HARKinterpolator3D.derivativeX", false]], "derivativex() (hark.interpolation.harkinterpolator4d method)": [[37, "HARK.interpolation.HARKinterpolator4D.derivativeX", false]], "derivativex() (hark.interpolation.identityfunction method)": [[37, "HARK.interpolation.IdentityFunction.derivativeX", false]], "derivativex() (hark.interpolation.margvaluefunccrra method)": [[37, "HARK.interpolation.MargValueFuncCRRA.derivativeX", false]], "derivativex() (hark.interpolation.variablelowerboundfunc2d method)": [[37, "HARK.interpolation.VariableLowerBoundFunc2D.derivativeX", false]], "derivativex() (hark.interpolation.variablelowerboundfunc3d method)": [[37, "HARK.interpolation.VariableLowerBoundFunc3D.derivativeX", false]], "derivativexx() (hark.interpolation.constantfunction method)": [[37, "HARK.interpolation.ConstantFunction.derivativeXX", false]], "derivativey() (hark.consumptionsaving.consmedmodel.cthruxfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.cThruXfunc.derivativeY", false]], "derivativey() (hark.consumptionsaving.consmedmodel.medshockpolicyfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockPolicyFunc.derivativeY", false]], "derivativey() (hark.consumptionsaving.consmedmodel.medthruxfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedThruXfunc.derivativeY", false]], "derivativey() (hark.interpolation.constantfunction method)": [[37, "HARK.interpolation.ConstantFunction.derivativeY", false]], "derivativey() (hark.interpolation.curvilinear2dinterp method)": [[37, "HARK.interpolation.Curvilinear2DInterp.derivativeY", false]], "derivativey() (hark.interpolation.harkinterpolator2d method)": [[37, "HARK.interpolation.HARKinterpolator2D.derivativeY", false]], "derivativey() (hark.interpolation.harkinterpolator3d method)": [[37, "HARK.interpolation.HARKinterpolator3D.derivativeY", false]], "derivativey() (hark.interpolation.harkinterpolator4d method)": [[37, "HARK.interpolation.HARKinterpolator4D.derivativeY", false]], "derivativey() (hark.interpolation.identityfunction method)": [[37, "HARK.interpolation.IdentityFunction.derivativeY", false]], "derivativey() (hark.interpolation.variablelowerboundfunc2d method)": [[37, "HARK.interpolation.VariableLowerBoundFunc2D.derivativeY", false]], "derivativey() (hark.interpolation.variablelowerboundfunc3d method)": [[37, "HARK.interpolation.VariableLowerBoundFunc3D.derivativeY", false]], "derivativez() (hark.consumptionsaving.consmedmodel.cthruxfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.cThruXfunc.derivativeZ", false]], "derivativez() (hark.consumptionsaving.consmedmodel.medshockpolicyfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockPolicyFunc.derivativeZ", false]], "derivativez() (hark.consumptionsaving.consmedmodel.medthruxfunc method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedThruXfunc.derivativeZ", false]], "derivativez() (hark.interpolation.constantfunction method)": [[37, "HARK.interpolation.ConstantFunction.derivativeZ", false]], "derivativez() (hark.interpolation.harkinterpolator3d method)": [[37, "HARK.interpolation.HARKinterpolator3D.derivativeZ", false]], "derivativez() (hark.interpolation.harkinterpolator4d method)": [[37, "HARK.interpolation.HARKinterpolator4D.derivativeZ", false]], "derivativez() (hark.interpolation.identityfunction method)": [[37, "HARK.interpolation.IdentityFunction.derivativeZ", false]], "derivativez() (hark.interpolation.variablelowerboundfunc3d method)": [[37, "HARK.interpolation.VariableLowerBoundFunc3D.derivativeZ", false]], "describe() (hark.core.model method)": [[29, "HARK.core.Model.describe", false]], "describe_constructors() (hark.core.model method)": [[29, "HARK.core.Model.describe_constructors", false]], "describe_model() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.describe_model", false]], "describe_parameters() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.describe_parameters", false]], "describe_parameters() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.describe_parameters", false]], "description (hark.model.dblock attribute)": [[38, "HARK.model.DBlock.description", false]], "description (hark.model.rblock attribute)": [[38, "HARK.model.RBlock.description", false]], "determine_platform() (in module hark.utilities)": [[42, "HARK.utilities.determine_platform", false]], "dim() (hark.distributions.bernoulli method)": [[31, "HARK.distributions.Bernoulli.dim", false]], "dim() (hark.distributions.discretedistribution method)": [[31, "HARK.distributions.DiscreteDistribution.dim", false]], "disable_logging() (in module hark.core)": [[29, "HARK.core.disable_logging", false]], "discrete_distributions (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.discrete_distributions", false]], "discretedistribution (class in hark.distributions)": [[31, "HARK.distributions.DiscreteDistribution", false]], "discretedistributionlabeled (class in hark.distributions)": [[31, "HARK.distributions.DiscreteDistributionLabeled", false]], "discreteinterp (class in hark.interpolation)": [[37, "HARK.interpolation.DiscreteInterp", false]], "discretize() (hark.distributions.discretedistribution method)": [[31, "HARK.distributions.DiscreteDistribution.discretize", false]], "discretize() (hark.distributions.distribution method)": [[31, "HARK.distributions.Distribution.discretize", false]], "discretize() (hark.distributions.indexdistribution method)": [[31, "HARK.distributions.IndexDistribution.discretize", false]], "discretize() (hark.distributions.multivariatenormal method)": [[31, "HARK.distributions.MultivariateNormal.discretize", false]], "discretize() (hark.distributions.normal method)": [[31, "HARK.distributions.Normal.discretize", false]], "discretize() (hark.model.dblock method)": [[38, "HARK.model.DBlock.discretize", false]], "discretize() (hark.model.rblock method)": [[38, "HARK.model.RBlock.discretize", false]], "discretized_shock_dstn() (in module hark.model)": [[38, "HARK.model.discretized_shock_dstn", false]], "dist_of_func() (hark.distributions.discretedistribution method)": [[31, "HARK.distributions.DiscreteDistribution.dist_of_func", false]], "dist_of_func() (hark.distributions.discretedistributionlabeled method)": [[31, "HARK.distributions.DiscreteDistributionLabeled.dist_of_func", false]], "distance() (hark.utilities.nullfunc method)": [[42, "HARK.utilities.NullFunc.distance", false]], "distance_criteria (hark.consumptionsaving.consindshockmodel.consumersolution attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.ConsumerSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consindshockmodelfast.indshocksolution attribute)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consindshockmodelfast.perfforesightsolution attribute)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.conslabormodel.consumerlaborsolution attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.ConsumerLaborSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consmedmodel.cthruxfunc attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.cThruXfunc.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consmedmodel.medshockpolicyfunc attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockPolicyFunc.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consmedmodel.medthruxfunc attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedThruXfunc.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consportfoliomodel.portfoliosolution attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consriskycontribmodel.riskycontribcnssolution attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribCnsSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consriskycontribmodel.riskycontribrebsolution attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribRebSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consriskycontribmodel.riskycontribshasolution attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribShaSolution.distance_criteria", false]], "distance_criteria (hark.consumptionsaving.consriskycontribmodel.riskycontribsolution attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribSolution.distance_criteria", false]], "distance_criteria (hark.econforgeinterp.decayinterp attribute)": [[32, "HARK.econforgeinterp.DecayInterp.distance_criteria", false]], "distance_criteria (hark.econforgeinterp.linearfast attribute)": [[32, "HARK.econforgeinterp.LinearFast.distance_criteria", false]], "distance_criteria (hark.interpolation.bilinearinterp attribute)": [[37, "HARK.interpolation.BilinearInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.bilinearinterponinterp1d attribute)": [[37, "HARK.interpolation.BilinearInterpOnInterp1D.distance_criteria", false]], "distance_criteria (hark.interpolation.bilinearinterponinterp2d attribute)": [[37, "HARK.interpolation.BilinearInterpOnInterp2D.distance_criteria", false]], "distance_criteria (hark.interpolation.cubichermiteinterp attribute)": [[37, "HARK.interpolation.CubicHermiteInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.cubicinterp attribute)": [[37, "HARK.interpolation.CubicInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.curvilinear2dinterp attribute)": [[37, "HARK.interpolation.Curvilinear2DInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.discreteinterp attribute)": [[37, "HARK.interpolation.DiscreteInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.harkinterpolator1d attribute)": [[37, "HARK.interpolation.HARKinterpolator1D.distance_criteria", false]], "distance_criteria (hark.interpolation.harkinterpolator2d attribute)": [[37, "HARK.interpolation.HARKinterpolator2D.distance_criteria", false]], "distance_criteria (hark.interpolation.harkinterpolator3d attribute)": [[37, "HARK.interpolation.HARKinterpolator3D.distance_criteria", false]], "distance_criteria (hark.interpolation.harkinterpolator4d attribute)": [[37, "HARK.interpolation.HARKinterpolator4D.distance_criteria", false]], "distance_criteria (hark.interpolation.identityfunction attribute)": [[37, "HARK.interpolation.IdentityFunction.distance_criteria", false]], "distance_criteria (hark.interpolation.indexedinterp attribute)": [[37, "HARK.interpolation.IndexedInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.linearinterp attribute)": [[37, "HARK.interpolation.LinearInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.linearinterponinterp1d attribute)": [[37, "HARK.interpolation.LinearInterpOnInterp1D.distance_criteria", false]], "distance_criteria (hark.interpolation.linearinterponinterp2d attribute)": [[37, "HARK.interpolation.LinearInterpOnInterp2D.distance_criteria", false]], "distance_criteria (hark.interpolation.lowerenvelope attribute)": [[37, "HARK.interpolation.LowerEnvelope.distance_criteria", false]], "distance_criteria (hark.interpolation.lowerenvelope2d attribute)": [[37, "HARK.interpolation.LowerEnvelope2D.distance_criteria", false]], "distance_criteria (hark.interpolation.lowerenvelope3d attribute)": [[37, "HARK.interpolation.LowerEnvelope3D.distance_criteria", false]], "distance_criteria (hark.interpolation.margmargvaluefunccrra attribute)": [[37, "HARK.interpolation.MargMargValueFuncCRRA.distance_criteria", false]], "distance_criteria (hark.interpolation.margvaluefunccrra attribute)": [[37, "HARK.interpolation.MargValueFuncCRRA.distance_criteria", false]], "distance_criteria (hark.interpolation.quadlinearinterp attribute)": [[37, "HARK.interpolation.QuadlinearInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.trilinearinterp attribute)": [[37, "HARK.interpolation.TrilinearInterp.distance_criteria", false]], "distance_criteria (hark.interpolation.trilinearinterponinterp1d attribute)": [[37, "HARK.interpolation.TrilinearInterpOnInterp1D.distance_criteria", false]], "distance_criteria (hark.interpolation.upperenvelope attribute)": [[37, "HARK.interpolation.UpperEnvelope.distance_criteria", false]], "distance_criteria (hark.interpolation.valuefunccrra attribute)": [[37, "HARK.interpolation.ValueFuncCRRA.distance_criteria", false]], "distance_criteria (hark.interpolation.variablelowerboundfunc2d attribute)": [[37, "HARK.interpolation.VariableLowerBoundFunc2D.distance_criteria", false]], "distance_criteria (hark.interpolation.variablelowerboundfunc3d attribute)": [[37, "HARK.interpolation.VariableLowerBoundFunc3D.distance_criteria", false]], "distance_criteria (hark.rewards.utilityfunccobbdouglas attribute)": [[40, "HARK.rewards.UtilityFuncCobbDouglas.distance_criteria", false]], "distance_criteria (hark.rewards.utilityfunccobbdouglascrra attribute)": [[40, "HARK.rewards.UtilityFuncCobbDouglasCRRA.distance_criteria", false]], "distance_criteria (hark.rewards.utilityfuncconstelastsubs attribute)": [[40, "HARK.rewards.UtilityFuncConstElastSubs.distance_criteria", false]], "distance_criteria (hark.rewards.utilityfunccrra attribute)": [[40, "HARK.rewards.UtilityFuncCRRA.distance_criteria", false]], "distance_criteria (hark.rewards.utilityfunction attribute)": [[40, "HARK.rewards.UtilityFunction.distance_criteria", false]], "distr_of_function() (in module hark.distributions)": [[31, "HARK.distributions.distr_of_function", false]], "distribute_params() (in module hark.core)": [[29, "HARK.core.distribute_params", false]], "distributed_params (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.distributed_params", false]], "distribution (class in hark.distributions)": [[31, "HARK.distributions.Distribution", false]], "distributions (hark.consumptionsaving.conshealthmodel.basichealthconsumertype attribute)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.distributions", false]], "distributions (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.distributions", false]], "distributions (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.distributions", false]], "distributions (hark.consumptionsaving.consmarkovmodel.markovconsumertype attribute)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.distributions", false]], "distributions (hark.consumptionsaving.consmedmodel.medshockconsumertype attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.distributions", false]], "distributions (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.distributions", false]], "distributions (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.distributions", false]], "distributions (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.distributions", false]], "distributions (hark.core.agenttype attribute)": [[29, "HARK.core.AgentType.distributions", false]], "draw() (hark.distributions.discretedistribution method)": [[31, "HARK.distributions.DiscreteDistribution.draw", false]], "draw() (hark.distributions.distribution method)": [[31, "HARK.distributions.Distribution.draw", false]], "draw() (hark.distributions.indexdistribution method)": [[31, "HARK.distributions.IndexDistribution.draw", false]], "draw() (hark.distributions.markovprocess method)": [[31, "HARK.distributions.MarkovProcess.draw", false]], "draw() (hark.distributions.multivariatelognormal method)": [[31, "HARK.distributions.MultivariateLognormal.draw", false]], "draw_events() (hark.distributions.discretedistribution method)": [[31, "HARK.distributions.DiscreteDistribution.draw_events", false]], "draw_shocks() (in module hark.simulation.monte_carlo)": [[41, "HARK.simulation.monte_carlo.draw_shocks", false]], "dynamics (hark.model.dblock attribute)": [[38, "HARK.model.DBlock.dynamics", false]], "enable_logging() (in module hark.core)": [[29, "HARK.core.enable_logging", false]], "engine (hark.distributions.indexdistribution attribute)": [[31, "HARK.distributions.IndexDistribution.engine", false]], "epanechnikov_kernel() (in module hark.utilities)": [[42, "HARK.utilities.epanechnikov_kernel", false]], "eval_health_prod() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.eval_health_prod", false]], "eval_marg_health_prod() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.eval_marg_health_prod", false]], "eval_with_derivative() (hark.interpolation.constantfunction method)": [[37, "HARK.interpolation.ConstantFunction.eval_with_derivative", false]], "eval_with_derivative() (hark.interpolation.harkinterpolator1d method)": [[37, "HARK.interpolation.HARKinterpolator1D.eval_with_derivative", false]], "expected() (hark.distributions.discretedistribution method)": [[31, "HARK.distributions.DiscreteDistribution.expected", false]], "expected() (hark.distributions.discretedistributionlabeled method)": [[31, "HARK.distributions.DiscreteDistributionLabeled.expected", false]], "expected() (in module hark.distributions)": [[31, "HARK.distributions.expected", false]], "extrap_decay_hark() (hark.econforgeinterp.decayinterp method)": [[32, "HARK.econforgeinterp.DecayInterp.extrap_decay_hark", false]], "extrap_decay_prop() (hark.econforgeinterp.decayinterp method)": [[32, "HARK.econforgeinterp.DecayInterp.extrap_decay_prop", false]], "extrap_paste() (hark.econforgeinterp.decayinterp method)": [[32, "HARK.econforgeinterp.DecayInterp.extrap_paste", false]], "files_in_dir() (in module hark.utilities)": [[42, "HARK.utilities.files_in_dir", false]], "find_coords() (hark.interpolation.curvilinear2dinterp method)": [[37, "HARK.interpolation.Curvilinear2DInterp.find_coords", false]], "find_coords_numba() (in module hark.interpolation)": [[37, "HARK.interpolation.find_coords_numba", false]], "find_gui() (in module hark.utilities)": [[42, "HARK.utilities.find_gui", false]], "find_sector() (hark.interpolation.curvilinear2dinterp method)": [[37, "HARK.interpolation.Curvilinear2DInterp.find_sector", false]], "find_sector_numba() (in module hark.interpolation)": [[37, "HARK.interpolation.find_sector_numba", false]], "from_dataset() (hark.distributions.discretedistributionlabeled class method)": [[31, "HARK.distributions.DiscreteDistributionLabeled.from_dataset", false]], "from_mean_std() (hark.distributions.lognormal class method)": [[31, "HARK.distributions.Lognormal.from_mean_std", false]], "from_unlabeled() (hark.distributions.discretedistributionlabeled class method)": [[31, "HARK.distributions.DiscreteDistributionLabeled.from_unlabeled", false]], "gen_tran_matrix_1d() (in module hark.utilities)": [[42, "HARK.utilities.gen_tran_matrix_1D", false]], "gen_tran_matrix_2d() (in module hark.utilities)": [[42, "HARK.utilities.gen_tran_matrix_2D", false]], "genincprocessconsumertype (class in hark.consumptionsaving.consgenincprocessmodel)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType", false]], "get() (hark.core.parameters method)": [[29, "HARK.core.Parameters.get", false]], "get_adjust() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.get_Adjust", false]], "get_aggshocks() (hark.consumptionsaving.consaggshockmodel.smallopeneconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy.get_AggShocks", false]], "get_arg_names() (in module hark.utilities)": [[42, "HARK.utilities.get_arg_names", false]], "get_arrival_value_function() (hark.model.dblock method)": [[38, "HARK.model.DBlock.get_arrival_value_function", false]], "get_controls() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.conshealthmodel.basichealthconsumertype method)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.conslabormodel.laborintmargconsumertype method)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consmedmodel.medshockconsumertype method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype method)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consrepagentmodel.repagentmarkovconsumertype method)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.get_controls", false]], "get_controls() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.get_controls", false]], "get_controls() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.get_controls", false]], "get_controls() (hark.model.rblock method)": [[38, "HARK.model.RBlock.get_controls", false]], "get_controls_cns() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.get_controls_Cns", false]], "get_controls_reb() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.get_controls_Reb", false]], "get_controls_sha() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.get_controls_Sha", false]], "get_decision_value_function() (hark.model.dblock method)": [[38, "HARK.model.DBlock.get_decision_value_function", false]], "get_dynamics() (hark.model.dblock method)": [[38, "HARK.model.DBlock.get_dynamics", false]], "get_dynamics() (hark.model.rblock method)": [[38, "HARK.model.RBlock.get_dynamics", false]], "get_economy_data() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.get_economy_data", false]], "get_it_from (class in hark.utilities)": [[42, "HARK.utilities.get_it_from", false]], "get_lorenz_shares() (in module hark.utilities)": [[42, "HARK.utilities.get_lorenz_shares", false]], "get_maggnow() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.get_MaggNow", false]], "get_markov_states() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.get_markov_states", false]], "get_mortality() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.get_mortality", false]], "get_mortality() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.get_mortality", false]], "get_parameter() (hark.core.model method)": [[29, "HARK.core.Model.get_parameter", false]], "get_percentiles() (in module hark.utilities)": [[42, "HARK.utilities.get_percentiles", false]], "get_permgrofacagglr() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.get_PermGroFacAggLR", false]], "get_permgrofacagglr() (hark.consumptionsaving.consaggshockmodel.cobbdouglasmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy.get_PermGroFacAggLR", false]], "get_permshkdstn_from_incshkdstn() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.get_PermShkDstn_from_IncShkDstn", false]], "get_permshkdstn_from_incshkdstn_markov() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.get_PermShkDstn_from_IncShkDstn_markov", false]], "get_post_states() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.get_post_states", false]], "get_poststates() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.get_poststates", false]], "get_poststates() (hark.consumptionsaving.conshealthmodel.basichealthconsumertype method)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.get_poststates", false]], "get_poststates() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.get_poststates", false]], "get_poststates() (hark.consumptionsaving.conslabormodel.laborintmargconsumertype method)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.get_poststates", false]], "get_poststates() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.get_poststates", false]], "get_poststates() (hark.consumptionsaving.consmedmodel.medshockconsumertype method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.get_poststates", false]], "get_poststates() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.get_poststates", false]], "get_poststates() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.get_poststates", false]], "get_rfree() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.get_Rfree", false]], "get_rfree() (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.get_Rfree", false]], "get_rfree() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.get_Rfree", false]], "get_rfree() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.get_Rfree", false]], "get_rfree() (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.get_Rfree", false]], "get_rfree() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.get_Rfree", false]], "get_risky() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.get_Risky", false]], "get_shocks() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.conshealthmodel.basichealthconsumertype method)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consmedmodel.medshockconsumertype method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consrepagentmodel.repagentmarkovconsumertype method)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.get_shocks", false]], "get_shocks() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.get_shocks", false]], "get_shocks() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.get_shocks", false]], "get_shocks() (hark.model.dblock method)": [[38, "HARK.model.DBlock.get_shocks", false]], "get_shocks() (hark.model.rblock method)": [[38, "HARK.model.RBlock.get_shocks", false]], "get_state_rule_value_function_from_continuation() (hark.model.dblock method)": [[38, "HARK.model.DBlock.get_state_rule_value_function_from_continuation", false]], "get_states() (hark.consumptionsaving.conslabormodel.laborintmargconsumertype method)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.get_states", false]], "get_states() (hark.consumptionsaving.consrepagentmodel.repagentconsumertype method)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentConsumerType.get_states", false]], "get_states() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.get_states", false]], "get_states_cns() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.get_states_Cns", false]], "get_states_reb() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.get_states_Reb", false]], "get_states_sha() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.get_states_Sha", false]], "get_transhkdstn_from_incshkdstn() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.get_TranShkDstn_from_IncShkDstn", false]], "get_transhkdstn_from_incshkdstn_markov() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.get_TranShkDstn_from_IncShkDstn_markov", false]], "get_transhkgrid_from_transhkdstn() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.get_TranShkGrid_from_TranShkDstn", false]], "get_vars() (hark.model.dblock method)": [[38, "HARK.model.DBlock.get_vars", false]], "get_vars() (hark.model.rblock method)": [[38, "HARK.model.RBlock.get_vars", false]], "getmrkvnow() (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.getMrkvNow", false]], "gradient() (hark.econforgeinterp.linearfast method)": [[32, "HARK.econforgeinterp.LinearFast.gradient", false]], "gradient() (hark.interpolation.valuefunccrra method)": [[37, "HARK.interpolation.ValueFuncCRRA.gradient", false]], "hark.calibration.assets.assetprocesses": [[35, "module-HARK.Calibration.Assets.AssetProcesses", false]], "hark.calibration.income.incomeprocesses": [[35, "module-HARK.Calibration.Income.IncomeProcesses", false]], "hark.consumptionsaving.consaggshockmodel": [[11, "module-HARK.ConsumptionSaving.ConsAggShockModel", false]], "hark.consumptionsaving.consbequestmodel": [[12, "module-HARK.ConsumptionSaving.ConsBequestModel", false]], "hark.consumptionsaving.consgenincprocessmodel": [[13, "module-HARK.ConsumptionSaving.ConsGenIncProcessModel", false]], "hark.consumptionsaving.conshealthmodel": [[14, "module-HARK.ConsumptionSaving.ConsHealthModel", false]], "hark.consumptionsaving.consindshockmodel": [[15, "module-HARK.ConsumptionSaving.ConsIndShockModel", false]], "hark.consumptionsaving.consindshockmodelfast": [[16, "module-HARK.ConsumptionSaving.ConsIndShockModelFast", false]], "hark.consumptionsaving.conslabormodel": [[17, "module-HARK.ConsumptionSaving.ConsLaborModel", false]], "hark.consumptionsaving.consmarkovmodel": [[18, "module-HARK.ConsumptionSaving.ConsMarkovModel", false]], "hark.consumptionsaving.consmedmodel": [[19, "module-HARK.ConsumptionSaving.ConsMedModel", false]], "hark.consumptionsaving.consnewkeynesianmodel": [[20, "module-HARK.ConsumptionSaving.ConsNewKeynesianModel", false]], "hark.consumptionsaving.consportfoliomodel": [[21, "module-HARK.ConsumptionSaving.ConsPortfolioModel", false]], "hark.consumptionsaving.consprefshockmodel": [[22, "module-HARK.ConsumptionSaving.ConsPrefShockModel", false]], "hark.consumptionsaving.consrepagentmodel": [[23, "module-HARK.ConsumptionSaving.ConsRepAgentModel", false]], "hark.consumptionsaving.consriskyassetmodel": [[24, "module-HARK.ConsumptionSaving.ConsRiskyAssetModel", false]], "hark.consumptionsaving.consriskycontribmodel": [[25, "module-HARK.ConsumptionSaving.ConsRiskyContribModel", false]], "hark.consumptionsaving.tractablebufferstockmodel": [[26, "module-HARK.ConsumptionSaving.TractableBufferStockModel", false]], "hark.core": [[29, "module-HARK.core", false]], "hark.dcegm": [[30, "module-HARK.dcegm", false]], "hark.distributions": [[31, "module-HARK.distributions", false]], "hark.econforgeinterp": [[32, "module-HARK.econforgeinterp", false]], "hark.estimation": [[33, "module-HARK.estimation", false]], "hark.helpers": [[34, "module-HARK.helpers", false]], "hark.interpolation": [[37, "module-HARK.interpolation", false]], "hark.model": [[38, "module-HARK.model", false]], "hark.numba_tools": [[39, "module-HARK.numba_tools", false]], "hark.rewards": [[40, "module-HARK.rewards", false]], "hark.simulation.monte_carlo": [[41, "module-HARK.simulation.monte_carlo", false]], "hark.utilities": [[42, "module-HARK.utilities", false]], "hark.validators": [[43, "module-HARK.validators", false]], "harkinterpolator1d (class in hark.interpolation)": [[37, "HARK.interpolation.HARKinterpolator1D", false]], "harkinterpolator2d (class in hark.interpolation)": [[37, "HARK.interpolation.HARKinterpolator2D", false]], "harkinterpolator3d (class in hark.interpolation)": [[37, "HARK.interpolation.HARKinterpolator3D", false]], "harkinterpolator4d (class in hark.interpolation)": [[37, "HARK.interpolation.HARKinterpolator4D", false]], "identityfunction (class in hark.interpolation)": [[37, "HARK.interpolation.IdentityFunction", false]], "in_ipynb() (in module hark.utilities)": [[42, "HARK.utilities.in_ipynb", false]], "incshkdstn_default (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.IncShkDstn_default", false]], "incshkdstn_default (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.IncShkDstn_default", false]], "incshkdstn_default (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.IncShkDstn_default", false]], "incshkdstn_default (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.IncShkDstn_default", false]], "incshkdstn_default (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.IncShkDstn_default", false]], "incshkdstn_default (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.IncShkDstn_default", false]], "incshkdstn_defaults (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.IncShkDstn_defaults", false]], "incshkdstn_defaults (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.IncShkDstn_defaults", false]], "incshkdstn_defaults (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.IncShkDstn_defaults", false]], "incshkdstn_defaults (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.IncShkDstn_defaults", false]], "incshkdstn_hank (class in hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.IncShkDstn_HANK", false]], "indexdistribution (class in hark.distributions)": [[31, "HARK.distributions.IndexDistribution", false]], "indexedinterp (class in hark.interpolation)": [[37, "HARK.interpolation.IndexedInterp", false]], "indshockconsumertype (class in hark.consumptionsaving.consindshockmodel)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType", false]], "indshockconsumertypefast (class in hark.consumptionsaving.consindshockmodelfast)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockConsumerTypeFast", false]], "indshockexplicitpermincconsumertype (class in hark.consumptionsaving.consgenincprocessmodel)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType", false]], "indshockriskyassetconsumertype (class in hark.consumptionsaving.consriskyassetmodel)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType", false]], "indshocksolution (class in hark.consumptionsaving.consindshockmodelfast)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockSolution", false]], "initialize_sim() (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.initialize_sim", false]], "initialize_sim() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.initialize_sim", false]], "initialize_sim() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.initialize_sim", false]], "initialize_sim() (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype method)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.initialize_sim", false]], "initialize_sim() (hark.consumptionsaving.consrepagentmodel.repagentmarkovconsumertype method)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType.initialize_sim", false]], "initialize_sim() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.initialize_sim", false]], "initialize_sim() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.initialize_sim", false]], "initialize_sim() (hark.core.agentpopulation method)": [[29, "HARK.core.AgentPopulation.initialize_sim", false]], "initialize_sim() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.initialize_sim", false]], "initialize_sim() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.initialize_sim", false]], "initialize_sim() (hark.simulation.monte_carlo.montecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator.initialize_sim", false]], "initialize_sym() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.initialize_sym", false]], "install_retirement_func() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.install_retirement_func", false]], "integrate() (hark.interpolation.cubichermiteinterp method)": [[37, "HARK.interpolation.CubicHermiteInterp.integrate", false]], "inv() (hark.rewards.utilityfunction method)": [[40, "HARK.rewards.UtilityFunction.inv", false]], "inverse() (hark.rewards.utilityfunccobbdouglas method)": [[40, "HARK.rewards.UtilityFuncCobbDouglas.inverse", false]], "inverse() (hark.rewards.utilityfunccobbdouglascrra method)": [[40, "HARK.rewards.UtilityFuncCobbDouglasCRRA.inverse", false]], "inverse() (hark.rewards.utilityfunccrra method)": [[40, "HARK.rewards.UtilityFuncCRRA.inverse", false]], "inverse() (hark.rewards.utilityfuncstonegeary method)": [[40, "HARK.rewards.UtilityFuncStoneGeary.inverse", false]], "inverse() (hark.rewards.utilityfunction method)": [[40, "HARK.rewards.UtilityFunction.inverse", false]], "is_time_varying() (hark.core.parameters method)": [[29, "HARK.core.Parameters.is_time_varying", false]], "items() (hark.core.parameters method)": [[29, "HARK.core.Parameters.items", false]], "jump_to_grid_1d() (in module hark.utilities)": [[42, "HARK.utilities.jump_to_grid_1D", false]], "jump_to_grid_2d() (in module hark.utilities)": [[42, "HARK.utilities.jump_to_grid_2D", false]], "kernel_regression() (in module hark.utilities)": [[42, "HARK.utilities.kernel_regression", false]], "keys() (hark.core.parameters method)": [[29, "HARK.core.Parameters.keys", false]], "kinkedrconsumertype (class in hark.consumptionsaving.consindshockmodel)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType", false]], "kinkyprefconsumertype (class in hark.consumptionsaving.consprefshockmodel)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType", false]], "laborintmargconsumertype (class in hark.consumptionsaving.conslabormodel)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType", false]], "lbrcost_default (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.LbrCost_default", false]], "linear_interp_deriv_fast() (in module hark.numba_tools)": [[39, "HARK.numba_tools.linear_interp_deriv_fast", false]], "linear_interp_fast() (in module hark.numba_tools)": [[39, "HARK.numba_tools.linear_interp_fast", false]], "linearfast (class in hark.econforgeinterp)": [[32, "HARK.econforgeinterp.LinearFast", false]], "linearinterp (class in hark.interpolation)": [[37, "HARK.interpolation.LinearInterp", false]], "linearinterponinterp1d (class in hark.interpolation)": [[37, "HARK.interpolation.LinearInterpOnInterp1D", false]], "linearinterponinterp2d (class in hark.interpolation)": [[37, "HARK.interpolation.LinearInterpOnInterp2D", false]], "log_condition_result() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.log_condition_result", false]], "lognormal (class in hark.distributions)": [[31, "HARK.distributions.Lognormal", false]], "lognormpermincshk (class in hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.LognormPermIncShk", false]], "lowerenvelope (class in hark.interpolation)": [[37, "HARK.interpolation.LowerEnvelope", false]], "lowerenvelope2d (class in hark.interpolation)": [[37, "HARK.interpolation.LowerEnvelope2D", false]], "lowerenvelope3d (class in hark.interpolation)": [[37, "HARK.interpolation.LowerEnvelope3D", false]], "m_nrm_next() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.m_nrm_next", false]], "make_adjustdstn() (in module hark.consumptionsaving.consriskyassetmodel)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.make_AdjustDstn", false]], "make_aggshkdstn() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.make_AggShkDstn", false]], "make_aggshkdstn() (hark.consumptionsaving.consaggshockmodel.cobbdouglasmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy.make_AggShkDstn", false]], "make_aggshkdstn() (hark.consumptionsaving.consaggshockmodel.smallopeneconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy.make_AggShkDstn", false]], "make_aggshkdstn() (hark.consumptionsaving.consaggshockmodel.smallopenmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenMarkovEconomy.make_AggShkDstn", false]], "make_aggshkhist() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.make_AggShkHist", false]], "make_aggshkhist() (hark.consumptionsaving.consaggshockmodel.cobbdouglasmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy.make_AggShkHist", false]], "make_aggshkhist() (hark.consumptionsaving.consaggshockmodel.smallopeneconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy.make_AggShkHist", false]], "make_aggshkhist() (hark.consumptionsaving.consaggshockmodel.smallopenmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenMarkovEconomy.make_AggShkHist", false]], "make_ar1_style_plvlnextfunc() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_AR1_style_pLvlNextFunc", false]], "make_assets_grid() (in module hark.utilities)": [[42, "HARK.utilities.make_assets_grid", false]], "make_basic_plvlpctiles() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_basic_pLvlPctiles", false]], "make_basic_ssj() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.make_basic_SSJ", false]], "make_bequest_solution_terminal() (in module hark.consumptionsaving.consbequestmodel)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.make_bequest_solution_terminal", false]], "make_bounded_sharegrid() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.make_bounded_ShareGrid", false]], "make_euler_error_func() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.make_euler_error_func", false]], "make_euler_error_func() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.make_euler_error_func", false]], "make_euler_error_func() (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.make_euler_error_func", false]], "make_euler_error_func() (hark.consumptionsaving.conslabormodel.laborintmargconsumertype method)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.make_euler_error_func", false]], "make_euler_error_func() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.make_euler_error_func", false]], "make_euler_error_func() (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.make_euler_error_func", false]], "make_explicit_perminc_plvlnextfunc() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_explicit_perminc_pLvlNextFunc", false]], "make_figs() (in module hark.utilities)": [[42, "HARK.utilities.make_figs", false]], "make_grid_exp_mult() (in module hark.utilities)": [[42, "HARK.utilities.make_grid_exp_mult", false]], "make_health_grid() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.make_health_grid", false]], "make_history() (hark.core.market method)": [[29, "HARK.core.Market.make_history", false]], "make_labor_intmarg_solution_terminal() (in module hark.consumptionsaving.conslabormodel)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.make_labor_intmarg_solution_terminal", false]], "make_log_polynomial_lbrcost() (in module hark.consumptionsaving.conslabormodel)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.make_log_polynomial_LbrCost", false]], "make_logistic_polynomial_die_prob() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.make_logistic_polynomial_die_prob", false]], "make_lognormal_medshkdstn() (in module hark.consumptionsaving.consmedmodel)": [[19, "HARK.ConsumptionSaving.ConsMedModel.make_lognormal_MedShkDstn", false]], "make_lognormal_prefshkdstn() (in module hark.consumptionsaving.consprefshockmodel)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.make_lognormal_PrefShkDstn", false]], "make_lognormal_riskydstn() (in module hark.calibration.assets.assetprocesses)": [[35, "HARK.Calibration.Assets.AssetProcesses.make_lognormal_RiskyDstn", false]], "make_mnrm_grid() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.make_mNrm_grid", false]], "make_mrkv_history() (hark.consumptionsaving.consaggshockmodel.cobbdouglasmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy.make_Mrkv_history", false]], "make_nnrm_grid() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.make_nNrm_grid", false]], "make_one_period_oo_solver() (in module hark.core)": [[29, "HARK.core.make_one_period_oo_solver", false]], "make_permgrofac_from_ind_and_agg() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_PermGroFac_from_ind_and_agg", false]], "make_persistent_income_process_dict() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_persistent_income_process_dict", false]], "make_plvlgrid_by_simulation() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_pLvlGrid_by_simulation", false]], "make_polynomial_params() (in module hark.utilities)": [[42, "HARK.utilities.make_polynomial_params", false]], "make_polynomial_permgrofac() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_polynomial_PermGroFac", false]], "make_polynomial_permshkstd() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_polynomial_PermShkStd", false]], "make_polynomial_transhkstd() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_polynomial_TranShkStd", false]], "make_shock_history() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.make_shock_history", false]], "make_shock_history() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.make_shock_history", false]], "make_simple_dgrid() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.make_simple_dGrid", false]], "make_simple_sharegrid() (in module hark.consumptionsaving.consriskyassetmodel)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.make_simple_ShareGrid", false]], "make_solution_terminal_consbasichealth() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.make_solution_terminal_ConsBasicHealth", false]], "make_solution_terminal_risky_contrib() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.make_solution_terminal_risky_contrib", false]], "make_tauchen_ar1() (in module hark.distributions)": [[31, "HARK.distributions.make_tauchen_ar1", false]], "make_trivial_plvlnextfunc() (in module hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.make_trivial_pLvlNextFunc", false]], "make_uniform_depreciation_dstn() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.make_uniform_depreciation_dstn", false]], "make_uniform_hlvl_init_dstn() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.make_uniform_HLvl_init_dstn", false]], "make_univariate() (hark.distributions.discretedistribution method)": [[31, "HARK.distributions.DiscreteDistribution.make_univariate", false]], "make_warmglow_portfolio_solution_terminal() (in module hark.consumptionsaving.consbequestmodel)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.make_warmglow_portfolio_solution_terminal", false]], "margmargvaluefunccrra (class in hark.interpolation)": [[37, "HARK.interpolation.MargMargValueFuncCRRA", false]], "margvaluefunccrra (class in hark.interpolation)": [[37, "HARK.interpolation.MargValueFuncCRRA", false]], "market (class in hark.core)": [[29, "HARK.core.Market", false]], "market_action() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.market_action", false]], "markovconsumertype (class in hark.consumptionsaving.consmarkovmodel)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType", false]], "markovprocess (class in hark.distributions)": [[31, "HARK.distributions.MarkovProcess", false]], "mean() (hark.distributions.multivariatelognormal method)": [[31, "HARK.distributions.MultivariateLogNormal.mean", false]], "meanonelognormal (class in hark.distributions)": [[31, "HARK.distributions.MeanOneLogNormal", false]], "medshockconsumertype (class in hark.consumptionsaving.consmedmodel)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType", false]], "medshockpolicyfunc (class in hark.consumptionsaving.consmedmodel)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockPolicyFunc", false]], "medthruxfunc (class in hark.consumptionsaving.consmedmodel)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedThruXfunc", false]], "mill() (hark.core.market method)": [[29, "HARK.core.Market.mill", false]], "mill_rule() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.mill_rule", false]], "mill_rule() (hark.consumptionsaving.consaggshockmodel.cobbdouglasmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy.mill_rule", false]], "mill_rule() (hark.consumptionsaving.consaggshockmodel.smallopeneconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy.mill_rule", false]], "mill_rule() (hark.consumptionsaving.consaggshockmodel.smallopenmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenMarkovEconomy.mill_rule", false]], "minimize_nelder_mead() (in module hark.estimation)": [[33, "HARK.estimation.minimize_nelder_mead", false]], "minimize_powell() (in module hark.estimation)": [[33, "HARK.estimation.minimize_powell", false]], "mixturetranincshk (class in hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.MixtureTranIncShk", false]], "mixturetranincshk_hank (class in hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.MixtureTranIncShk_HANK", false]], "model (class in hark.core)": [[29, "HARK.core.Model", false]], "module": [[11, "module-HARK.ConsumptionSaving.ConsAggShockModel", false], [12, "module-HARK.ConsumptionSaving.ConsBequestModel", false], [13, "module-HARK.ConsumptionSaving.ConsGenIncProcessModel", false], [14, "module-HARK.ConsumptionSaving.ConsHealthModel", false], [15, "module-HARK.ConsumptionSaving.ConsIndShockModel", false], [16, "module-HARK.ConsumptionSaving.ConsIndShockModelFast", false], [17, "module-HARK.ConsumptionSaving.ConsLaborModel", false], [18, "module-HARK.ConsumptionSaving.ConsMarkovModel", false], [19, "module-HARK.ConsumptionSaving.ConsMedModel", false], [20, "module-HARK.ConsumptionSaving.ConsNewKeynesianModel", false], [21, "module-HARK.ConsumptionSaving.ConsPortfolioModel", false], [22, "module-HARK.ConsumptionSaving.ConsPrefShockModel", false], [23, "module-HARK.ConsumptionSaving.ConsRepAgentModel", false], [24, "module-HARK.ConsumptionSaving.ConsRiskyAssetModel", false], [25, "module-HARK.ConsumptionSaving.ConsRiskyContribModel", false], [26, "module-HARK.ConsumptionSaving.TractableBufferStockModel", false], [29, "module-HARK.core", false], [30, "module-HARK.dcegm", false], [31, "module-HARK.distributions", false], [32, "module-HARK.econforgeinterp", false], [33, "module-HARK.estimation", false], [34, "module-HARK.helpers", false], [35, "module-HARK.Calibration.Assets.AssetProcesses", false], [35, "module-HARK.Calibration.Income.IncomeProcesses", false], [37, "module-HARK.interpolation", false], [38, "module-HARK.model", false], [39, "module-HARK.numba_tools", false], [40, "module-HARK.rewards", false], [41, "module-HARK.simulation.monte_carlo", false], [42, "module-HARK.utilities", false], [43, "module-HARK.validators", false]], "montecarlosimulator (class in hark.simulation.monte_carlo)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator", false]], "mround() (in module hark.utilities)": [[42, "HARK.utilities.mround", false]], "multi_thread_commands() (in module hark.core)": [[29, "HARK.core.multi_thread_commands", false]], "multi_thread_commands_fake() (in module hark.core)": [[29, "HARK.core.multi_thread_commands_fake", false]], "multivariatelognormal (class in hark.distributions)": [[31, "HARK.distributions.MultivariateLogNormal", false], [31, "HARK.distributions.MultivariateLognormal", false]], "multivariatenormal (class in hark.distributions)": [[31, "HARK.distributions.MultivariateNormal", false]], "n_nrm_next() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.n_nrm_next", false]], "name (hark.distributions.discretedistributionlabeled property)": [[31, "HARK.distributions.DiscreteDistributionLabeled.name", false]], "name (hark.model.dblock attribute)": [[38, "HARK.model.DBlock.name", false]], "name (hark.model.rblock attribute)": [[38, "HARK.model.RBlock.name", false]], "newkeynesianconsumertype (class in hark.consumptionsaving.consnewkeynesianmodel)": [[20, "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType", false]], "non_empty() (in module hark.validators)": [[43, "HARK.validators.non_empty", false]], "normal (class in hark.distributions)": [[31, "HARK.distributions.Normal", false]], "nullfunc (class in hark.utilities)": [[42, "HARK.utilities.NullFunc", false]], "out_of_bounds() (hark.interpolation.cubichermiteinterp method)": [[37, "HARK.interpolation.CubicHermiteInterp.out_of_bounds", false]], "parallelneldermead() (in module hark.estimation)": [[33, "HARK.estimation.parallelNelderMead", false]], "parameters (class in hark.core)": [[29, "HARK.core.Parameters", false]], "parameters (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.parameters", false]], "perfforesightconsumertype (class in hark.consumptionsaving.consindshockmodel)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType", false]], "perfforesightconsumertypefast (class in hark.consumptionsaving.consindshockmodelfast)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightConsumerTypeFast", false]], "perfforesightsolution (class in hark.consumptionsaving.consindshockmodelfast)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightSolution", false]], "persistentshockconsumertype (class in hark.consumptionsaving.consgenincprocessmodel)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType", false]], "plot_cfunc() (hark.consumptionsaving.conslabormodel.laborintmargconsumertype method)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.plot_cFunc", false]], "plot_funcs() (in module hark.utilities)": [[42, "HARK.utilities.plot_funcs", false]], "plot_funcs_der() (in module hark.utilities)": [[42, "HARK.utilities.plot_funcs_der", false]], "plot_lbrfunc() (hark.consumptionsaving.conslabormodel.laborintmargconsumertype method)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.plot_LbrFunc", false]], "plvlfuncar1 (class in hark.calibration.income.incomeprocesses)": [[35, "HARK.Calibration.Income.IncomeProcesses.pLvlFuncAR1", false]], "plvlfuncar1 (class in hark.consumptionsaving.consgenincprocessmodel)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.pLvlFuncAR1", false]], "plvlgrid_default (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.pLvlGrid_default", false]], "plvlgrid_default (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.pLvlGrid_default", false]], "plvlgrid_default (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.pLvlGrid_default", false]], "plvlnextfunc_default (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.pLvlNextFunc_default", false]], "plvlnextfunc_default (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.pLvlNextFunc_default", false]], "plvlnextfunc_default (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.pLvlNextFunc_default", false]], "plvlpctiles_default (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.pLvlPctiles_default", false]], "plvlpctiles_default (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.pLvlPctiles_default", false]], "plvlpctiles_default (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.pLvlPctiles_default", false]], "population_parameters (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.population_parameters", false]], "portfolioconsumertype (class in hark.consumptionsaving.consportfoliomodel)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType", false]], "portfoliosolution (class in hark.consumptionsaving.consportfoliomodel)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioSolution", false]], "post_solve() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.post_solve", false]], "post_solve() (hark.consumptionsaving.consindshockmodelfast.indshockconsumertypefast method)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockConsumerTypeFast.post_solve", false]], "post_solve() (hark.consumptionsaving.consindshockmodelfast.perfforesightconsumertypefast method)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightConsumerTypeFast.post_solve", false]], "post_solve() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.post_solve", false]], "post_solve() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.post_solve", false]], "poststate_vars (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype attribute)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.poststate_vars", false]], "poststate_vars (hark.core.agenttype attribute)": [[29, "HARK.core.AgentType.poststate_vars", false]], "pre_solve() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consmedmodel.medshockconsumertype method)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consrepagentmodel.repagentconsumertype method)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consrepagentmodel.repagentmarkovconsumertype method)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.pre_solve", false]], "pre_solve() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.pre_solve", false]], "pre_solve() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.pre_solve", false]], "prefshkdstn_defaults (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.PrefShkDstn_defaults", false]], "prefshkdstn_defaults (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.PrefShkDstn_defaults", false]], "prefshockconsumertype (class in hark.consumptionsaving.consprefshockmodel)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType", false]], "print_helper() (in module hark.helpers)": [[34, "HARK.helpers.print_helper", false]], "quadlinearinterp (class in hark.interpolation)": [[37, "HARK.interpolation.QuadlinearInterp", false]], "quiet() (in module hark.core)": [[29, "HARK.core.quiet", false]], "random_seed() (hark.distributions.distribution method)": [[31, "HARK.distributions.Distribution.random_seed", false]], "rblock (class in hark.model)": [[38, "HARK.model.RBlock", false]], "read_shocks_from_history() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.read_shocks_from_history", false]], "read_shocks_from_history() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.read_shocks_from_history", false]], "reap() (hark.core.market method)": [[29, "HARK.core.Market.reap", false]], "rebalance_assets() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.rebalance_assets", false]], "repagentconsumertype (class in hark.consumptionsaving.consrepagentmodel)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentConsumerType", false]], "repagentmarkovconsumertype (class in hark.consumptionsaving.consrepagentmodel)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType", false]], "reset() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.reset", false]], "reset() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.reset", false]], "reset() (hark.consumptionsaving.consaggshockmodel.smallopeneconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy.reset", false]], "reset() (hark.core.market method)": [[29, "HARK.core.Market.reset", false]], "reset() (hark.distributions.distribution method)": [[31, "HARK.distributions.Distribution.reset", false]], "reset() (hark.distributions.multivariatelognormal method)": [[31, "HARK.distributions.MultivariateLognormal.reset", false]], "reset_rng() (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.reset_rng", false]], "reset_rng() (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype method)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.reset_rng", false]], "reset_rng() (hark.consumptionsaving.consrepagentmodel.repagentmarkovconsumertype method)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType.reset_rng", false]], "reset_rng() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.reset_rng", false]], "reset_rng() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.reset_rng", false]], "reset_rng() (hark.simulation.monte_carlo.montecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator.reset_rng", false]], "reward (hark.model.dblock attribute)": [[38, "HARK.model.DBlock.reward", false]], "riskyassetconsumertype (in module hark.consumptionsaving.consriskyassetmodel)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.RiskyAssetConsumerType", false]], "riskycontribcnssolution (class in hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribCnsSolution", false]], "riskycontribconsumertype (class in hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType", false]], "riskycontribrebsolution (class in hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribRebSolution", false]], "riskycontribshasolution (class in hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribShaSolution", false]], "riskycontribsolution (class in hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribSolution", false]], "riskydstn_default (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.RiskyDstn_default", false]], "riskydstn_default (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.RiskyDstn_default", false]], "roots() (hark.interpolation.cubichermiteinterp method)": [[37, "HARK.interpolation.CubicHermiteInterp.roots", false]], "round_in_file() (in module hark.utilities)": [[42, "HARK.utilities.round_in_file", false]], "run_commands() (in module hark.core)": [[29, "HARK.core.run_commands", false]], "rvs() (hark.distributions.multivariatelognormal method)": [[31, "HARK.distributions.MultivariateLogNormal.rvs", false]], "seed (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.seed", false]], "seed (hark.distributions.distribution property)": [[31, "HARK.distributions.Distribution.seed", false]], "select_risky_solver() (in module hark.consumptionsaving.consriskyassetmodel)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.select_risky_solver", false]], "set_many() (hark.core.parameters method)": [[29, "HARK.core.Parameters.set_many", false]], "set_verbosity_level() (in module hark.core)": [[29, "HARK.core.set_verbosity_level", false]], "setup_latex_env_notebook() (in module hark.utilities)": [[42, "HARK.utilities.setup_latex_env_notebook", false]], "sharegrid_default (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.ShareGrid_default", false]], "sharegrid_default (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.ShareGrid_default", false]], "shock_vars_ (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype attribute)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.conshealthmodel.basichealthconsumertype attribute)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.consmarkovmodel.markovconsumertype attribute)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.consmedmodel.medshockconsumertype attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.shock_vars_", false]], "shock_vars_ (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype attribute)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.shock_vars_", false]], "shock_vars_ (hark.core.agenttype attribute)": [[29, "HARK.core.AgentType.shock_vars_", false]], "shocks (hark.model.dblock attribute)": [[38, "HARK.model.DBlock.shocks", false]], "sim_birth() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.sim_birth", false]], "sim_birth() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.sim_birth", false]], "sim_birth() (hark.consumptionsaving.conshealthmodel.basichealthconsumertype method)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.sim_birth", false]], "sim_birth() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.sim_birth", false]], "sim_birth() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.sim_birth", false]], "sim_birth() (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype method)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.sim_birth", false]], "sim_birth() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.sim_birth", false]], "sim_birth() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.sim_birth", false]], "sim_birth() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.sim_birth", false]], "sim_birth() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.sim_birth", false]], "sim_birth() (hark.simulation.monte_carlo.montecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator.sim_birth", false]], "sim_death() (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.sim_death", false]], "sim_death() (hark.consumptionsaving.conshealthmodel.basichealthconsumertype method)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.sim_death", false]], "sim_death() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.sim_death", false]], "sim_death() (hark.consumptionsaving.consmarkovmodel.markovconsumertype method)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.sim_death", false]], "sim_death() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.sim_death", false]], "sim_death() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.sim_death", false]], "sim_one_period() (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype method)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.sim_one_period", false]], "sim_one_period() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.sim_one_period", false]], "sim_one_period() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.sim_one_period", false]], "sim_one_period() (hark.simulation.monte_carlo.montecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator.sim_one_period", false]], "simulate() (hark.core.agentpopulation method)": [[29, "HARK.core.AgentPopulation.simulate", false]], "simulate() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.simulate", false]], "simulate() (hark.simulation.monte_carlo.agenttypemontecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.simulate", false]], "simulate() (hark.simulation.monte_carlo.montecarlosimulator method)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator.simulate", false]], "simulate_dynamics() (in module hark.model)": [[38, "HARK.model.simulate_dynamics", false]], "simulation_default (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.simulation_default", false]], "simulation_default (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.simulation_default", false]], "simulation_default (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.simulation_default", false]], "simulation_default (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.simulation_default", false]], "simulation_default (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.simulation_default", false]], "simulation_default (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.simulation_default", false]], "simulation_defaults (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.simulation_defaults", false]], "simulation_defaults (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.simulation_defaults", false]], "simulation_defaults (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.simulation_defaults", false]], "simulation_defaults (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.simulation_defaults", false]], "simulation_defaults (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.simulation_defaults", false]], "simulator (class in hark.simulation.monte_carlo)": [[41, "HARK.simulation.monte_carlo.Simulator", false]], "smallopeneconomy (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy", false]], "smallopenmarkoveconomy (class in hark.consumptionsaving.consaggshockmodel)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenMarkovEconomy", false]], "solution (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.solution", false]], "solution_terminal_class (hark.consumptionsaving.consindshockmodelfast.indshockconsumertypefast attribute)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockConsumerTypeFast.solution_terminal_class", false]], "solution_terminal_class (hark.consumptionsaving.consindshockmodelfast.perfforesightconsumertypefast attribute)": [[16, "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightConsumerTypeFast.solution_terminal_class", false]], "solve() (hark.core.agentpopulation method)": [[29, "HARK.core.AgentPopulation.solve", false]], "solve() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.solve", false]], "solve() (hark.core.market method)": [[29, "HARK.core.Market.solve", false]], "solve() (hark.interpolation.cubichermiteinterp method)": [[37, "HARK.interpolation.CubicHermiteInterp.solve", false]], "solve_agent() (in module hark.core)": [[29, "HARK.core.solve_agent", false]], "solve_agents() (hark.core.market method)": [[29, "HARK.core.Market.solve_agents", false]], "solve_conslaborintmarg() (in module hark.consumptionsaving.conslabormodel)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.solve_ConsLaborIntMarg", false]], "solve_one_cycle() (in module hark.core)": [[29, "HARK.core.solve_one_cycle", false]], "solve_one_period_consbasichealth() (in module hark.consumptionsaving.conshealthmodel)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.solve_one_period_ConsBasicHealth", false]], "solve_one_period_consportfoliowarmglow() (in module hark.consumptionsaving.consbequestmodel)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.solve_one_period_ConsPortfolioWarmGlow", false]], "solve_one_period_conswarmbequest() (in module hark.consumptionsaving.consbequestmodel)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.solve_one_period_ConsWarmBequest", false]], "solve_riskycontrib_cns() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.solve_RiskyContrib_Cns", false]], "solve_riskycontrib_reb() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.solve_RiskyContrib_Reb", false]], "solve_riskycontrib_sha() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.solve_RiskyContrib_Sha", false]], "solveriskycontrib() (in module hark.consumptionsaving.consriskycontribmodel)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.solveRiskyContrib", false]], "solving_default (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.solving_default", false]], "solving_default (hark.consumptionsaving.consgenincprocessmodel.indshockexplicitpermincconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType.solving_default", false]], "solving_default (hark.consumptionsaving.consgenincprocessmodel.persistentshockconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType.solving_default", false]], "solving_default (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.solving_default", false]], "solving_default (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.solving_default", false]], "solving_default (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.solving_default", false]], "solving_defaults (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.solving_defaults", false]], "solving_defaults (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.solving_defaults", false]], "solving_defaults (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.solving_defaults", false]], "solving_defaults (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.solving_defaults", false]], "solving_defaults (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.solving_defaults", false]], "sow() (hark.core.market method)": [[29, "HARK.core.Market.sow", false]], "stages (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.stages", false]], "state_vars (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.state_vars", false]], "state_vars (hark.consumptionsaving.conshealthmodel.basichealthconsumertype attribute)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.state_vars", false]], "state_vars (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.state_vars", false]], "state_vars (hark.consumptionsaving.consmarkovmodel.markovconsumertype attribute)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.state_vars", false]], "state_vars (hark.consumptionsaving.consmedmodel.medshockconsumertype attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.state_vars", false]], "state_vars (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.state_vars", false]], "state_vars (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype attribute)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.state_vars", false]], "state_vars (hark.core.agenttype attribute)": [[29, "HARK.core.AgentType.state_vars", false]], "state_vars (hark.simulation.monte_carlo.agenttypemontecarlosimulator attribute)": [[41, "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator.state_vars", false]], "state_vars (hark.simulation.monte_carlo.montecarlosimulator attribute)": [[41, "HARK.simulation.monte_carlo.MonteCarloSimulator.state_vars", false]], "stonegearycrrautility() (in module hark.rewards)": [[40, "HARK.rewards.StoneGearyCRRAutility", false]], "stonegearycrrautility_inv() (in module hark.rewards)": [[40, "HARK.rewards.StoneGearyCRRAutility_inv", false]], "stonegearycrrautility_invp() (in module hark.rewards)": [[40, "HARK.rewards.StoneGearyCRRAutility_invP", false]], "stonegearycrrautilityp() (in module hark.rewards)": [[40, "HARK.rewards.StoneGearyCRRAutilityP", false]], "stonegearycrrautilityp_inv() (in module hark.rewards)": [[40, "HARK.rewards.StoneGearyCRRAutilityP_inv", false]], "stonegearycrrautilityp_invp() (in module hark.rewards)": [[40, "HARK.rewards.StoneGearyCRRAutilityP_invP", false]], "stonegearycrrautilitypp() (in module hark.rewards)": [[40, "HARK.rewards.StoneGearyCRRAutilityPP", false]], "store() (hark.core.market method)": [[29, "HARK.core.Market.store", false]], "symulate() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.symulate", false]], "term_age (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.term_age", false]], "test_latex_installation() (in module hark.utilities)": [[42, "HARK.utilities.test_latex_installation", false]], "time_inv (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.time_inv", false]], "time_inv_ (hark.consumptionsaving.consaggshockmodel.aggshockconsumertype attribute)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consaggshockmodel.aggshockmarkovconsumertype attribute)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consbequestmodel.bequestwarmglowconsumertype attribute)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consbequestmodel.bequestwarmglowportfoliotype attribute)": [[12, "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowPortfolioType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.conshealthmodel.basichealthconsumertype attribute)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consindshockmodel.kinkedrconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consmedmodel.medshockconsumertype attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consportfoliomodel.portfolioconsumertype attribute)": [[21, "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consprefshockmodel.kinkyprefconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consrepagentmodel.repagentconsumertype attribute)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consrepagentmodel.repagentmarkovconsumertype attribute)": [[23, "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.time_inv_", false]], "time_inv_ (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype attribute)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.time_inv_", false]], "time_inv_ (hark.core.agenttype attribute)": [[29, "HARK.core.AgentType.time_inv_", false]], "time_var (hark.core.agentpopulation attribute)": [[29, "HARK.core.AgentPopulation.time_var", false]], "time_vary_ (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype attribute)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.conshealthmodel.basichealthconsumertype attribute)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.consindshockmodel.indshockconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype attribute)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.conslabormodel.laborintmargconsumertype attribute)": [[17, "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.consmarkovmodel.markovconsumertype attribute)": [[18, "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.consmedmodel.medshockconsumertype attribute)": [[19, "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.consprefshockmodel.prefshockconsumertype attribute)": [[22, "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype attribute)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.time_vary_", false]], "time_vary_ (hark.consumptionsaving.consriskycontribmodel.riskycontribconsumertype attribute)": [[25, "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType.time_vary_", false]], "time_vary_ (hark.core.agenttype attribute)": [[29, "HARK.core.AgentType.time_vary_", false]], "to_dict() (hark.core.parameters method)": [[29, "HARK.core.Parameters.to_dict", false]], "to_namedtuple() (hark.core.parameters method)": [[29, "HARK.core.Parameters.to_namedtuple", false]], "tractableconsumersolution (class in hark.consumptionsaving.tractablebufferstockmodel)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerSolution", false]], "tractableconsumertype (class in hark.consumptionsaving.tractablebufferstockmodel)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType", false]], "transition() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.transition", false]], "transition() (hark.consumptionsaving.conshealthmodel.basichealthconsumertype method)": [[14, "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType.transition", false]], "transition() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.transition", false]], "transition() (hark.consumptionsaving.tractablebufferstockmodel.tractableconsumertype method)": [[26, "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType.transition", false]], "transition() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.transition", false]], "transition() (hark.model.dblock method)": [[38, "HARK.model.DBlock.transition", false]], "transition_matrix (hark.distributions.markovprocess attribute)": [[31, "HARK.distributions.MarkovProcess.transition_matrix", false]], "triangle_kernel() (in module hark.utilities)": [[42, "HARK.utilities.triangle_kernel", false]], "trilinearinterp (class in hark.interpolation)": [[37, "HARK.interpolation.TrilinearInterp", false]], "trilinearinterponinterp1d (class in hark.interpolation)": [[37, "HARK.interpolation.TrilinearInterpOnInterp1D", false]], "uniform (class in hark.distributions)": [[31, "HARK.distributions.Uniform", false]], "unpack() (hark.core.agenttype method)": [[29, "HARK.core.AgentType.unpack", false]], "unpack_cfunc() (hark.consumptionsaving.consindshockmodel.perfforesightconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType.unpack_cFunc", false]], "unpack_solutions() (hark.core.agentpopulation method)": [[29, "HARK.core.AgentPopulation.unpack_solutions", false]], "update() (hark.consumptionsaving.consaggshockmodel.cobbdouglaseconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy.update", false]], "update() (hark.consumptionsaving.consaggshockmodel.cobbdouglasmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy.update", false]], "update() (hark.consumptionsaving.consaggshockmodel.smallopeneconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy.update", false]], "update() (hark.consumptionsaving.consaggshockmodel.smallopenmarkoveconomy method)": [[11, "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenMarkovEconomy.update", false]], "update() (hark.core.model method)": [[29, "HARK.core.Model.update", false]], "update() (hark.core.parameters method)": [[29, "HARK.core.Parameters.update", false]], "update_dynamics() (hark.core.market method)": [[29, "HARK.core.Market.update_dynamics", false]], "update_income_process() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.update_income_process", false]], "update_income_process() (hark.consumptionsaving.consindshockmodel.indshockconsumertype method)": [[15, "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType.update_income_process", false]], "update_plvlgrid() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.update_pLvlGrid", false]], "update_plvlnextfunc() (hark.consumptionsaving.consgenincprocessmodel.genincprocessconsumertype method)": [[13, "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType.update_pLvlNextFunc", false]], "update_polarity() (hark.interpolation.curvilinear2dinterp method)": [[37, "HARK.interpolation.Curvilinear2DInterp.update_polarity", false]], "update_timing() (hark.consumptionsaving.consriskyassetmodel.indshockriskyassetconsumertype method)": [[24, "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType.update_timing", false]], "upper_envelope() (in module hark.dcegm)": [[30, "HARK.dcegm.upper_envelope", false]], "upperenvelope (class in hark.interpolation)": [[37, "HARK.interpolation.UpperEnvelope", false]], "utilityfunccobbdouglas (class in hark.rewards)": [[40, "HARK.rewards.UtilityFuncCobbDouglas", false]], "utilityfunccobbdouglascrra (class in hark.rewards)": [[40, "HARK.rewards.UtilityFuncCobbDouglasCRRA", false]], "utilityfuncconstelastsubs (class in hark.rewards)": [[40, "HARK.rewards.UtilityFuncConstElastSubs", false]], "utilityfunccrra (class in hark.rewards)": [[40, "HARK.rewards.UtilityFuncCRRA", false]], "utilityfuncstonegeary (class in hark.rewards)": [[40, "HARK.rewards.UtilityFuncStoneGeary", false]], "utilityfunction (class in hark.rewards)": [[40, "HARK.rewards.UtilityFunction", false]], "valuefunccrra (class in hark.interpolation)": [[37, "HARK.interpolation.ValueFuncCRRA", false]], "values() (hark.core.parameters method)": [[29, "HARK.core.Parameters.values", false]], "variablelowerboundfunc2d (class in hark.interpolation)": [[37, "HARK.interpolation.VariableLowerBoundFunc2D", false]], "variablelowerboundfunc3d (class in hark.interpolation)": [[37, "HARK.interpolation.VariableLowerBoundFunc3D", false]], "variables (hark.distributions.discretedistributionlabeled property)": [[31, "HARK.distributions.DiscreteDistributionLabeled.variables", false]], "verbose() (in module hark.core)": [[29, "HARK.core.verbose", false]], "warnings() (in module hark.core)": [[29, "HARK.core.warnings", false]], "weibull (class in hark.distributions)": [[31, "HARK.distributions.Weibull", false]]}, "objects": {"HARK": [[29, 0, 0, "-", "core"], [30, 0, 0, "-", "dcegm"], [31, 0, 0, "-", "distributions"], [32, 0, 0, "-", "econforgeinterp"], [33, 0, 0, "-", "estimation"], [34, 0, 0, "-", "helpers"], [37, 0, 0, "-", "interpolation"], [38, 0, 0, "-", "model"], [39, 0, 0, "-", "numba_tools"], [40, 0, 0, "-", "rewards"], [42, 0, 0, "-", "utilities"], [43, 0, 0, "-", "validators"]], "HARK.Calibration.Assets": [[35, 0, 0, "-", "AssetProcesses"]], "HARK.Calibration.Assets.AssetProcesses": [[35, 1, 1, "", "calc_ShareLimit_for_CRRA"], [35, 1, 1, "", "combine_IncShkDstn_and_RiskyDstn"], [35, 1, 1, "", "make_lognormal_RiskyDstn"]], "HARK.Calibration.Income": [[35, 0, 0, "-", "IncomeProcesses"]], "HARK.Calibration.Income.IncomeProcesses": [[35, 2, 1, "", "BinaryIncShkDstn"], [35, 2, 1, "", "BufferStockIncShkDstn"], [35, 2, 1, "", "IncShkDstn_HANK"], [35, 2, 1, "", "LognormPermIncShk"], [35, 2, 1, "", "MixtureTranIncShk"], [35, 2, 1, "", "MixtureTranIncShk_HANK"], [35, 1, 1, "", "construct_HANK_lognormal_income_process_unemployment"], [35, 1, 1, "", "construct_lognormal_income_process_unemployment"], [35, 1, 1, "", "construct_lognormal_wage_dstn"], [35, 1, 1, "", "construct_markov_lognormal_income_process_unemployment"], [35, 1, 1, "", "get_PermShkDstn_from_IncShkDstn"], [35, 1, 1, "", "get_PermShkDstn_from_IncShkDstn_markov"], [35, 1, 1, "", "get_TranShkDstn_from_IncShkDstn"], [35, 1, 1, "", "get_TranShkDstn_from_IncShkDstn_markov"], [35, 1, 1, "", "get_TranShkGrid_from_TranShkDstn"], [35, 1, 1, "", "make_AR1_style_pLvlNextFunc"], [35, 1, 1, "", "make_PermGroFac_from_ind_and_agg"], [35, 1, 1, "", "make_basic_pLvlPctiles"], [35, 1, 1, "", "make_explicit_perminc_pLvlNextFunc"], [35, 1, 1, "", "make_pLvlGrid_by_simulation"], [35, 1, 1, "", "make_persistent_income_process_dict"], [35, 1, 1, "", "make_polynomial_PermGroFac"], [35, 1, 1, "", "make_polynomial_PermShkStd"], [35, 1, 1, "", "make_polynomial_TranShkStd"], [35, 1, 1, "", "make_trivial_pLvlNextFunc"], [35, 2, 1, "", "pLvlFuncAR1"]], "HARK.ConsumptionSaving": [[11, 0, 0, "-", "ConsAggShockModel"], [12, 0, 0, "-", "ConsBequestModel"], [13, 0, 0, "-", "ConsGenIncProcessModel"], [14, 0, 0, "-", "ConsHealthModel"], [15, 0, 0, "-", "ConsIndShockModel"], [16, 0, 0, "-", "ConsIndShockModelFast"], [17, 0, 0, "-", "ConsLaborModel"], [18, 0, 0, "-", "ConsMarkovModel"], [19, 0, 0, "-", "ConsMedModel"], [20, 0, 0, "-", "ConsNewKeynesianModel"], [21, 0, 0, "-", "ConsPortfolioModel"], [22, 0, 0, "-", "ConsPrefShockModel"], [23, 0, 0, "-", "ConsRepAgentModel"], [24, 0, 0, "-", "ConsRiskyAssetModel"], [25, 0, 0, "-", "ConsRiskyContribModel"], [26, 0, 0, "-", "TractableBufferStockModel"]], "HARK.ConsumptionSaving.ConsAggShockModel": [[11, 2, 1, "", "AggShockConsumerType"], [11, 2, 1, "", "AggShockMarkovConsumerType"], [11, 2, 1, "", "AggShocksDynamicRule"], [11, 2, 1, "", "AggregateSavingRule"], [11, 2, 1, "", "CobbDouglasEconomy"], [11, 2, 1, "", "CobbDouglasMarkovEconomy"], [11, 2, 1, "", "SmallOpenEconomy"], [11, 2, 1, "", "SmallOpenMarkovEconomy"]], "HARK.ConsumptionSaving.ConsAggShockModel.AggShockConsumerType": [[11, 3, 1, "", "add_AggShkDstn"], [11, 3, 1, "", "calc_bounding_values"], [11, 4, 1, "", "default_"], [11, 3, 1, "", "get_MaggNow"], [11, 3, 1, "", "get_Rfree"], [11, 3, 1, "", "get_controls"], [11, 3, 1, "", "get_economy_data"], [11, 3, 1, "", "get_shocks"], [11, 3, 1, "", "make_euler_error_func"], [11, 3, 1, "", "market_action"], [11, 3, 1, "", "pre_solve"], [11, 3, 1, "", "reset"], [11, 3, 1, "", "sim_birth"], [11, 3, 1, "", "sim_death"], [11, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsAggShockModel.AggShockMarkovConsumerType": [[11, 3, 1, "", "add_AggShkDstn"], [11, 4, 1, "", "default_"], [11, 3, 1, "", "getMrkvNow"], [11, 3, 1, "", "get_controls"], [11, 3, 1, "", "get_shocks"], [11, 3, 1, "", "initialize_sim"], [11, 3, 1, "", "reset_rng"], [11, 4, 1, "", "shock_vars_"], [11, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasEconomy": [[11, 3, 1, "", "calc_AFunc"], [11, 3, 1, "", "calc_R_and_W"], [11, 3, 1, "", "calc_dynamics"], [11, 3, 1, "", "get_PermGroFacAggLR"], [11, 3, 1, "", "make_AggShkDstn"], [11, 3, 1, "", "make_AggShkHist"], [11, 3, 1, "", "mill_rule"], [11, 3, 1, "", "reset"], [11, 3, 1, "", "update"]], "HARK.ConsumptionSaving.ConsAggShockModel.CobbDouglasMarkovEconomy": [[11, 3, 1, "", "calc_AFunc"], [11, 3, 1, "", "get_PermGroFacAggLR"], [11, 3, 1, "", "make_AggShkDstn"], [11, 3, 1, "", "make_AggShkHist"], [11, 3, 1, "", "make_Mrkv_history"], [11, 3, 1, "", "mill_rule"], [11, 3, 1, "", "update"]], "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenEconomy": [[11, 3, 1, "", "calc_dynamics"], [11, 3, 1, "", "get_AggShocks"], [11, 3, 1, "", "make_AggShkDstn"], [11, 3, 1, "", "make_AggShkHist"], [11, 3, 1, "", "mill_rule"], [11, 3, 1, "", "reset"], [11, 3, 1, "", "update"]], "HARK.ConsumptionSaving.ConsAggShockModel.SmallOpenMarkovEconomy": [[11, 3, 1, "", "calc_dynamics"], [11, 3, 1, "", "make_AggShkDstn"], [11, 3, 1, "", "make_AggShkHist"], [11, 3, 1, "", "mill_rule"], [11, 3, 1, "", "update"]], "HARK.ConsumptionSaving.ConsBequestModel": [[12, 2, 1, "", "BequestWarmGlowConsumerType"], [12, 2, 1, "", "BequestWarmGlowPortfolioType"], [12, 1, 1, "", "make_bequest_solution_terminal"], [12, 1, 1, "", "make_warmglow_portfolio_solution_terminal"], [12, 1, 1, "", "solve_one_period_ConsPortfolioWarmGlow"], [12, 1, 1, "", "solve_one_period_ConsWarmBequest"]], "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowConsumerType": [[12, 4, 1, "", "default_"], [12, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsBequestModel.BequestWarmGlowPortfolioType": [[12, 4, 1, "", "default_"], [12, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsGenIncProcessModel": [[13, 2, 1, "", "GenIncProcessConsumerType"], [13, 2, 1, "", "IndShockExplicitPermIncConsumerType"], [13, 2, 1, "", "PersistentShockConsumerType"], [13, 2, 1, "", "pLvlFuncAR1"]], "HARK.ConsumptionSaving.ConsGenIncProcessModel.GenIncProcessConsumerType": [[13, 4, 1, "", "IncShkDstn_default"], [13, 4, 1, "", "aXtraGrid_default"], [13, 4, 1, "", "default_"], [13, 3, 1, "", "get_controls"], [13, 3, 1, "", "get_poststates"], [13, 3, 1, "", "install_retirement_func"], [13, 4, 1, "", "pLvlGrid_default"], [13, 4, 1, "", "pLvlNextFunc_default"], [13, 4, 1, "", "pLvlPctiles_default"], [13, 3, 1, "", "pre_solve"], [13, 3, 1, "", "sim_birth"], [13, 4, 1, "", "simulation_default"], [13, 4, 1, "", "solving_default"], [13, 4, 1, "", "state_vars"], [13, 4, 1, "", "time_vary_"], [13, 3, 1, "", "transition"], [13, 3, 1, "", "update_income_process"], [13, 3, 1, "", "update_pLvlGrid"], [13, 3, 1, "", "update_pLvlNextFunc"]], "HARK.ConsumptionSaving.ConsGenIncProcessModel.IndShockExplicitPermIncConsumerType": [[13, 4, 1, "", "IncShkDstn_default"], [13, 4, 1, "", "aXtraGrid_default"], [13, 4, 1, "", "default_"], [13, 4, 1, "", "pLvlGrid_default"], [13, 4, 1, "", "pLvlNextFunc_default"], [13, 4, 1, "", "pLvlPctiles_default"], [13, 4, 1, "", "simulation_default"], [13, 4, 1, "", "solving_default"]], "HARK.ConsumptionSaving.ConsGenIncProcessModel.PersistentShockConsumerType": [[13, 4, 1, "", "IncShkDstn_default"], [13, 4, 1, "", "aXtraGrid_default"], [13, 4, 1, "", "default_"], [13, 4, 1, "", "pLvlGrid_default"], [13, 4, 1, "", "pLvlNextFunc_default"], [13, 4, 1, "", "pLvlPctiles_default"], [13, 4, 1, "", "simulation_default"], [13, 4, 1, "", "solving_default"]], "HARK.ConsumptionSaving.ConsHealthModel": [[14, 2, 1, "", "BasicHealthConsumerType"], [14, 1, 1, "", "calc_exp_next"], [14, 1, 1, "", "combine_indep_wage_and_depr_dstns"], [14, 1, 1, "", "eval_health_prod"], [14, 1, 1, "", "eval_marg_health_prod"], [14, 1, 1, "", "make_health_grid"], [14, 1, 1, "", "make_logistic_polynomial_die_prob"], [14, 1, 1, "", "make_solution_terminal_ConsBasicHealth"], [14, 1, 1, "", "make_uniform_HLvl_init_dstn"], [14, 1, 1, "", "make_uniform_depreciation_dstn"], [14, 1, 1, "", "solve_one_period_ConsBasicHealth"]], "HARK.ConsumptionSaving.ConsHealthModel.BasicHealthConsumerType": [[14, 4, 1, "", "default_"], [14, 4, 1, "", "distributions"], [14, 3, 1, "", "get_controls"], [14, 3, 1, "", "get_poststates"], [14, 3, 1, "", "get_shocks"], [14, 4, 1, "", "shock_vars_"], [14, 3, 1, "", "sim_birth"], [14, 3, 1, "", "sim_death"], [14, 4, 1, "", "state_vars"], [14, 4, 1, "", "time_inv_"], [14, 4, 1, "", "time_vary_"], [14, 3, 1, "", "transition"]], "HARK.ConsumptionSaving.ConsIndShockModel": [[15, 2, 1, "", "ConsumerSolution"], [15, 2, 1, "", "IndShockConsumerType"], [15, 2, 1, "", "KinkedRconsumerType"], [15, 2, 1, "", "PerfForesightConsumerType"]], "HARK.ConsumptionSaving.ConsIndShockModel.ConsumerSolution": [[15, 3, 1, "", "append_solution"], [15, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsIndShockModel.IndShockConsumerType": [[15, 4, 1, "", "IncShkDstn_defaults"], [15, 4, 1, "", "aXtraGrid_defaults"], [15, 3, 1, "", "calc_limiting_values"], [15, 3, 1, "", "check_FVAC"], [15, 3, 1, "", "check_GICHrm"], [15, 3, 1, "", "check_GICLiv"], [15, 3, 1, "", "check_GICMod"], [15, 3, 1, "", "check_GICSdl"], [15, 3, 1, "", "check_WRIC"], [15, 3, 1, "", "check_conditions"], [15, 4, 1, "", "default_"], [15, 3, 1, "", "describe_parameters"], [15, 4, 1, "", "distributions"], [15, 3, 1, "", "get_shocks"], [15, 3, 1, "", "make_euler_error_func"], [15, 3, 1, "", "pre_solve"], [15, 4, 1, "", "shock_vars_"], [15, 4, 1, "", "simulation_defaults"], [15, 4, 1, "", "solving_defaults"], [15, 4, 1, "", "time_inv_"], [15, 4, 1, "", "time_vary_"], [15, 3, 1, "", "update_income_process"]], "HARK.ConsumptionSaving.ConsIndShockModel.KinkedRconsumerType": [[15, 4, 1, "", "IncShkDstn_defaults"], [15, 4, 1, "", "aXtraGrid_defaults"], [15, 3, 1, "", "calc_bounding_values"], [15, 3, 1, "", "check_conditions"], [15, 4, 1, "", "default_"], [15, 3, 1, "", "get_Rfree"], [15, 3, 1, "", "make_euler_error_func"], [15, 4, 1, "", "simulation_defaults"], [15, 4, 1, "", "solving_defaults"], [15, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsIndShockModel.PerfForesightConsumerType": [[15, 3, 1, "", "calc_limiting_values"], [15, 3, 1, "", "calc_stable_points"], [15, 3, 1, "", "check_AIC"], [15, 3, 1, "", "check_FHWC"], [15, 3, 1, "", "check_FVAC"], [15, 3, 1, "", "check_GICRaw"], [15, 3, 1, "", "check_RIC"], [15, 3, 1, "", "check_conditions"], [15, 3, 1, "", "check_restrictions"], [15, 4, 1, "", "default_"], [15, 3, 1, "", "describe_parameters"], [15, 4, 1, "", "distributions"], [15, 3, 1, "", "get_Rfree"], [15, 3, 1, "", "get_controls"], [15, 3, 1, "", "get_poststates"], [15, 3, 1, "", "get_shocks"], [15, 3, 1, "", "initialize_sim"], [15, 3, 1, "", "log_condition_result"], [15, 3, 1, "", "post_solve"], [15, 3, 1, "", "pre_solve"], [15, 4, 1, "", "shock_vars_"], [15, 3, 1, "", "sim_birth"], [15, 3, 1, "", "sim_death"], [15, 4, 1, "", "simulation_defaults"], [15, 4, 1, "", "solving_defaults"], [15, 4, 1, "", "state_vars"], [15, 4, 1, "", "time_inv_"], [15, 4, 1, "", "time_vary_"], [15, 3, 1, "", "transition"], [15, 3, 1, "", "unpack_cFunc"]], "HARK.ConsumptionSaving.ConsIndShockModelFast": [[16, 2, 1, "", "IndShockConsumerTypeFast"], [16, 2, 1, "", "IndShockSolution"], [16, 2, 1, "", "PerfForesightConsumerTypeFast"], [16, 2, 1, "", "PerfForesightSolution"]], "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockConsumerTypeFast": [[16, 4, 1, "", "default_"], [16, 3, 1, "", "post_solve"], [16, 4, 1, "", "solution_terminal_class"]], "HARK.ConsumptionSaving.ConsIndShockModelFast.IndShockSolution": [[16, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightConsumerTypeFast": [[16, 4, 1, "", "default_"], [16, 3, 1, "", "post_solve"], [16, 4, 1, "", "solution_terminal_class"]], "HARK.ConsumptionSaving.ConsIndShockModelFast.PerfForesightSolution": [[16, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsLaborModel": [[17, 2, 1, "", "ConsumerLaborSolution"], [17, 2, 1, "", "LaborIntMargConsumerType"], [17, 1, 1, "", "make_labor_intmarg_solution_terminal"], [17, 1, 1, "", "make_log_polynomial_LbrCost"], [17, 1, 1, "", "solve_ConsLaborIntMarg"]], "HARK.ConsumptionSaving.ConsLaborModel.ConsumerLaborSolution": [[17, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsLaborModel.LaborIntMargConsumerType": [[17, 4, 1, "", "IncShkDstn_default"], [17, 4, 1, "", "LbrCost_default"], [17, 4, 1, "", "aXtraGrid_default"], [17, 3, 1, "", "calc_bounding_values"], [17, 4, 1, "", "default_"], [17, 3, 1, "", "get_controls"], [17, 3, 1, "", "get_poststates"], [17, 3, 1, "", "get_states"], [17, 3, 1, "", "make_euler_error_func"], [17, 3, 1, "", "plot_LbrFunc"], [17, 3, 1, "", "plot_cFunc"], [17, 4, 1, "", "simulation_default"], [17, 4, 1, "", "solving_default"], [17, 4, 1, "", "time_inv_"], [17, 4, 1, "", "time_vary_"]], "HARK.ConsumptionSaving.ConsMarkovModel": [[18, 2, 1, "", "MarkovConsumerType"]], "HARK.ConsumptionSaving.ConsMarkovModel.MarkovConsumerType": [[18, 3, 1, "", "calc_bounding_values"], [18, 3, 1, "", "check_markov_inputs"], [18, 4, 1, "", "default_"], [18, 4, 1, "", "distributions"], [18, 3, 1, "", "get_Rfree"], [18, 3, 1, "", "get_controls"], [18, 3, 1, "", "get_markov_states"], [18, 3, 1, "", "get_poststates"], [18, 3, 1, "", "get_shocks"], [18, 3, 1, "", "initialize_sim"], [18, 3, 1, "", "make_euler_error_func"], [18, 3, 1, "", "pre_solve"], [18, 3, 1, "", "read_shocks_from_history"], [18, 4, 1, "", "shock_vars_"], [18, 3, 1, "", "sim_birth"], [18, 3, 1, "", "sim_death"], [18, 4, 1, "", "state_vars"], [18, 4, 1, "", "time_vary_"]], "HARK.ConsumptionSaving.ConsMedModel": [[19, 2, 1, "", "MedShockConsumerType"], [19, 2, 1, "", "MedShockPolicyFunc"], [19, 2, 1, "", "MedThruXfunc"], [19, 2, 1, "", "cThruXfunc"], [19, 1, 1, "", "make_lognormal_MedShkDstn"]], "HARK.ConsumptionSaving.ConsMedModel.MedShockConsumerType": [[19, 4, 1, "", "default_"], [19, 4, 1, "", "distributions"], [19, 3, 1, "", "get_controls"], [19, 3, 1, "", "get_poststates"], [19, 3, 1, "", "get_shocks"], [19, 3, 1, "", "pre_solve"], [19, 4, 1, "", "shock_vars_"], [19, 4, 1, "", "state_vars"], [19, 4, 1, "", "time_inv_"], [19, 4, 1, "", "time_vary_"]], "HARK.ConsumptionSaving.ConsMedModel.MedShockPolicyFunc": [[19, 3, 1, "", "derivativeX"], [19, 3, 1, "", "derivativeY"], [19, 3, 1, "", "derivativeZ"], [19, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsMedModel.MedThruXfunc": [[19, 3, 1, "", "derivativeX"], [19, 3, 1, "", "derivativeY"], [19, 3, 1, "", "derivativeZ"], [19, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsMedModel.cThruXfunc": [[19, 3, 1, "", "derivativeX"], [19, 3, 1, "", "derivativeY"], [19, 3, 1, "", "derivativeZ"], [19, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsNewKeynesianModel": [[20, 2, 1, "", "NewKeynesianConsumerType"]], "HARK.ConsumptionSaving.ConsNewKeynesianModel.NewKeynesianConsumerType": [[20, 3, 1, "", "calc_ergodic_dist"], [20, 3, 1, "", "calc_jacobian"], [20, 3, 1, "", "calc_transition_matrix"], [20, 3, 1, "", "compute_steady_state"], [20, 4, 1, "", "default_"], [20, 3, 1, "", "define_distribution_grid"]], "HARK.ConsumptionSaving.ConsPortfolioModel": [[21, 2, 1, "", "PortfolioConsumerType"], [21, 2, 1, "", "PortfolioSolution"]], "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioConsumerType": [[21, 4, 1, "", "IncShkDstn_default"], [21, 4, 1, "", "RiskyDstn_default"], [21, 4, 1, "", "ShareGrid_default"], [21, 4, 1, "", "aXtraGrid_default"], [21, 4, 1, "", "default_"], [21, 3, 1, "", "get_controls"], [21, 3, 1, "", "initialize_sim"], [21, 3, 1, "", "sim_birth"], [21, 4, 1, "", "simulation_default"], [21, 4, 1, "", "solving_default"], [21, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsPortfolioModel.PortfolioSolution": [[21, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsPrefShockModel": [[22, 2, 1, "", "KinkyPrefConsumerType"], [22, 2, 1, "", "PrefShockConsumerType"], [22, 1, 1, "", "make_lognormal_PrefShkDstn"]], "HARK.ConsumptionSaving.ConsPrefShockModel.KinkyPrefConsumerType": [[22, 4, 1, "", "IncShkDstn_defaults"], [22, 4, 1, "", "PrefShkDstn_defaults"], [22, 4, 1, "", "aXtraGrid_defaults"], [22, 4, 1, "", "default_"], [22, 4, 1, "", "distributions"], [22, 3, 1, "", "get_Rfree"], [22, 3, 1, "", "pre_solve"], [22, 4, 1, "", "simulation_defaults"], [22, 4, 1, "", "solving_defaults"], [22, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsPrefShockModel.PrefShockConsumerType": [[22, 4, 1, "", "IncShkDstn_defaults"], [22, 4, 1, "", "PrefShkDstn_defaults"], [22, 4, 1, "", "aXtraGrid_defaults"], [22, 3, 1, "", "calc_bounding_values"], [22, 4, 1, "", "default_"], [22, 4, 1, "", "distributions"], [22, 3, 1, "", "get_controls"], [22, 3, 1, "", "get_shocks"], [22, 3, 1, "", "make_euler_error_func"], [22, 3, 1, "", "pre_solve"], [22, 3, 1, "", "reset_rng"], [22, 4, 1, "", "shock_vars_"], [22, 4, 1, "", "simulation_defaults"], [22, 4, 1, "", "solving_defaults"], [22, 4, 1, "", "time_vary_"]], "HARK.ConsumptionSaving.ConsRepAgentModel": [[23, 2, 1, "", "RepAgentConsumerType"], [23, 2, 1, "", "RepAgentMarkovConsumerType"]], "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentConsumerType": [[23, 4, 1, "", "default_"], [23, 3, 1, "", "get_states"], [23, 3, 1, "", "pre_solve"], [23, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsRepAgentModel.RepAgentMarkovConsumerType": [[23, 4, 1, "", "default_"], [23, 3, 1, "", "get_controls"], [23, 3, 1, "", "get_shocks"], [23, 3, 1, "", "initialize_sim"], [23, 3, 1, "", "pre_solve"], [23, 3, 1, "", "reset_rng"], [23, 4, 1, "", "time_inv_"]], "HARK.ConsumptionSaving.ConsRiskyAssetModel": [[24, 2, 1, "", "IndShockRiskyAssetConsumerType"], [24, 4, 1, "", "RiskyAssetConsumerType"], [24, 1, 1, "", "make_AdjustDstn"], [24, 1, 1, "", "make_simple_ShareGrid"], [24, 1, 1, "", "select_risky_solver"]], "HARK.ConsumptionSaving.ConsRiskyAssetModel.IndShockRiskyAssetConsumerType": [[24, 4, 1, "", "IncShkDstn_default"], [24, 4, 1, "", "RiskyDstn_default"], [24, 4, 1, "", "ShareGrid_default"], [24, 4, 1, "", "aXtraGrid_default"], [24, 4, 1, "", "default_"], [24, 4, 1, "", "distributions"], [24, 3, 1, "", "get_Adjust"], [24, 3, 1, "", "get_Rfree"], [24, 3, 1, "", "get_Risky"], [24, 3, 1, "", "get_controls"], [24, 3, 1, "", "get_shocks"], [24, 3, 1, "", "initialize_sim"], [24, 3, 1, "", "pre_solve"], [24, 4, 1, "", "shock_vars_"], [24, 4, 1, "", "simulation_default"], [24, 4, 1, "", "solving_default"], [24, 4, 1, "", "time_inv_"], [24, 4, 1, "", "time_vary_"], [24, 3, 1, "", "update_timing"]], "HARK.ConsumptionSaving.ConsRiskyContribModel": [[25, 2, 1, "", "RiskyContribCnsSolution"], [25, 2, 1, "", "RiskyContribConsumerType"], [25, 2, 1, "", "RiskyContribRebSolution"], [25, 2, 1, "", "RiskyContribShaSolution"], [25, 2, 1, "", "RiskyContribSolution"], [25, 1, 1, "", "m_nrm_next"], [25, 1, 1, "", "make_bounded_ShareGrid"], [25, 1, 1, "", "make_mNrm_grid"], [25, 1, 1, "", "make_nNrm_grid"], [25, 1, 1, "", "make_simple_dGrid"], [25, 1, 1, "", "make_solution_terminal_risky_contrib"], [25, 1, 1, "", "n_nrm_next"], [25, 1, 1, "", "rebalance_assets"], [25, 1, 1, "", "solveRiskyContrib"], [25, 1, 1, "", "solve_RiskyContrib_Cns"], [25, 1, 1, "", "solve_RiskyContrib_Reb"], [25, 1, 1, "", "solve_RiskyContrib_Sha"]], "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribCnsSolution": [[25, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribConsumerType": [[25, 4, 1, "", "default_"], [25, 3, 1, "", "get_controls_Cns"], [25, 3, 1, "", "get_controls_Reb"], [25, 3, 1, "", "get_controls_Sha"], [25, 3, 1, "", "get_post_states"], [25, 3, 1, "", "get_states_Cns"], [25, 3, 1, "", "get_states_Reb"], [25, 3, 1, "", "get_states_Sha"], [25, 3, 1, "", "initialize_sim"], [25, 3, 1, "", "pre_solve"], [25, 4, 1, "", "shock_vars_"], [25, 3, 1, "", "sim_birth"], [25, 3, 1, "", "sim_one_period"], [25, 4, 1, "", "stages"], [25, 4, 1, "", "state_vars"], [25, 4, 1, "", "time_inv_"], [25, 4, 1, "", "time_vary_"]], "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribRebSolution": [[25, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribShaSolution": [[25, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.ConsRiskyContribModel.RiskyContribSolution": [[25, 4, 1, "", "distance_criteria"]], "HARK.ConsumptionSaving.TractableBufferStockModel": [[26, 2, 1, "", "TractableConsumerSolution"], [26, 2, 1, "", "TractableConsumerType"]], "HARK.ConsumptionSaving.TractableBufferStockModel.TractableConsumerType": [[26, 4, 1, "", "default_"], [26, 3, 1, "", "get_controls"], [26, 3, 1, "", "get_poststates"], [26, 3, 1, "", "get_shocks"], [26, 3, 1, "", "post_solve"], [26, 4, 1, "", "poststate_vars"], [26, 3, 1, "", "pre_solve"], [26, 4, 1, "", "shock_vars_"], [26, 3, 1, "", "sim_birth"], [26, 3, 1, "", "sim_death"], [26, 4, 1, "", "state_vars"], [26, 4, 1, "", "time_inv_"], [26, 3, 1, "", "transition"]], "HARK.core": [[29, 2, 1, "", "AgentPopulation"], [29, 2, 1, "", "AgentType"], [29, 2, 1, "", "Market"], [29, 2, 1, "", "Model"], [29, 2, 1, "", "Parameters"], [29, 1, 1, "", "disable_logging"], [29, 1, 1, "", "distribute_params"], [29, 1, 1, "", "enable_logging"], [29, 1, 1, "", "make_one_period_oo_solver"], [29, 1, 1, "", "multi_thread_commands"], [29, 1, 1, "", "multi_thread_commands_fake"], [29, 1, 1, "", "quiet"], [29, 1, 1, "", "run_commands"], [29, 1, 1, "", "set_verbosity_level"], [29, 1, 1, "", "solve_agent"], [29, 1, 1, "", "solve_one_cycle"], [29, 1, 1, "", "verbose"], [29, 1, 1, "", "warnings"]], "HARK.core.AgentPopulation": [[29, 4, 1, "", "agent_database"], [29, 4, 1, "", "agent_type"], [29, 4, 1, "", "agent_type_count"], [29, 4, 1, "", "agents"], [29, 3, 1, "", "approx_distributions"], [29, 4, 1, "", "continuous_distributions"], [29, 3, 1, "", "create_database"], [29, 3, 1, "", "create_distributed_agents"], [29, 4, 1, "", "discrete_distributions"], [29, 4, 1, "", "distributed_params"], [29, 3, 1, "", "initialize_sim"], [29, 4, 1, "", "parameters"], [29, 4, 1, "", "population_parameters"], [29, 4, 1, "", "seed"], [29, 3, 1, "", "simulate"], [29, 4, 1, "", "solution"], [29, 3, 1, "", "solve"], [29, 4, 1, "", "term_age"], [29, 4, 1, "", "time_inv"], [29, 4, 1, "", "time_var"], [29, 3, 1, "", "unpack_solutions"]], "HARK.core.AgentType": [[29, 3, 1, "", "add_to_time_inv"], [29, 3, 1, "", "add_to_time_vary"], [29, 3, 1, "", "calc_impulse_response_manually"], [29, 3, 1, "", "check_elements_of_time_vary_are_lists"], [29, 3, 1, "", "check_restrictions"], [29, 3, 1, "", "clear_history"], [29, 4, 1, "", "default_"], [29, 3, 1, "", "del_from_time_inv"], [29, 3, 1, "", "del_from_time_vary"], [29, 3, 1, "", "describe_model"], [29, 4, 1, "", "distributions"], [29, 3, 1, "", "get_controls"], [29, 3, 1, "", "get_mortality"], [29, 3, 1, "", "get_poststates"], [29, 3, 1, "", "get_shocks"], [29, 3, 1, "", "get_states"], [29, 3, 1, "", "initialize_sim"], [29, 3, 1, "", "initialize_sym"], [29, 3, 1, "", "make_basic_SSJ"], [29, 3, 1, "", "make_shock_history"], [29, 3, 1, "", "post_solve"], [29, 4, 1, "", "poststate_vars"], [29, 3, 1, "", "pre_solve"], [29, 3, 1, "", "read_shocks_from_history"], [29, 3, 1, "", "reset_rng"], [29, 4, 1, "", "shock_vars_"], [29, 3, 1, "", "sim_birth"], [29, 3, 1, "", "sim_death"], [29, 3, 1, "", "sim_one_period"], [29, 3, 1, "", "simulate"], [29, 3, 1, "", "solve"], [29, 4, 1, "", "state_vars"], [29, 3, 1, "", "symulate"], [29, 4, 1, "", "time_inv_"], [29, 4, 1, "", "time_vary_"], [29, 3, 1, "", "transition"], [29, 3, 1, "", "unpack"]], "HARK.core.Market": [[29, 3, 1, "", "cultivate"], [29, 3, 1, "", "make_history"], [29, 3, 1, "", "mill"], [29, 3, 1, "", "reap"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "solve"], [29, 3, 1, "", "solve_agents"], [29, 3, 1, "", "sow"], [29, 3, 1, "", "store"], [29, 3, 1, "", "update_dynamics"]], "HARK.core.Model": [[29, 3, 1, "", "assign_parameters"], [29, 3, 1, "", "construct"], [29, 3, 1, "", "del_param"], [29, 3, 1, "", "describe"], [29, 3, 1, "", "describe_constructors"], [29, 3, 1, "", "get_parameter"], [29, 3, 1, "", "update"]], "HARK.core.Parameters": [[29, 3, 1, "", "add_to_time_inv"], [29, 3, 1, "", "add_to_time_vary"], [29, 3, 1, "", "copy"], [29, 3, 1, "", "del_from_time_inv"], [29, 3, 1, "", "del_from_time_vary"], [29, 3, 1, "", "get"], [29, 3, 1, "", "is_time_varying"], [29, 3, 1, "", "items"], [29, 3, 1, "", "keys"], [29, 3, 1, "", "set_many"], [29, 3, 1, "", "to_dict"], [29, 3, 1, "", "to_namedtuple"], [29, 3, 1, "", "update"], [29, 3, 1, "", "values"]], "HARK.dcegm": [[30, 1, 1, "", "calc_cross_points"], [30, 1, 1, "", "calc_linear_crossing"], [30, 1, 1, "", "calc_nondecreasing_segments"], [30, 1, 1, "", "upper_envelope"]], "HARK.distributions": [[31, 2, 1, "", "Bernoulli"], [31, 2, 1, "", "DiscreteDistribution"], [31, 2, 1, "", "DiscreteDistributionLabeled"], [31, 2, 1, "", "Distribution"], [31, 2, 1, "", "IndexDistribution"], [31, 2, 1, "", "Lognormal"], [31, 2, 1, "", "MarkovProcess"], [31, 2, 1, "", "MeanOneLogNormal"], [31, 2, 1, "", "MultivariateLogNormal"], [31, 2, 1, "", "MultivariateLognormal"], [31, 2, 1, "", "MultivariateNormal"], [31, 2, 1, "", "Normal"], [31, 2, 1, "", "Uniform"], [31, 2, 1, "", "Weibull"], [31, 1, 1, "", "add_discrete_outcome"], [31, 1, 1, "", "add_discrete_outcome_constant_mean"], [31, 1, 1, "", "approx_beta"], [31, 1, 1, "", "approx_lognormal_gauss_hermite"], [31, 1, 1, "", "calc_expectation"], [31, 1, 1, "", "calc_lognormal_style_pars_from_normal_pars"], [31, 1, 1, "", "calc_normal_style_pars_from_lognormal_pars"], [31, 1, 1, "", "combine_indep_dstns"], [31, 1, 1, "", "distr_of_function"], [31, 1, 1, "", "expected"], [31, 1, 1, "", "make_tauchen_ar1"]], "HARK.distributions.Bernoulli": [[31, 3, 1, "", "dim"]], "HARK.distributions.DiscreteDistribution": [[31, 3, 1, "", "dim"], [31, 3, 1, "", "discretize"], [31, 3, 1, "", "dist_of_func"], [31, 3, 1, "", "draw"], [31, 3, 1, "", "draw_events"], [31, 3, 1, "", "expected"], [31, 3, 1, "", "make_univariate"]], "HARK.distributions.DiscreteDistributionLabeled": [[31, 5, 1, "", "attrs"], [31, 3, 1, "", "dist_of_func"], [31, 3, 1, "", "expected"], [31, 3, 1, "", "from_dataset"], [31, 3, 1, "", "from_unlabeled"], [31, 5, 1, "", "name"], [31, 5, 1, "", "variables"]], "HARK.distributions.Distribution": [[31, 3, 1, "", "discretize"], [31, 3, 1, "", "draw"], [31, 3, 1, "", "random_seed"], [31, 3, 1, "", "reset"], [31, 5, 1, "", "seed"]], "HARK.distributions.IndexDistribution": [[31, 4, 1, "", "conditional"], [31, 3, 1, "", "discretize"], [31, 3, 1, "", "draw"], [31, 4, 1, "", "engine"]], "HARK.distributions.Lognormal": [[31, 3, 1, "", "from_mean_std"]], "HARK.distributions.MarkovProcess": [[31, 3, 1, "", "draw"], [31, 4, 1, "", "transition_matrix"]], "HARK.distributions.MultivariateLogNormal": [[31, 3, 1, "", "mean"], [31, 3, 1, "", "rvs"]], "HARK.distributions.MultivariateLognormal": [[31, 3, 1, "", "draw"], [31, 3, 1, "", "reset"]], "HARK.distributions.MultivariateNormal": [[31, 3, 1, "", "discretize"]], "HARK.distributions.Normal": [[31, 3, 1, "", "discretize"]], "HARK.econforgeinterp": [[32, 2, 1, "", "DecayInterp"], [32, 2, 1, "", "LinearFast"]], "HARK.econforgeinterp.DecayInterp": [[32, 4, 1, "", "distance_criteria"], [32, 3, 1, "", "extrap_decay_hark"], [32, 3, 1, "", "extrap_decay_prop"], [32, 3, 1, "", "extrap_paste"]], "HARK.econforgeinterp.LinearFast": [[32, 4, 1, "", "distance_criteria"], [32, 3, 1, "", "gradient"]], "HARK.estimation": [[33, 1, 1, "", "bootstrap_sample_from_data"], [33, 1, 1, "", "minimize_nelder_mead"], [33, 1, 1, "", "minimize_powell"], [33, 1, 1, "", "parallelNelderMead"]], "HARK.helpers": [[34, 1, 1, "", "copy_module"], [34, 1, 1, "", "copy_module_to_local"], [34, 1, 1, "", "print_helper"]], "HARK.interpolation": [[37, 2, 1, "", "BilinearInterp"], [37, 2, 1, "", "BilinearInterpOnInterp1D"], [37, 2, 1, "", "BilinearInterpOnInterp2D"], [37, 2, 1, "", "ConstantFunction"], [37, 2, 1, "", "CubicHermiteInterp"], [37, 2, 1, "", "CubicInterp"], [37, 2, 1, "", "Curvilinear2DInterp"], [37, 2, 1, "", "DiscreteInterp"], [37, 2, 1, "", "HARKinterpolator1D"], [37, 2, 1, "", "HARKinterpolator2D"], [37, 2, 1, "", "HARKinterpolator3D"], [37, 2, 1, "", "HARKinterpolator4D"], [37, 2, 1, "", "IdentityFunction"], [37, 2, 1, "", "IndexedInterp"], [37, 2, 1, "", "LinearInterp"], [37, 2, 1, "", "LinearInterpOnInterp1D"], [37, 2, 1, "", "LinearInterpOnInterp2D"], [37, 2, 1, "", "LowerEnvelope"], [37, 2, 1, "", "LowerEnvelope2D"], [37, 2, 1, "", "LowerEnvelope3D"], [37, 2, 1, "", "MargMargValueFuncCRRA"], [37, 2, 1, "", "MargValueFuncCRRA"], [37, 2, 1, "", "QuadlinearInterp"], [37, 2, 1, "", "TrilinearInterp"], [37, 2, 1, "", "TrilinearInterpOnInterp1D"], [37, 2, 1, "", "UpperEnvelope"], [37, 2, 1, "", "ValueFuncCRRA"], [37, 2, 1, "", "VariableLowerBoundFunc2D"], [37, 2, 1, "", "VariableLowerBoundFunc3D"], [37, 1, 1, "", "boundary_check"], [37, 1, 1, "", "calc_choice_probs"], [37, 1, 1, "", "calc_log_sum"], [37, 1, 1, "", "calc_log_sum_choice_probs"], [37, 1, 1, "", "find_coords_numba"], [37, 1, 1, "", "find_sector_numba"]], "HARK.interpolation.BilinearInterp": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.BilinearInterpOnInterp1D": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.BilinearInterpOnInterp2D": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.ConstantFunction": [[37, 4, 1, "", "convergence_criteria"], [37, 3, 1, "", "derivative"], [37, 3, 1, "", "derivativeW"], [37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeXX"], [37, 3, 1, "", "derivativeY"], [37, 3, 1, "", "derivativeZ"], [37, 3, 1, "", "eval_with_derivative"]], "HARK.interpolation.CubicHermiteInterp": [[37, 3, 1, "", "antider_interp"], [37, 3, 1, "", "der_interp"], [37, 4, 1, "", "distance_criteria"], [37, 3, 1, "", "integrate"], [37, 3, 1, "", "out_of_bounds"], [37, 3, 1, "", "roots"], [37, 3, 1, "", "solve"]], "HARK.interpolation.CubicInterp": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.Curvilinear2DInterp": [[37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeY"], [37, 4, 1, "", "distance_criteria"], [37, 3, 1, "", "find_coords"], [37, 3, 1, "", "find_sector"], [37, 3, 1, "", "update_polarity"]], "HARK.interpolation.DiscreteInterp": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.HARKinterpolator1D": [[37, 3, 1, "", "derivative"], [37, 3, 1, "", "derivativeX"], [37, 4, 1, "", "distance_criteria"], [37, 3, 1, "", "eval_with_derivative"]], "HARK.interpolation.HARKinterpolator2D": [[37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeY"], [37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.HARKinterpolator3D": [[37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeY"], [37, 3, 1, "", "derivativeZ"], [37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.HARKinterpolator4D": [[37, 3, 1, "", "derivativeW"], [37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeY"], [37, 3, 1, "", "derivativeZ"], [37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.IdentityFunction": [[37, 3, 1, "", "derivative"], [37, 3, 1, "", "derivativeW"], [37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeY"], [37, 3, 1, "", "derivativeZ"], [37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.IndexedInterp": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.LinearInterp": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.LinearInterpOnInterp1D": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.LinearInterpOnInterp2D": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.LowerEnvelope": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.LowerEnvelope2D": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.LowerEnvelope3D": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.MargMargValueFuncCRRA": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.MargValueFuncCRRA": [[37, 3, 1, "", "derivativeX"], [37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.QuadlinearInterp": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.TrilinearInterp": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.TrilinearInterpOnInterp1D": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.UpperEnvelope": [[37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.ValueFuncCRRA": [[37, 4, 1, "", "distance_criteria"], [37, 3, 1, "", "gradient"]], "HARK.interpolation.VariableLowerBoundFunc2D": [[37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeY"], [37, 4, 1, "", "distance_criteria"]], "HARK.interpolation.VariableLowerBoundFunc3D": [[37, 3, 1, "", "derivativeX"], [37, 3, 1, "", "derivativeY"], [37, 3, 1, "", "derivativeZ"], [37, 4, 1, "", "distance_criteria"]], "HARK.model": [[38, 2, 1, "", "Aggregate"], [38, 2, 1, "", "Block"], [38, 2, 1, "", "Control"], [38, 2, 1, "", "DBlock"], [38, 2, 1, "", "RBlock"], [38, 1, 1, "", "construct_shocks"], [38, 1, 1, "", "discretized_shock_dstn"], [38, 1, 1, "", "simulate_dynamics"]], "HARK.model.DBlock": [[38, 3, 1, "", "calc_reward"], [38, 3, 1, "", "construct_shocks"], [38, 4, 1, "", "description"], [38, 3, 1, "", "discretize"], [38, 4, 1, "", "dynamics"], [38, 3, 1, "", "get_arrival_value_function"], [38, 3, 1, "", "get_decision_value_function"], [38, 3, 1, "", "get_dynamics"], [38, 3, 1, "", "get_shocks"], [38, 3, 1, "", "get_state_rule_value_function_from_continuation"], [38, 3, 1, "", "get_vars"], [38, 4, 1, "", "name"], [38, 4, 1, "", "reward"], [38, 4, 1, "", "shocks"], [38, 3, 1, "", "transition"]], "HARK.model.RBlock": [[38, 4, 1, "", "blocks"], [38, 3, 1, "", "construct_shocks"], [38, 4, 1, "", "description"], [38, 3, 1, "", "discretize"], [38, 3, 1, "", "get_controls"], [38, 3, 1, "", "get_dynamics"], [38, 3, 1, "", "get_shocks"], [38, 3, 1, "", "get_vars"], [38, 4, 1, "", "name"]], "HARK.numba_tools": [[39, 1, 1, "", "cubic_interp_fast"], [39, 1, 1, "", "linear_interp_deriv_fast"], [39, 1, 1, "", "linear_interp_fast"]], "HARK.rewards": [[40, 1, 1, "", "CARAutility"], [40, 1, 1, "", "CARAutilityP"], [40, 1, 1, "", "CARAutilityPP"], [40, 1, 1, "", "CARAutilityPPP"], [40, 1, 1, "", "CARAutilityP_inv"], [40, 1, 1, "", "CARAutility_inv"], [40, 1, 1, "", "CARAutility_invP"], [40, 1, 1, "", "CDutility"], [40, 1, 1, "", "CDutilityPc"], [40, 1, 1, "", "CDutilityPc_inv"], [40, 1, 1, "", "CDutilityPd"], [40, 1, 1, "", "CRRACDutility"], [40, 1, 1, "", "CRRACDutilityPc"], [40, 1, 1, "", "CRRACDutilityPc_inv"], [40, 1, 1, "", "CRRACDutilityPd"], [40, 1, 1, "", "CRRAutility"], [40, 1, 1, "", "CRRAutilityP"], [40, 1, 1, "", "CRRAutilityPP"], [40, 1, 1, "", "CRRAutilityPPP"], [40, 1, 1, "", "CRRAutilityPPPP"], [40, 1, 1, "", "CRRAutilityP_inv"], [40, 1, 1, "", "CRRAutilityP_invP"], [40, 1, 1, "", "CRRAutility_inv"], [40, 1, 1, "", "CRRAutility_invP"], [40, 1, 1, "", "StoneGearyCRRAutility"], [40, 1, 1, "", "StoneGearyCRRAutilityP"], [40, 1, 1, "", "StoneGearyCRRAutilityPP"], [40, 1, 1, "", "StoneGearyCRRAutilityP_inv"], [40, 1, 1, "", "StoneGearyCRRAutilityP_invP"], [40, 1, 1, "", "StoneGearyCRRAutility_inv"], [40, 1, 1, "", "StoneGearyCRRAutility_invP"], [40, 2, 1, "", "UtilityFuncCRRA"], [40, 2, 1, "", "UtilityFuncCobbDouglas"], [40, 2, 1, "", "UtilityFuncCobbDouglasCRRA"], [40, 2, 1, "", "UtilityFuncConstElastSubs"], [40, 2, 1, "", "UtilityFuncStoneGeary"], [40, 2, 1, "", "UtilityFunction"], [40, 1, 1, "", "cobb_douglas"], [40, 1, 1, "", "cobb_douglas_p"], [40, 1, 1, "", "cobb_douglas_pn"], [40, 1, 1, "", "cobb_douglas_pp"], [40, 1, 1, "", "const_elast_subs"], [40, 1, 1, "", "const_elast_subs_p"]], "HARK.rewards.UtilityFuncCRRA": [[40, 3, 1, "", "derinv"], [40, 3, 1, "", "derivative"], [40, 4, 1, "", "distance_criteria"], [40, 3, 1, "", "inverse"]], "HARK.rewards.UtilityFuncCobbDouglas": [[40, 3, 1, "", "derivative"], [40, 4, 1, "", "distance_criteria"], [40, 3, 1, "", "inverse"]], "HARK.rewards.UtilityFuncCobbDouglasCRRA": [[40, 3, 1, "", "derivative"], [40, 4, 1, "", "distance_criteria"], [40, 3, 1, "", "inverse"]], "HARK.rewards.UtilityFuncConstElastSubs": [[40, 3, 1, "", "derivative"], [40, 4, 1, "", "distance_criteria"]], "HARK.rewards.UtilityFuncStoneGeary": [[40, 3, 1, "", "derivative"], [40, 3, 1, "", "inverse"]], "HARK.rewards.UtilityFunction": [[40, 3, 1, "", "der"], [40, 3, 1, "", "derivative"], [40, 4, 1, "", "distance_criteria"], [40, 3, 1, "", "inv"], [40, 3, 1, "", "inverse"]], "HARK.simulation": [[41, 0, 0, "-", "monte_carlo"]], "HARK.simulation.monte_carlo": [[41, 2, 1, "", "AgentTypeMonteCarloSimulator"], [41, 2, 1, "", "MonteCarloSimulator"], [41, 2, 1, "", "Simulator"], [41, 1, 1, "", "calibration_by_age"], [41, 1, 1, "", "draw_shocks"]], "HARK.simulation.monte_carlo.AgentTypeMonteCarloSimulator": [[41, 3, 1, "", "clear_history"], [41, 3, 1, "", "get_mortality"], [41, 3, 1, "", "initialize_sim"], [41, 3, 1, "", "make_shock_history"], [41, 3, 1, "", "reset_rng"], [41, 3, 1, "", "sim_birth"], [41, 3, 1, "", "sim_one_period"], [41, 3, 1, "", "simulate"], [41, 4, 1, "", "state_vars"]], "HARK.simulation.monte_carlo.MonteCarloSimulator": [[41, 3, 1, "", "clear_history"], [41, 3, 1, "", "initialize_sim"], [41, 3, 1, "", "reset_rng"], [41, 3, 1, "", "sim_birth"], [41, 3, 1, "", "sim_one_period"], [41, 3, 1, "", "simulate"], [41, 4, 1, "", "state_vars"]], "HARK.utilities": [[42, 2, 1, "", "NullFunc"], [42, 1, 1, "", "apply_fun_to_vals"], [42, 1, 1, "", "benchmark"], [42, 1, 1, "", "calc_subpop_avg"], [42, 1, 1, "", "determine_platform"], [42, 1, 1, "", "epanechnikov_kernel"], [42, 1, 1, "", "files_in_dir"], [42, 1, 1, "", "find_gui"], [42, 1, 1, "", "gen_tran_matrix_1D"], [42, 1, 1, "", "gen_tran_matrix_2D"], [42, 1, 1, "", "get_arg_names"], [42, 2, 1, "", "get_it_from"], [42, 1, 1, "", "get_lorenz_shares"], [42, 1, 1, "", "get_percentiles"], [42, 1, 1, "", "in_ipynb"], [42, 1, 1, "", "jump_to_grid_1D"], [42, 1, 1, "", "jump_to_grid_2D"], [42, 1, 1, "", "kernel_regression"], [42, 1, 1, "", "make_assets_grid"], [42, 1, 1, "", "make_figs"], [42, 1, 1, "", "make_grid_exp_mult"], [42, 1, 1, "", "make_polynomial_params"], [42, 1, 1, "", "mround"], [42, 1, 1, "", "plot_funcs"], [42, 1, 1, "", "plot_funcs_der"], [42, 1, 1, "", "round_in_file"], [42, 1, 1, "", "setup_latex_env_notebook"], [42, 1, 1, "", "test_latex_installation"], [42, 1, 1, "", "triangle_kernel"]], "HARK.utilities.NullFunc": [[42, 3, 1, "", "distance"]], "HARK.validators": [[43, 1, 1, "", "non_empty"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "terms": {"": [0, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 29, 31, 32, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 59, 60, 62, 66, 69, 70, 71, 72, 73, 76, 77], "0": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "00": [59, 62, 63, 70, 73, 76], "000": [47, 48], "0000": [73, 76], "00000000e": 62, "000001": [63, 76], "00000866": 70, "00001905": 70, "00001966": 70, "00003455": 70, "00003724": 70, "00004326": 70, "00005993": 70, "00006632": 70, "0001": [11, 14, 19, 73, 74, 76], "00011171056964087711": 60, "00012484354371977702": 60, "00013945489982702952": 60, "00015570343805260123": 60, "0001737638473713332": 60, "0001938281357389826": 60, "00021610717220754694": 60, "00024083234929284103": 60, "0002682573749814843": 60, "0002986602050079057": 60, "0003": 14, "0003323451276209255": 60, "00036964501506320246": 60, "0003737": 48, "0003811": 47, "0004109237583813652": 60, "00044451": 49, "0004565789051689251": 60, "0005": [47, 48, 63], "0005070445234878207": 60, "0005627943195647411": 60, "0006243450421976604": 60, "00067594": 47, "0006922602130656763": 60, "00072865": 49, "0007671542298588463": 60, "000849696897950114": 60, "0009406184572178233": 60, "0009501274203458365": 59, "00095989": 49, "0009729862213134766": 60, "000985860824584961": 60, "0009865760803222656": 60, "0009872913360595703": 60, "0009913444519042969": 60, "0009989738464355469": 60, "0009992122650146484": 60, "00099945068359375": 60, "0009996891021728516": 60, "0009999275207519531": 60, "001": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 52, 71, 73, 74], "0010001659393310547": 60, "0010004043579101562": 60, "0010006427764892578": 60, "0010008811950683594": 60, "001001119613647461": 60, "0010013580322265625": 60, "001001596450805664": 60, "0010023117065429688": 60, "0010035037994384766": 60, "001008749008178711": [58, 60], "0010089874267578125": 60, "0010128021240234375": 60, "0010135173797607422": 60, "0010142326354980469": 60, "00101819": 48, "0010186436927313025": 59, "0010271072387695312": 60, "00103835": 47, "0010407151830347239": 60, "0010436523456787": 76, "0010920073625086957": 59, "0011068": 48, "00111932": 49, "00112871": 47, "0011508556554602478": 60, "0011705536868369393": 59, "001254640439277921": 59, "0012719878080496017": 60, "0013446493424176253": 59, "00136163": 54, "0014051468883895524": 60, "001440987570251906": 59, "00153889": 76, "0015440893104674558": 59, "0015514644867238303": 60, "00156301": 48, "00159396": 47, "0016544173642891735": 59, "0017121788176552855": 60, "001772464733409862": 59, "00185921": 49, "0018886464739744646": 60, "0018987560781837942": 59, "002033848779593228": 59, "0020823559119378388": 60, "002178333119072562": 59, "0022949429754119954": 60, "0023328323511329074": 59, "0024982772444062107": 59, "0025": 26, "0025282088157077": 60, "00256882": 48, "00261969": 47, "0026752644036172057": 59, "0027841406665807256": 60, "00282396": 49, "0028645339391815128": 59, "003": [14, 44], "0030649359736791837": 60, "0030669193503207737": 59, "0032147": 70, "0032833094678750285": 59, "00333815e": 62, "003373030500466001": 60, "0034799": 60, "0035146519986142266": 59, "003711131170160087": 60, "00376132": 49, "003761957277351513": 59, "00392178": 47, "00400672": 47, "004026302266076698": 59, "004082254546442954": 60, "004308834859578781": 59, "00448108": 49, "004489772052598262": 60, "004610778604646981": 59, "00481112e": 59, "004933437991201828": 59, "004937463273915199": 60, "005": [11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 45, 69, 74], "00516688": 48, "00526919": 47, "00527820455410577": 59, "005429579002498741": 60, "005646562955103462": 59, "005970916077072008": 60, "006": 44, "00604009682174933": 59, "0061186865636854715": 71, "00625": 26, "00628889": 47, "006460495805733046": 59, "00654201": 54, "006566906564932307": 60, "0069095629369329": 59, "00694793": 48, "00722372447082309": 60, "007389222628706449": 59, "00787739": 70, "007901529967000442": 59, "007948413988064118": 60, "008448680465587444": 59, "00867278": 59, "008749044420678587": 60, "009033021861213797": 59, "00929770e": 62, "009634898474986997": 60, "009657068564937532": 59, "00968883": 59, "01": [3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 42, 44, 45, 47, 48, 49, 50, 51, 58, 59, 62, 63, 64, 68, 71, 73, 74], "0100": 73, "01015813": [47, 48], "010323520782613116": 59, "01045686": 49, "01046979999998": 44, "010616703056520294": 60, "01065377": 47, "01065891": 59, "01089495": 48, "011035290447981794": 59, "01151641": 47, "011706884785617877": 60, "011794968634792014": 59, "01188512": [47, 48], "01223649": 59, "01235151": 47, "012606505619487507": 59, "01268514": 54, "012919936192925974": 60, "01312699": 47, "01318479": 59, "01318639": 70, "01342905": 47, "013473205667235533": 59, "01374387": 54, "01389511e": 59, "014272839895086431": 60, "014398454963458818": 59, "015386928487888696": 59, "01547995": 54, "015533567303109e": 60, "015785611379662612": 60, "016443733161427332": 59, "01645863": 48, "01713727e": 62, "017481967390489128": 60, "01757256485253933": 59, "017988100000000173": 50, "01844311": 47, "01865804": 70, "01877843821991476": 59, "019151809710635556": 73, "019390181762535263": 60, "02": [15, 22, 44, 51, 52, 54, 59, 60, 62, 63, 68, 73], "02006369692858101": 59, "02017497": 70, "02040816": 16, "021436548979984593": 59, "021544181039296006": 60, "0227634": 70, "022904506785693002": 59, "02293428": 59, "0235892": 48, "023984959744489665": 60, "02405789": 59, "02445602": 70, "024472707091931056": 59, "02460772": 47, "02497206e": 62, "025": [4, 69, 73], "02614812496521779": 59, "02618315": 49, "026762425833982917": 60, "02698045e": 62, "027938308926213296": 59, "02807664e": 62, "029851355475425834": 59, "029937835775703192": 60, "03": [0, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45, 46, 47, 49, 51, 53, 54, 58, 59, 62, 63, 64, 68, 69, 71, 74], "03020863": 59, "03053229": 47, "03070202": 54, "0314841": 47, "03188809": 60, "03189605043228383": 59, "03247009": 70, "03265447": 70, "03297006": 47, "03320089": 59, "03358704056809714": 60, "03374891": 59, "03386482": 48, "03408188475658491": 59, "03479759": 59, "03550326": 59, "03641910755728617": 59, "03725425": 47, "0376015": 70, "037804865822300915": 60, "0389188115968615": 59, "04": [0, 4, 11, 44, 51, 63, 76], "04038564": 70, "0406135354811283e": 60, "04081633": 16, "04111067": 48, "04146662": 59, "04159298664174571": 59, "042428731918335": 76, "04271110960014113": 60, "04274370e": 62, "04277873": 47, "04309334": 47, "04320533": 54, "04356905": 70, "04428139169919579": 49, "044454484600144895": 59, "044536273404377116": 47, "04454599": 48, "04645973e": 62, "04707338": 47, "04751409": 59, "04751525941490797": 59, "04845886926538645": 60, "04951926": 62, "05": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44, 45, 47, 48, 51, 54, 58, 60, 63, 64, 74, 76], "050792355429262415": 59, "05094326": 59, "05100456": 54, "05192278": 48, "05236359": 59, "05324817": 54, "05355431": 54, "0543016349872083": 59, "05438059": 47, "055246317280595036": 60, "05541172": 48, "0556343": 59, "05570825": 59, "0557853297399333e": 60, "05580478": 48, "05677793e": 62, "05700091": 70, "05715125": 59, "05806039214042258": 59, "05822383": 70, "05861408": 47, "05878626": [47, 48], "05887176": 60, "05940106": 59, "06": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 60, 73, 76], "0602606059158006e": 60, "06096172": 47, "06122449": 16, "06134308": 47, "06209046840455912": 59, "06304923": 59, "06323317": 60, "06333371450893654": 60, "06641377226958056": 59, "06690624e": 62, "06803332": 48, "0686585844571508": 44, "0686832829276534": 44, "068741033425316": 44, "0688755589956198": 44, "0691876132809157": 44, "0699082913395124": 44, "07": [0, 14, 60], "07105207269190572": 59, "0712256905434414": 44, "07128067": 62, "0714753213364976": 44, "0715656485158445": 44, "07210911e": 59, "07245325": 59, "0727586690073565e": 60, "07306820983636797": 60, "07365529": 59, "0753681485578617": 44, "07603087196451241": 59, "0774887741894947": 44, "0775241504232804": 44, "0775357473879463": 44, "07857008": 70, "0786573434429672": 44, "0787111353569707": 44, "0787232463104646": 44, "07901002e": 62, "07933575": 47, "08": [0, 12, 21, 33, 54, 59, 64, 76], "0803701891": [24, 25], "08137793451099284": 59, "08145693": 70, "08163265": 16, "08187367": 48, "082251": 63, "08310162": 47, "08335149": 54, "08339327": 70, "08342735891103": 44, "08376904": 47, "084": 73, "0841395602960584": 44, "08439969": 54, "08440058": 59, "08448018e": 59, "08454428": 48, "08492077965589928": 60, "0852799171504508": 44, "08570877": 47, "08699604": 70, "08712305238126916": 59, "08777742": 59, "08790029": 59, "08795268": 48, "08795946": 54, "088015890333441": 60, "08862241": 59, "08875607": [47, 48], "08890649": 59, "08909917e": 59, "08913205": 59, "08918409e": 59, "08942561": 59, "08986903e": 59, "09": 0, "09014323e": 62, "09092312": 59, "09098021": 47, "09213394": 59, "0928128387698735": 60, "09302465": [47, 48], "09330220644322651": 59, "09399047": 47, "09421797": 47, "09562063": 59, "09631909": 59, "0963978": 59, "09646246": 59, "09691301": 54, "097778525810838e": 60, "0979846": 47, "09854506": 59, "09897862": 48, "09954374358267515": 60, "09978410e": 62, "09995443417609451": 59, "0x0000014263a64ad0": 62, "0x0000014b44df4c80": 63, "0x000001b78ca37370": 47, "0x000001b7ee75c550": 47, "0x000001b7ee75ff10": 47, "0x000001b7ee764eb0": 47, "0x000001dd2c791760": 74, "0x000001dd2ed9cf40": 74, "0x000001dd2ee07880": 74, "0x000001dd2ee07ec0": 74, "0x000001dd2ee07f60": 74, "0x000001dd2ee11120": 74, "0x000001dd2ee11a80": 74, "0x000001e5753f8a30": 49, "0x000001e5753f8be0": 49, "0x000001e5753ffeb0": 49, "0x000001e575407fa0": 49, "0x000001e575407fd0": 49, "0x23986f991f0": 64, "1": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 37, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75], "10": [1, 3, 4, 5, 25, 30, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 70, 71, 72, 73, 74], "100": [6, 11, 12, 14, 15, 17, 18, 20, 21, 22, 45, 46, 50, 51, 52, 53, 54, 56, 59, 60, 68, 71, 72, 73, 74, 76], "1000": [4, 11, 29, 42, 54, 56, 60, 76], "10000": [3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 45, 47, 48, 49, 50, 53, 68, 70, 74, 76], "10026304": 59, "10070652e": 59, "100th": 74, "101": [59, 60], "1012": 0, "1013": 0, "10133568": 59, "1016621": 59, "1018": 0, "1019": 0, "102": [59, 60], "1020": 0, "10202025": 60, "10204082": 16, "1024": 0, "102624348735711": 44, "103": [59, 60], "10309844": 48, "1031": 0, "1039": 0, "104": [59, 60], "1044": 0, "1044512": 70, "1046": 0, "1047": 0, "105": [59, 60], "1051": 0, "10554738": 59, "1057": 0, "1058": 0, "106": [4, 59, 60], "1062": 0, "1064": 0, "1068": 0, "1069": 0, "107": [59, 60], "10702535": 47, "1071": 0, "1071190115202647": 59, "1072": 0, "10739674": 59, "1076": 0, "108": [59, 60], "10826285": 54, "1086": 4, "1089": 0, "109": [59, 60], "1095": 0, "10969382": 54, "11": [45, 47, 49, 50, 53, 54, 55, 57, 59, 60, 62, 63, 64, 68, 70, 71, 72, 73, 74, 76], "110": [59, 60, 68, 76], "1100": [0, 4, 76], "11000": 4, "1101": 0, "1104": 0, "1107": 0, "11082245": 59, "111": [59, 60], "11111111": 60, "1112": 0, "1115": 0, "1117": 0, "112": [59, 60], "1124057973784134": 44, "1126": 0, "113": [59, 60], "1131": 0, "1139": 0, "11393198": 47, "114": 59, "1144": 0, "11448412": 60, "11452046": 59, "1146": 0, "1148": 0, "1148412372958667": 59, "1149": 0, "11497766": 60, "115": 59, "1150": 0, "1151": 0, "1155": 0, "1156": 0, "11566926": 54, "1157": 0, "11586078": 59, "1159": 0, "116": 59, "11613869": 47, "1163099": 48, "1164": 0, "1165": 0, "1168": 0, "11695897": 47, "117": 59, "1170": 0, "11711147": 59, "1172": 0, "1177": 0, "1178611202393447": 60, "1180": 0, "1181": 0, "1183": 0, "1184": 0, "1185": 0, "1189": 0, "1191": 0, "1193": 0, "11932391": 47, "1197": 0, "1199": 0, "11996143": 48, "11th": 63, "12": [4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 45, 49, 50, 51, 54, 55, 56, 57, 59, 60, 62, 63, 64, 68, 71, 72, 73, 74, 76], "120": [47, 49, 50, 51, 57, 70, 71], "1200": 11, "12056273": 48, "12187579": 59, "1221": 0, "12244898": 16, "122517190400913e": 60, "12262449": 59, "12266971": 48, "123": 4, "12317119440462676": 59, "1237": 0, "12373612": 59, "1240": 0, "12429267": 49, "1250": 0, "1253": 0, "1255": 0, "1260": 0, "1262": 0, "126394510269165": 59, "127105311699466e": 60, "1275": 0, "12780224e": 62, "12817922e": 62, "1286829": 59, "1296": 0, "13": [45, 46, 47, 49, 50, 54, 55, 57, 59, 60, 63, 64, 68, 69, 71, 72, 73, 74, 76], "130": 76, "13175022e": 62, "13216482757643888": 59, "13313599": 70, "1349": 0, "135": 4, "13595399": 59, "1363": 0, "13637025": 47, "13724141": 70, "1386": 0, "13862387": 59, "1387": 0, "1388": 0, "1390": 0, "13912006": 59, "1394": 0, "1395": 0, "13983997": 47, "13988003": 54, "14": [45, 50, 54, 55, 59, 60, 62, 63, 64, 68, 71, 72, 73, 76], "1403": 0, "1404": 0, "141": 50, "1410": 0, "14101133": 48, "1411": 0, "14116783": [47, 48], "14121714401876462": 60, "1415": 0, "1417": 0, "14188487999826904": 59, "1425": 0, "1427": 0, "14285714": 16, "1429": 73, "1430": 0, "1432": 0, "14352862e": 59, "143e": 73, "14420434": 47, "1447": 0, "145": 70, "14556721": 47, "1457": 0, "14574918": 47, "14579214": 62, "14597285": 47, "1460": 0, "14602862": 47, "14631576": 47, "1464": 0, "1465": 0, "14688703": 59, "14694881": 47, "1473": 0, "1475": 0, "14775242": 47, "1479009506512385": 44, "1480": 1, "1481": 0, "1484": 0, "148584": 47, "14887609": 59, "1489": 0, "1490": 0, "1492": 0, "1493": 0, "1495": 0, "1496": 0, "14th": 66, "15": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44, 47, 50, 54, 55, 56, 59, 60, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76], "150": [74, 76], "1501": 0, "15048232": 59, "1509": 0, "151": 71, "15100405": 54, "15124518": 70, "15124978": 70, "15125005": 70, "15125664": 70, "15125783": 70, "15126049": 70, "15126787": 70, "15177862e": 62, "15190906": 59, "1521": 0, "1524": 0, "15240148828154432": 59, "1524396": 47, "1525725": 47, "1529": 0, "1530": 0, "15353678e": 62, "15389701": 48, "154": 44, "1543": 0, "15448643": 47, "1545": 0, "1549": 0, "1553": 0, "1555": 0, "1556": 0, "1557": 0, "15575218": 54, "1558": 0, "1559": 0, "15595261": 59, "156": 73, "1560": 0, "1561": 0, "1562": 0, "1563": 0, "1564": 0, "15642563": 47, "1567": 0, "1568": 0, "1571": 0, "15719738": 70, "15746335": 59, "1575": 0, "1577": 0, "1578": 0, "1579": 0, "1581": 0, "1583": 0, "1584224": 59, "15853464": 47, "15855231e": 62, "15857537e": 62, "1589": 0, "1591": 0, "1592": 0, "1593": 0, "1594": 0, "1595": 0, "1596": [0, 4], "1597": 0, "1598": 0, "15997405": 59, "16": [17, 50, 54, 55, 60, 62, 63, 64, 68, 71, 72, 73, 76], "16042668": 70, "1607": 0, "1614": 0, "16146305": 54, "1615": 4, "16209389": 48, "162927447983": [24, 25], "16294725": 59, "16326531": 16, "16379223371877671": 59, "16399605": 47, "16441649999999974": 57, "16664803": 59, "16677841": 59, "16701567": 54, "16721565": 70, "16790171": 70, "16790567": 70, "16920216": 54, "17": [0, 11, 50, 52, 54, 55, 60, 62, 63, 64, 68, 71, 72, 73, 76], "170": 0, "17011675": 59, "17162798586899441": 60, "172": 0, "1722": 50, "1722675": 70, "17352253": 59, "17450608e": 62, "17559998e": 62, "176": 0, "17614114810584525": 59, "17732806": 47, "1779449082502964e": 60, "17807023": [47, 48], "17944328": 59, "17989959": 54, "18": [0, 47, 50, 55, 59, 60, 63, 68, 71, 73, 76], "180307914835392": 44, "18071489e": 59, "18073875": 47, "182408206717251": 44, "18265253e": 62, "18270903": 59, "18362634887": [12, 21, 54], "18367347": 16, "183723240127392e": 60, "18386894": 47, "18603025e": 62, "18610732": 59, "18691037": 47, "1874828": 59, "18748464": 47, "1895511158691363": 59, "18993864": [47, 48], "19": [0, 13, 19, 45, 54, 55, 59, 60, 63, 68, 71, 73, 76], "19149017": 59, "19191089": 47, "19213122": 59, "19249704": 47, "19272752": 59, "19310273": 47, "194": 0, "19418333": 59, "19556632": 70, "1960": 5, "19634896": 70, "19689346e": 62, "197470693360742e": 60, "1980": 60, "19825465": 48, "1986": 31, "1992": 68, "19928447": 47, "1997": 75, "1998": [4, 65, 73], "1999324726730265e": 60, "1d": [6, 8, 19, 30, 33, 35, 37, 42, 47, 66, 74], "1e": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 33, 59, 72, 76], "1e2": [54, 73], "1st": 69, "2": [7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 35, 37, 40, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75], "20": [0, 4, 11, 12, 15, 16, 17, 18, 22, 23, 24, 25, 42, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 63, 66, 68, 69, 71, 73, 74, 75, 76], "200": [12, 17, 20, 21, 44, 45, 49, 54, 55, 56, 57, 68, 72, 73, 76], "2000": [58, 73], "200000": 76, "2002": 5, "2003": [5, 60], "2004": 68, "2005": 66, "2007": 73, "2008": [10, 69], "201": 74, "2010": [0, 67], "20104988": 70, "20107024": 59, "2011": 8, "2015": [14, 37, 42, 46], "2016": 30, "2017": [65, 70], "2018": 46, "2019": [0, 70], "2020": [0, 70], "2021": [0, 4, 25, 72, 74, 75], "2023": 0, "2024": [0, 75], "2024490000000001": 57, "2025": 0, "20408163": 16, "2041307958435148": 59, "20458357": 49, "20553988": 70, "20593975": 59, "207": 0, "208": 0, "209": 0, "20903435": 47, "21": [49, 54, 55, 60, 63, 68, 71, 73, 76], "21170607": 70, "212": 0, "21223248168627507": 60, "21505308": 59, "217": 0, "218e": 73, "219": 0, "21900142e": 62, "22": [0, 47, 49, 54, 55, 59, 60, 63, 68, 71, 73, 76], "220": 1, "22001247043174033": 59, "22251841": 47, "22293806": 62, "223": 72, "2233456": 60, "2239942116364375e": 60, "224": 0, "22431225": 47, "2244898": 16, "2249668": 47, "225": 0, "2255914": 59, "226": 0, "22721307e": 62, "229": 0, "23": [0, 49, 55, 60, 68, 73, 76], "23037028": 47, "23045419": 47, "231": 73, "231703": 60, "23368191719055176": 59, "23387527465820312": 59, "23419928550720215": 59, "23458385467529297": 59, "2350912094116211": 59, "23524203": 49, "23538708686828613": 59, "23572444915771484": 59, "23593401908874512": 59, "23595285415649414": 59, "23607158660888672": 59, "23614239692687988": 59, "23617959022521973": 59, "23627519607543945": 59, "23628592491149902": 59, "23634552955627441": 59, "23638415336608887": 59, "2363889217376709": 59, "23662972450256348": 59, "2368030548095703": 59, "23682357": 47, "23693060874938965": 59, "236e": 73, "23700881004333496": 59, "23706867": 47, "23711705207824707": 59, "23726272583007812": 59, "23736831493689436": 59, "23739098": 60, "23744726181030273": 59, "23747467994689941": 59, "2375": 4, "23773670196533203": 59, "23779631": 54, "23799729347229004": 59, "238": 0, "23834943771362305": 59, "23836779594421387": 59, "2383708953857422": 59, "23840546607971191": 59, "23842740058898926": 59, "23846030235290527": 59, "23850959": 47, "23853373527526855": 59, "2385423183441162": 59, "2388439178466797": 59, "23897767066955566": 59, "239": 0, "23904681205749512": 59, "23914432525634766": 59, "23915648460388184": 59, "23924636840820312": 59, "23957737e": 59, "23965509": 47, "23986268043518066": 59, "24": [0, 11, 45, 59, 60, 68, 71, 73], "24025249481201172": 59, "24039459228515625": 59, "24063372611999512": 59, "2406473159790039": 59, "2406766414642334": 59, "2407543659210205": 59, "24079298973083496": 59, "2408": 4, "24086308479309082": 59, "24099016189575195": 59, "241": 0, "24104547500610352": 58, "24113821983337402": 59, "24124603": 70, "24158263206481934": 59, "24159398": 70, "24159645": 70, "24167418479919434": 59, "2417135238647461": 59, "24176406860351562": 59, "24188923835754395": 59, "24188995361328125": 59, "24190545082092285": 59, "24191570281982422": 59, "24194121360778809": 59, "242": 0, "24204635620117188": 59, "24219918251037598": 59, "24232697486877441": 59, "24249696731567383": 59, "24250006675720215": 59, "2426466941833496": 59, "2429969310760498": 59, "243": 0, "24364019": 48, "24388575553894043": 59, "24391658": 54, "244": 0, "24446892738342285": 59, "24480247497558594": 59, "24480390548706055": 59, "24480748176574707": 59, "24489796": 16, "245": [0, 4], "24515485763549805": 59, "24527525901794434": 59, "245802640914917": 59, "24602246284484863": 59, "24608159065246582": 59, "24618095e": 62, "24629855155944824": 59, "24729118": 47, "24736976623535156": 59, "24784588813781738": 59, "24804925918579102": 59, "24814475": 47, "24867653846740723": 59, "24906819": 47, "25": [0, 4, 12, 21, 24, 47, 48, 51, 60, 66, 68, 70, 71, 74, 76], "250": [0, 25], "25000": 76, "250034": 4, "2500934600830078": 59, "25017509": 47, "25120896": 47, "2518168": 47, "25254257e": 59, "253191999999984": 44, "25446854e": 62, "256": 0, "2563385123086519": 59, "25638835": 59, "25778367": 59, "258": 0, "25916388": 47, "25976208": 70, "26": [54, 56, 59, 60, 68, 71, 76], "261": 0, "26230175e": 62, "2624572": 59, "263": 6, "26333353": 59, "26405846": 47, "26472534e": 62, "265": 0, "26517677": 70, "26530612": 16, "2681341538834978": 60, "269": 0, "26952778": 59, "27": [59, 60, 68, 71, 76], "27036209e": 59, "27060758": 60, "271011537581586e": 60, "27108862e": 59, "27161768": 47, "27244848": 70, "27310682": 59, "27363142": 59, "27390725": 47, "274": 0, "276": 0, "277": 0, "27712340619595466": 59, "27766769": 48, "278": 0, "27836829": 59, "279305696487427": 56, "28": [0, 54, 59, 60, 71, 76], "28052704393167e": 73, "281": 0, "28133021": 59, "282": 0, "28272742": 47, "284": 0, "28550145": 59, "28571429": 16, "287": 0, "28773035": 47, "28th": 66, "29": [59, 60, 71, 76], "29040773": 70, "29151701e": 59, "29303989": 59, "29349419": 59, "2935": 4, "29441921e": 59, "29541926": 47, "29612518": 59, "2962": 4, "29715309": 59, "2976058": 47, "29797922": 59, "299": 0, "29994891455331896": 59, "2d": [8, 30, 35, 37, 52, 60, 66], "3": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 75, 76], "30": [0, 5, 13, 19, 20, 45, 53, 54, 57, 59, 60, 63, 71, 72, 76], "300": [0, 45, 50, 53, 56, 59, 71, 72, 73, 74], "3000": 76, "30096221": 70, "300e": 73, "301": [72, 74], "30147822": 49, "30184119": 70, "302": 0, "30217974": 49, "30267760e": 62, "30273462": 47, "30309332": 49, "3035": 53, "304": 0, "30403362": 49, "30475474": 49, "30491013": 49, "30513551": 49, "30541244": 49, "30612245": 16, "30860691": 70, "3090834617614746": 76, "30962754e": 62, "30999108": 70, "31": [59, 60, 63, 76], "31064458": 47, "31213742": 47, "31326844": 70, "315": 0, "3173883360": 76, "31873697": 54, "31919613e": 62, "31940141": 54, "32": [4, 19, 54, 60], "320": 0, "32057672e": 62, "3207": 44, "321": 0, "323": 0, "324": 0, "32584549e": 62, "326": 68, "32619545": 70, "32653061": 16, "3271": 4, "32723002": 47, "32759431": 60, "32799353": 54, "328": 0, "329": 0, "32998498": 48, "33": [54, 59, 60], "33056914": 48, "332": 0, "33281233": 59, "33419368": 47, "33588196": 59, "33642968e": 62, "3367": 52, "33682352": 59, "33696813": 70, "33743265": 59, "33772651": 70, "33876256e": 62, "3389732837677": 54, "33966384051602827": 44, "34": [44, 49, 54, 56, 59, 60, 74], "34020441": 70, "341": 0, "3411553": 47, "34167903": 70, "342": 0, "34202164": 59, "344": 0, "3448180900636173": 44, "3448829558954367": 44, "345": 0, "3450341442894489": 44, "3453850118498396": 44, "3461952993752169": 44, "34693878": 16, "34783729e": 62, "34797683": 47, "34805666066738283": 44, "34807706501006663": 60, "35": [14, 46, 59, 60], "35067616": 59, "35082765": 59, "35097589e": 59, "3509863": 70, "35129636e": 62, "35142412": 47, "3523090029998188": 44, "353": 0, "35325187": 48, "35327056e": 62, "3534114736589693": 60, "354": 0, "35480488": 70, "355": 0, "35512016452337497": 44, "35537454": 59, "35544147": 59, "35591274e": 59, "35623674": 47, "3579390092388621e": 60, "358": 72, "358074": 70, "35881959": 59, "35901832e": 59, "35927289": 60, "36": [4, 23, 49, 58, 59, 60], "3600899736514895": 44, "36046482": 70, "36129582e": 59, "361358793827705e": 60, "361660386744461e": 60, "36198128155029563": 44, "36277515": 70, "363": 0, "36331944e": 62, "36386812": 59, "36577256": 70, "3667511": 47, "367": 0, "36734694": 16, "36787773": 70, "36823518": 59, "368643900993675e": 60, "3688058": 47, "36898553": 48, "37": [59, 60, 76], "37052917e": 59, "3715109817321105": 44, "37156486819095047": 44, "3715956660284524": 44, "37276982": 70, "37287121e": 62, "37432652": 59, "37471158": 59, "37487488": 59, "37527975": 47, "37547423": 59, "377": 0, "378": 74, "37858337": 59, "3788395320005977": 44, "37896012954317376": 44, "37899550407019866": 44, "37986353": 59, "38": [59, 60], "38070319": 47, "3823419": 70, "383": 0, "3840154156210827": 44, "38435613": 47, "38465583": 60, "3849365": 59, "386": 0, "38617839": 70, "38724882": 70, "38764468e": 59, "3877551": 16, "38800208": 47, "38875133": 59, "39": [47, 48, 49, 54, 56, 59, 60, 62, 63, 64, 70, 73, 74], "391": 0, "39267564": 54, "394": 68, "39485473": 54, "3965249": 70, "39664114e": 62, "3982": [4, 30], "39902143": 70, "39960622": 49, "39978161": 47, "3d": [8, 32, 37, 66], "3e": 14, "3f": [46, 68, 71, 72, 73, 74], "4": [13, 18, 19, 22, 31, 37, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 76], "40": [12, 49, 53, 59, 60, 70, 74], "400": [15, 16, 63, 76], "40049920e": 62, "40090496": 54, "401": 0, "40444118": 60, "40720505": 47, "408": [0, 68, 73], "40816327": 16, "40963978": 59, "41": [44, 59, 60, 70], "41076882e": 59, "411": 0, "41168561": 59, "41176409927674545": 76, "41316539564814475": 44, "41334997": 59, "4139": 53, "4153348999999995": 50, "4178268535356437e": 60, "4180260563496857": 44, "41854438": 76, "42": [59, 60, 76], "42152280e": 62, "42156841": 70, "4235": 68, "42423289": 70, "42552421": 59, "42695278": 59, "42739536": 60, "4281933": 60, "42857143": 16, "42910594": 54, "42937882": 70, "43": [59, 60], "43120532": 70, "43136554": 59, "43154017": 70, "433": 0, "43475488": 70, "43498517": 47, "436": 0, "43723903": 54, "43800078": 54, "43814835e": 62, "43820362": 70, "4397": 55, "44": [14, 47, 59, 60], "44139140e": 59, "442": 0, "444": 0, "44526509": 59, "4472050093038433e": 60, "44766406": 70, "44897959": 16, "44916311": 48, "44961778": 59, "45": [59, 60], "45016983": 47, "45040464": 59, "451012134552002": 58, "45166864478060786": 44, "45166913": 59, "45260362": 60, "45265088": 59, "45312275": 47, "45359275": 70, "45496022e": 59, "45554145": 70, "4558": 55, "45688075": 47, "4572262": 47, "45915127": 59, "45974733": 70, "46": [49, 59, 60, 76], "460": 0, "46577786": 59, "466": 0, "4661": 55, "46675106": 59, "46809484231437626": 60, "46869901e": 59, "46938776": 16, "47": [59, 60, 76], "47015785": 59, "47031001e": 62, "472": 0, "47478335": 70, "47504483": 47, "4758927822113037": 59, "478": 0, "47826891e": 62, "47946276e": 62, "48": [12, 13, 15, 16, 18, 22, 23, 24, 45, 47, 48, 59, 60, 74], "48047286e": 62, "48224826e": 62, "486": 0, "48656521": 48, "48740224": 70, "4876664": 47, "48900614": 48, "48933509": 47, "48979592": 16, "48979988": 59, "49": [59, 60], "49178328": 60, "49180323": 59, "49185838": 59, "49213392": 48, "49486035": 54, "4959923714165125": 44, "497": 74, "4973": 55, "4977915": 25, "49866721": 47, "499910819847685": 49, "49994992551661": [49, 64], "4d": [8, 37, 66], "4f": [44, 47, 48, 49, 50, 51, 52, 53, 55, 57, 63, 64, 73], "5": [3, 4, 5, 6, 12, 14, 19, 21, 24, 25, 31, 33, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 68, 70, 71, 72, 73, 74, 76], "50": [4, 6, 14, 20, 25, 46, 49, 51, 54, 56, 59, 60, 64, 70, 71, 72, 73, 74], "500": [4, 42, 45, 48, 63, 68, 76], "5000": 4, "50037008e": 59, "501": 71, "50131761": 59, "50302228e": 62, "50382414": 59, "50506263e": 62, "50606028": 70, "50676159": 59, "50702748": 54, "507231993220671e": 60, "50867333": 59, "5091476412739695e": 60, "50978681e": 62, "51": [59, 60, 63], "51020408": 16, "51078690e": 62, "512": 0, "51215561": 59, "51312387": 47, "51358644e": 62, "5152619": 59, "51600777e": 62, "51644051": 47, "51818491e": 59, "51853659": 48, "51861495": 48, "52": [49, 59, 60], "52116765": 70, "52205593": 54, "52478804": 60, "52495288": 48, "52575439": 47, "52642809": 70, "527": 0, "52786829": 54, "5281": 25, "53": [59, 60], "53061224": 16, "53140746e": 62, "53367694": 54, "533e": 73, "53458817": 47, "53814767": 47, "53831045": 59, "53939481": 47, "54": [59, 60], "5408086": 54, "5420894161621845e": 60, "54380761": 48, "54385104": 59, "54430854": 54, "5446": 52, "54873336": 47, "54880143": 47, "5488165705077037": 47, "55": [20, 59, 60], "5500262": 47, "55102041": 16, "55294500e": 62, "55366842": 59, "55391366": 47, "55399565": 59, "56": [59, 60], "5604901958326667": 60, "5604902": 60, "561": 0, "56125489e": 62, "56186035": 47, "56345525": 47, "56704866": 48, "568": 0, "57": [53, 59, 60], "570": 0, "5703319414353534": 44, "57142857": 16, "57148058e": 62, "57148698": 47, "57239973": 59, "57261755": 47, "57340032": 54, "573559836667073e": 60, "57432327": 49, "57456954e": 62, "575007": 49, "57589742": 49, "57608357": 48, "57666105": 47, "57681387": 49, "577": 0, "57715925": 48, "57751671": 49, "57766816": 49, "57800413": 59, "57815773": 49, "57918536": 60, "57935741": 70, "5799173260214128": 47, "58": [59, 60], "58012839": 59, "5817183825422839": 44, "58611995": 48, "58650103": 59, "58704087": 47, "58872933": 59, "5899301": 47, "59": [59, 60], "59031477": 47, "59183673": 16, "594": 0, "5945942401885986": 54, "59510094": 54, "59517832": 47, "59744118e": 62, "59861097": 70, "59971086": 49, "5f": 71, "5x": 68, "6": [19, 31, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 68, 70, 71, 72, 73, 74, 76], "60": [59, 60, 68, 72], "600": 0, "60126016e": 62, "603": 0, "60469117": 59, "60717581": 54, "60776456": 70, "60902763": 47, "60940401": 47, "61": [59, 60], "610": 0, "61055299": 59, "61109117": 48, "6122449": 16, "61257946": 48, "613": 0, "61315991": 54, "61742883": 47, "61802501e": 59, "619": 72, "61952063": 60, "62": [59, 60, 68], "62057399": 47, "621e": 73, "622": 0, "62223697e": 62, "62247992": 47, "62253956": 47, "624": 0, "62585632": 47, "62717581": 49, "63": [59, 60], "63035211": 47, "63265306": 16, "633": 0, "63318207": 48, "63686907e": 62, "637": 72, "63868123": 59, "64": [59, 60], "642058519799264e": 60, "64480801": 59, "646": 0, "65": [54, 59, 60, 70], "65059745e": 62, "651": 0, "65100729": 59, "65162077": 59, "65306122": 16, "654": 0, "65458599": 54, "65636274": 59, "65638861": 47, "65668486": 70, "657": 0, "65753698": 60, "65760681": 47, "65889720e": 59, "65929588e": 59, "65975936": 59, "66": [50, 53, 59, 60, 70], "66024277": 48, "6602619046109499": 60, "661": 0, "66182753": 59, "66183621": 47, "6625533": 54, "66350835e": 62, "66355594": 49, "666": 0, "66761254": 54, "66772112": 47, "66977446e": 62, "6699529613894297": 60, "67": [59, 60], "67041051e": 62, "673166751861572": 58, "67346939": 16, "67365734": 49, "674": 0, "67511887e": 62, "675366786039859e": 60, "675e": 73, "679126009790366e": 60, "67931387": 59, "67973119": 59, "68": [59, 60], "68157147": 47, "682": 0, "68343548": 54, "68835626": 60, "68915494": 70, "69": [59, 60, 68], "69052521": 59, "691": 0, "69119491": 47, "692": 0, "69220295": 59, "693": 0, "69387755": 16, "69456637": 49, "69464542e": 62, "69486106": 47, "69490092e": 59, "69598081e": 62, "69640582e": 62, "697": 0, "69799255": 60, "698": 0, "69836662": 59, "69961538": 59, "7": [4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 76], "70": [59, 60, 63, 68], "700": 76, "70189222": 60, "702": 0, "70324769": 54, "70334971": 59, "704002380371094": 56, "70440599": 59, "70595038": 47, "70724361": 48, "70753174": 59, "70862776": 48, "70902525": 47, "70948837": 47, "71": [59, 60], "71272965e": 62, "71332592": 48, "71343907": 48, "714": 0, "71428571": 16, "71483401e": 62, "71490637e": 62, "715": 0, "71694297": 59, "718281828459045": [13, 19, 22, 35], "72": [59, 60], "72024305": 47, "72201961e": 62, "72472332": 59, "72508585": 59, "7264799": 47, "727": 0, "72741947e": 62, "72773283": 59, "729": 0, "73": [59, 60], "73046931": 59, "734": 71, "73469388": 16, "7396297": 59, "74": [59, 60], "7408147": 47, "74211281e": 59, "743": 0, "7443814823714376e": 60, "74671381": 47, "74697466": 70, "74710998": 54, "749": 0, "749e": 73, "75": [4, 54, 59, 60, 63], "750": 0, "75149165": 60, "75190972e": 59, "75266421": 47, "753": 53, "75302376": 47, "755": 0, "75510204": 16, "756": 0, "75606929": 54, "757": 0, "75771854": 70, "75797377": 48, "758": 0, "7582811": 59, "759": 0, "76": [54, 59, 60], "76173821": 70, "762": 0, "76401116": 59, "76459769": 47, "765": 0, "7662": 55, "76631162": 59, "768": 0, "77": [54, 59, 60], "770": 53, "77004837": 59, "772": 0, "77216365": 60, "77296758": 47, "77319708": 59, "77373932": 48, "774": 0, "775": 0, "7755102": 16, "77631269": 60, "77777206": 47, "77935209": 59, "77986847": 47, "78": [54, 59, 60], "78005334": 47, "78111197e": 59, "78342293": 47, "78374287": 59, "784": 0, "78436656": 59, "78583369": 59, "786": 72, "787": 68, "78823851": 59, "79": [59, 60], "79037301": 70, "7918587": 70, "79232874": 48, "79398633e": 62, "7947032748821812e": 71, "79591837": 16, "797322034835815": 54, "79863526": 59, "79961818": 59, "8": [4, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 70, 71, 72, 73, 74, 76], "80": [17, 49, 59, 60, 71], "80010015": 59, "80149080e": 59, "80173618e": 62, "803": 0, "80345582": 62, "80801571": 48, "80874565": 60, "80895865e": 59, "81": [59, 60], "81082056": 47, "81155032": 48, "812": 0, "81293369": 47, "81404498": 48, "81531146": 59, "816": 4, "81605935": 48, "81628533e": 62, "81632653": 16, "816e": 73, "81712554": 49, "81741028": 59, "81975329": 48, "82": [59, 60], "82159155": 47, "82236828": 59, "82340037": 60, "8239304256771902e": 60, "82546834": 47, "82608994": 59, "82758116": 60, "83": [59, 60], "83089622e": 59, "832": 0, "83306989": 59, "83458526": 47, "83514604": 47, "83515997": 48, "83542774": 70, "836": 0, "83673469": 16, "837": 72, "83724637": 59, "83741291": 54, "83886328": 47, "8397706": 47, "84": [52, 59, 60], "84001699": 48, "84139642": 47, "84482668": 48, "84581461e": 62, "84591041": 48, "84876348": 70, "84876927": 70, "84876961": 70, "84877791": 70, "84877941": 70, "84878277": 70, "84879206": 70, "85": [59, 60, 68, 71], "85037478": 59, "85298459": 60, "85416781": 59, "85429886": 59, "85470368": 70, "85481388": 47, "85492676": 47, "855": 0, "8550655": 47, "85510009": 47, "8552782": 47, "85567088": 47, "85598901": 70, "8560163": 60, "85612338": 54, "85616936": 47, "85668519": 47, "85692606": 70, "857": 72, "85714286": 16, "85893446": [47, 48], "85907682": 47, "85974829": 70, "86": [59, 60], "86324343": [47, 48], "865": 0, "8651834": 59, "86596649": 62, "86648847": 54, "867": 4, "86728992": 47, "86765963": [47, 48], "86797932": 54, "8690813": 54, "869143": [47, 48], "86978448": 54, "86993178": 59, "87": [59, 60], "870": 74, "87114858": 59, "87231638": 47, "87237112": 59, "87453579902649": 76, "87694693": 54, "87755102": 16, "87818497": 70, "8799056": 59, "88": [59, 60], "88053049": 47, "88164369": 60, "884": 0, "887": 0, "888": 0, "89": [4, 59, 60], "8900": 73, "89091324": 47, "891": 0, "892": 46, "89219579": 59, "89351353": 47, "89516082": 60, "89531382e": 62, "896": 4, "89603531": 47, "897": 0, "89795918": 16, "89860627": 60, "8987463": 47, "9": [0, 11, 12, 18, 19, 21, 25, 31, 44, 45, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 70, 71, 72, 73, 74, 76], "90": [44, 59, 60, 63, 64, 76], "90013641": [47, 48], "901": 72, "90164315": 59, "902": 0, "90245351e": 62, "903": 0, "90337007": 54, "9036357": 54, "9042732037076746e": 60, "90475087": 59, "90569475": 47, "906e": 73, "9075765": 59, "908": 0, "90854828": 60, "9087781": 47, "909": 0, "90918925": 70, "91": [59, 60, 63], "91038989": 47, "91125437e": 59, "91217925": 47, "91267336": 48, "91327642": 62, "91481594e": 62, "916": 0, "91653887": 59, "91816941": 59, "91836735": 16, "91869035": 47, "91879238": 54, "91898165e": 62, "91946291": 59, "92": [59, 60, 63], "921": 0, "92148505": 47, "92279974": 59, "92323938": 70, "92563997": 70, "92584352": 54, "92596962": 70, "92630693": 47, "92630773": 70, "92630922": 70, "929": 0, "9296455": 60, "93": [59, 60, 63], "930": 0, "93032901": 54, "931615549556682e": 60, "93197068": 54, "932": 0, "93276448": 47, "935": 0, "93517011": [47, 48], "9356256": 54, "93574988e": 62, "936": 0, "93658688": 70, "93661413": 54, "93715659": 47, "93842361": 47, "93877551": 16, "93907154": 47, "93986152": [47, 48], "94": [59, 60, 63, 72], "94072175": 48, "941": 0, "9414968": 59, "94158876": 70, "94296058": 47, "943289665216982": 69, "94360411": 62, "94409967": 70, "94449375": 54, "94575906": 59, "94584825": 48, "946223974227905": 54, "94664292": 48, "947": 0, "948": 0, "94851723": 47, "95": [13, 14, 19, 44, 45, 46, 59, 60, 63, 76], "951": 0, "953": 0, "9545978": 54, "955": 0, "95555964": 48, "95573119": 48, "95575478": 48, "95587621": 48, "95614394": 48, "9568355": 48, "957": 0, "9583602": 48, "95918367": 16, "95923932": 59, "96": [3, 5, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 44, 45, 47, 48, 49, 52, 53, 59, 60, 63, 64, 68, 69, 72, 74], "96031227": 70, "96047892": 47, "96068797": 59, "96091089": 47, "96108615": 47, "96332613": 47, "963370084762573": 59, "96439858": 54, "9662323": 47, "96687507": 48, "96706799": 47, "96731749": 48, "96746751": 48, "96778793": 59, "96823466": 47, "96867555": 47, "96928106": 48, "96980028": 54, "97": [23, 45, 51, 58, 59, 60, 63, 67, 70], "97020975": 48, "970749654489623e": 60, "97118426": 49, "97139056": 70, "97163878": 70, "97232095": 48, "97306403": 70, "975": [26, 76], "977": 73, "97823279": 60, "97835428e": 62, "97880253": 48, "9788094": 70, "97890388": 70, "97946343": 70, "97959184": 16, "97961543": 70, "9796525": 70, "97975": 71, "98": [3, 4, 5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 45, 47, 48, 49, 51, 53, 59, 60, 63, 64, 68, 71, 73, 74], "980": 0, "980511119853873e": 60, "98179106e": 62, "9821113562470477": 44, "98306182": 70, "98310857": 70, "98343065": 70, "98370762": 59, "98425683": 54, "986": 0, "9862639": 48, "98664555e": 59, "98715696": 70, "98732483": 47, "9875705261040257": 44, "98904903": 62, "9894663": 59, "98998424": 47, "99": [4, 18, 19, 23, 45, 46, 51, 52, 58, 59, 60, 63, 64, 71], "990": 0, "99013197": 59, "9905843996750162": 44, "99072391": 70, "9908464": 70, "9908961093312041": 44, "9910154806768872": 44, "991065010874361": 44, "9910860802385022": 44, "9910951040899086": 44, "9910989700363684": 44, "991100623001836": 44, "991174074253095e": 60, "99185309": 47, "991920196607595": 47, "99254713": 47, "99276336": 48, "99367866": 48, "99375": [73, 76], "994584801603196e": 60, "99473669162057": 44, "99473956": 70, "995": [45, 67, 69], "99511802": 62, "99615385": 48, "9966224603747361": 44, "9967360674688521": 60, "9972240924835205": 76, "99733552": 70, "9975542198241366": 44, "9980320884475001": 44, "99833131": 47, "998489": 60, "998511": 60, "99852": 60, "998535": 60, "998541": 60, "998545": 60, "998549": 60, "998583": 60, "998592": 60, "998606": 60, "99892206e": 62, "99899651": 70, "999": [35, 45], "9993225507148125": 44, "99973377603989": 44, "9999": [72, 73], "9999940713848707": 44, "9999940788572959": 44, "9999942754223826": 44, "9999961301697309": 44, "9999982037028008": 44, "9999982037318698": 44, "9999982049718272": 44, "9999986714166439": 44, "A": [0, 1, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 52, 53, 57, 60, 61, 62, 65, 66, 67, 68, 71, 73, 75, 76], "AND": 0, "AT": [68, 74], "And": [53, 59, 63, 71, 73], "As": [1, 6, 8, 10, 11, 14, 15, 46, 47, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75], "At": [3, 5, 6, 49, 52, 61, 62, 64, 68, 74], "BE": 15, "But": [5, 10, 45, 60, 61, 62, 66, 70, 75], "By": [1, 8, 10, 29, 33, 40, 46, 61, 66, 71, 72, 73, 76], "FOR": [11, 17, 18, 22], "For": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 31, 33, 34, 40, 42, 45, 48, 51, 52, 53, 54, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76], "If": [0, 1, 3, 5, 6, 8, 10, 12, 13, 15, 16, 17, 20, 21, 24, 29, 30, 31, 33, 35, 37, 38, 41, 42, 45, 47, 49, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 76, 77], "In": [1, 3, 4, 5, 6, 8, 10, 11, 12, 14, 23, 35, 38, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76], "It": [0, 1, 3, 8, 11, 12, 13, 15, 16, 17, 19, 21, 22, 24, 29, 30, 31, 33, 37, 38, 41, 45, 47, 49, 52, 53, 61, 62, 64, 65, 66, 67, 68, 69, 74, 75, 77], "Its": [3, 8, 13, 19, 24, 37, 60, 71], "NOT": [11, 13, 17, 18, 19, 21, 22], "No": [0, 11, 51, 62], "Not": [0, 4, 17, 21], "Of": [49, 66, 74], "On": [6, 8, 53, 65, 75], "One": [8, 31, 35, 37, 49, 60, 62, 63, 64, 65, 74], "Or": [1, 38, 52, 65], "Such": [0, 6, 60, 62, 64, 69], "That": [1, 6, 42, 51, 52, 53, 57, 60, 62, 64, 65, 66, 67, 71, 74], "The": [0, 1, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 60, 61, 62, 64, 65, 67, 68, 71, 72, 73, 74, 76, 77], "Their": [13, 15, 25, 31, 52, 63, 68], "Then": [1, 3, 6, 53, 69, 75], "There": [0, 5, 6, 11, 52, 60, 62, 63, 65, 67, 69], "These": [0, 6, 8, 20, 21, 29, 31, 35, 38, 41, 44, 47, 48, 52, 57, 60, 61, 62, 65, 66, 67, 70, 72, 74, 75], "To": [0, 1, 3, 4, 5, 6, 8, 15, 25, 29, 34, 35, 42, 45, 46, 47, 48, 49, 51, 57, 60, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 75, 77], "Will": [24, 71], "With": [3, 5, 31, 47, 48, 49, 52, 63, 73], "_": [8, 12, 13, 15, 17, 19, 21, 22, 24, 35, 45, 47, 48, 51, 52, 53, 57, 74, 75], "__": 73, "__call__": 37, "__init__": [37, 62], "_age": 47, "_constructor_error": [29, 62], "_cycl": 47, "_der": 8, "_evalu": [8, 37], "_harmenberg": 76, "_hist": 0, "_i": 69, "_income_process": 51, "_inv": [40, 60], "_invariant_param": 29, "_length": 29, "_missing_key_data": [29, 62], "_n": 17, "_paramet": 29, "_retir": 47, "_sim": [47, 68], "_simul": [6, 71, 74], "_t": [12, 19, 21, 46, 47, 52, 53, 64, 66, 75], "_varying_param": 29, "a0": 68, "a1": 68, "a_": [48, 69, 76], "a_dstn": 71, "a_i": 68, "a_ss": [71, 73], "a_ss_func": 73, "a_t": [6, 12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 61, 63, 64, 66, 68, 69], "a_target": 71, "a_val": 76, "aaa": 1, "aagg": 44, "aaggnow": 11, "ab": 4, "abandon": [66, 67], "abbrevi": 1, "abil": [0, 5, 13, 71], "abl": [1, 3, 12, 21, 24, 25, 62, 65, 66], "about": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 26, 29, 31, 41, 44, 46, 49, 52, 58, 60, 61, 62, 65, 66, 67, 70, 71, 74], "abov": [1, 6, 12, 17, 29, 37, 42, 45, 46, 47, 48, 49, 52, 53, 61, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 76], "absenc": 75, "absolut": [0, 6, 8, 12, 15, 17, 29, 33, 40, 42, 60, 74], "abspath": 69, "abstract": [29, 60, 64], "academ": 65, "acc": 37, "acceler": [37, 66], "accept": [0, 1, 8, 11, 12, 17, 29, 60, 65], "access": [0, 1, 3, 4, 6, 8, 15, 24, 29, 34, 37, 61, 71], "accident": 12, "accommod": [61, 69], "accomod": [45, 63], "accompani": 52, "accomplish": [6, 14, 61, 68, 69, 71], "accord": [6, 8, 12, 15, 29, 51, 58, 65, 70], "accordingli": [8, 64], "account": [0, 1, 11, 25, 32, 37, 66, 71], "accumul": [0, 53], "accur": [1, 11, 13, 15, 18, 22, 24, 45, 47, 52, 53, 63, 66, 67, 76], "accuraci": [0, 4, 10, 52, 57, 66, 74], "acheiv": [45, 63], "achiev": [8, 29, 47, 48], "acount": 4, "across": [0, 5, 6, 8, 12, 14, 20, 21, 24, 33, 35, 37, 42, 45, 48, 50, 51, 52, 60, 61, 63, 65, 68, 74, 75, 76], "act": [8, 11, 29, 31, 42, 52, 61, 64, 66], "act_t": [4, 8, 11, 29, 65], "action": [1, 6, 8, 11, 14, 25, 29, 52, 53, 65], "activ": [1, 3, 5, 34, 61], "actual": [0, 5, 6, 8, 29, 34, 37, 47, 49, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74], "actuari": 60, "acycl": 75, "ad": [0, 3, 5, 6, 8, 15, 20, 26, 29, 30, 31, 52, 54, 63, 65, 66, 67, 68], "adapt": [5, 8, 14, 46, 53, 60, 67], "add": [0, 1, 3, 5, 6, 11, 15, 24, 26, 29, 31, 40, 45, 46, 47, 48, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 75, 76], "add_aggshkdstn": 11, "add_discrete_outcom": [31, 60], "add_discrete_outcome_constant_mean": [31, 60], "add_subplot": 59, "add_to_stable_arm_point": 26, "add_to_time_inv": 29, "add_to_time_vari": [29, 76], "addit": [0, 1, 4, 11, 12, 14, 19, 20, 29, 31, 35, 37, 42, 46, 47, 48, 54, 60, 62, 63, 64, 66, 68, 69, 73, 75, 76], "addition": [0, 19, 61, 66, 69, 74], "address": [0, 5, 10, 52, 53], "adept": 3, "adher": 1, "adjprb": 21, "adjust": [0, 1, 4, 12, 15, 21, 24, 25, 46, 47, 49, 54, 56, 59, 66, 67, 68, 72], "adjust_infl_to": 68, "adjustdstn": [12, 21, 24, 25], "adjustnow": 21, "adjustprb": [0, 12, 21, 24, 25, 54, 56, 59], "administr": [60, 68], "adopt": [5, 8, 65], "advanc": [5, 49, 61, 63, 64, 67, 69, 71], "advantag": [6, 52], "advis": [10, 69], "affect": [1, 4, 20, 35, 52, 61, 64, 67, 73, 74], "aforement": 69, "after": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 29, 35, 38, 45, 46, 47, 48, 49, 52, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76], "afterward": [6, 8], "afunc": [4, 11, 44, 69], "afunc_estim": 4, "afunc_new": 4, "afunc_old": 4, "ag": [0, 6, 8, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 35, 41, 45, 46, 47, 48, 49, 52, 53, 54, 60, 61, 62, 67, 68, 76], "again": [0, 1, 3, 6, 8, 45, 63, 64, 66, 67, 68, 74], "against": [34, 49, 63, 64, 66, 67, 68, 76], "age_0": 35, "age_al": 68, "age_birth": 68, "age_death": 68, "age_max": [60, 68], "age_min": [60, 68], "age_step": 35, "aged_calibr": 41, "agedstn": 68, "agent": [0, 1, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 70, 77], "agent_count": 41, "agent_databas": 29, "agent_func": 73, "agent_g": 71, "agent_id": 59, "agent_list": [29, 60], "agent_set": 29, "agent_typ": 29, "agent_type_count": 29, "agentcount": [0, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 45, 47, 48, 49, 50, 53, 59, 61, 68, 74, 76], "agentpopul": [0, 29], "agentsubtyp": 29, "agenttyp": [0, 6, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 35, 41, 42, 49, 54, 60, 63, 64, 67, 68, 69, 71, 72, 73, 74], "agenttypemontecarlosimul": [0, 41], "agetru": 68, "agevaryingriskperctyp": 54, "agg": 11, "agg_av": 76, "agga": 76, "agga_fast": 76, "aggc": 76, "aggc_fast": 76, "aggr_sow": 29, "aggreg": [0, 4, 5, 6, 8, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 29, 35, 38, 40, 42, 44, 45, 47, 48, 49, 60, 65, 68, 69, 70, 71, 73, 74, 75], "aggregate_resourc": 4, "aggregatesavingrul": 11, "aggregr": [47, 48, 49], "aggshkdstn": [11, 44], "aggshockconsumertyp": [11, 65, 69], "aggshockexampl": [44, 69], "aggshockmarkov": 0, "aggshockmarkovconsumertyp": [0, 11], "aggshockmrkvexampl": 44, "aggshocksdynamicrul": 11, "ago": 67, "agre": 1, "agrid": [4, 21, 56], "agro41": 70, "agro41n": 70, "ahead": 71, "aic": 15, "aid": 10, "aim": [0, 1, 5, 10, 64, 77], "ajac": 20, "ajac_perm": 72, "ajac_rfre": 72, "ajac_unempprb": 72, "ajacr": 73, "ajacw": 73, "ajust": 25, "aksit": 70, "al": [0, 30, 70, 74, 75], "alanlujan91": [44, 50], "alert": 1, "algebra": [6, 52, 53, 67], "algorithm": [0, 1, 5, 8, 10, 30, 33, 52, 53, 64, 69, 74], "alia": [0, 8, 16, 24, 40], "align": [12, 14, 15, 17, 21, 22, 24, 35, 46, 47, 48, 49, 63, 64, 66, 68, 74], "aliti": [11, 15, 18, 22], "aliv": [6, 12, 17], "all": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 23, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 58, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "allevi": 74, "alloc": [6, 12, 21, 24, 53, 61], "allow": [0, 4, 6, 8, 12, 13, 15, 16, 17, 24, 25, 31, 35, 37, 42, 45, 52, 53, 60, 61, 65, 66, 67, 70, 71, 73, 74, 75, 76], "almost": [0, 1, 6, 8, 14, 45, 48, 52, 60, 61, 63, 64, 68], "alon": 69, "along": [1, 5, 6, 8, 31, 46, 47, 48, 52, 53, 60, 61, 64, 67, 68], "alongsid": 68, "alpha": [14, 17, 31, 37, 40, 46, 58, 60, 69, 72, 73, 75], "alpha_t": 17, "alreadi": [3, 6, 31, 42, 45, 47, 48, 53, 63, 65, 66, 68, 69, 74], "also": [0, 1, 3, 5, 6, 8, 10, 11, 12, 13, 14, 17, 19, 22, 24, 29, 31, 37, 41, 42, 46, 47, 48, 49, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76], "alt_param": 72, "altag": 72, "alter": [14, 53, 64], "altern": [0, 4, 5, 6, 31, 45, 54, 62, 67, 75], "although": 69, "alujan": [44, 50], "alv2": 7, "alvl": [11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 52, 53, 61, 70, 76], "alvl_": 14, "alvl_tran_mat": 76, "alvl_val": 76, "alvlgrid": [14, 46], "alvlgro_hist": 70, "alvlgronow": 70, "alvlinitmean": 26, "alvlinitstd": 26, "alvlnow": [11, 13], "alwai": [0, 1, 5, 6, 14, 19, 21, 24, 46, 49, 60, 63, 64, 65, 66, 67, 68, 69], "am": [1, 51], "amax": 4, "ambigu": 66, "amelior": 53, "amin": 4, "among": [5, 6, 8, 11, 21, 29, 35, 37, 46, 52, 54, 60, 62, 65, 67], "amount": [33, 49, 64, 74], "amp": 74, "ampl": 1, "an": [0, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 41, 42, 44, 45, 46, 52, 53, 54, 55, 56, 59, 60, 62, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77], "anaconda": [1, 3, 5], "analog": [6, 8, 66, 67, 68, 74], "analogi": 67, "analogu": 70, "analysi": [4, 8, 71], "analyt": [8, 54, 56, 69, 71], "analyz": [4, 47, 48], "ancillari": 74, "anestfac": 4, "ani": [1, 3, 5, 6, 8, 11, 12, 15, 17, 18, 22, 25, 29, 31, 37, 38, 40, 41, 42, 49, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 74], "anneal": 8, "annual": 67, "anoth": [8, 10, 15, 29, 37, 49, 54, 56, 61, 64, 66, 67, 71, 74], "anothertyp": 62, "anow": 4, "anrm": [0, 6, 11, 12, 13, 15, 17, 18, 19, 21, 22, 24, 25, 26, 47, 48, 49, 50, 54, 59, 61, 68, 70, 71, 72, 74, 76], "anrmgrid": 52, "anrmgridgrid": 52, "anrminitmean": [0, 12, 13, 15, 17, 19, 21, 22, 24, 47, 48, 70, 76], "anrminitstd": [0, 12, 13, 15, 17, 19, 21, 22, 24, 47, 48, 70, 76], "anrmnow": [15, 17, 23], "anrmnow_hist": 70, "anrmnow_init": 49, "answer": [5, 62, 64, 65], "ant": [0, 8, 10, 11, 29, 47, 48, 49, 60, 65, 70], "anticip": 67, "antider_interp": 37, "antideriv": 37, "anyth": [6, 10, 29, 60, 61, 62, 64, 74], "anywai": [3, 67], "anywher": [6, 74], "apach": 7, "apart": 63, "apfac": 15, "api": [4, 27, 31, 36, 66, 77], "apocryph": 10, "apol_grid": 76, "app": 3, "appar": 53, "appear": [0, 1, 6, 60, 67, 74], "append": [8, 15, 68, 70, 76], "append_solut": [15, 61], "appendix": [10, 53, 69], "appli": [0, 1, 4, 6, 7, 14, 37, 42, 46, 66, 67, 68, 69, 73, 74, 75, 76], "applic": [1, 5, 8, 35, 60, 61, 63, 74], "apply_fun_to_v": 42, "approach": [4, 5, 12, 15, 23, 32, 35, 37, 45, 49, 53, 54, 56, 57, 58, 60, 61, 62, 63, 66, 67, 74, 76], "appropri": [0, 1, 4, 6, 15, 16, 24, 29, 38, 53, 61, 71, 74], "approx": [0, 31, 64], "approx_beta": 31, "approx_distribut": 29, "approx_inc_dstn": [11, 15, 17, 18, 22], "approx_lognorm": 8, "approx_lognormal_gauss_hermit": 31, "approx_param": 29, "approxim": [0, 4, 8, 10, 11, 12, 14, 15, 18, 22, 29, 30, 31, 35, 37, 42, 45, 47, 48, 52, 54, 57, 60, 64, 65, 66, 68, 73, 74, 75, 76], "approxima": 35, "approxlognorm": [1, 57], "aprev": [4, 11], "ar": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77], "ar1": [0, 13, 31, 35, 45], "ar_1": 31, "arang": [59, 71, 73], "arbitarili": 49, "arbitrari": [0, 6, 8, 13, 17, 19, 29, 31, 35, 37, 42, 47, 60, 62, 65, 67], "arbitrarili": [6, 63, 66], "architectur": 62, "archiv": 5, "area": [1, 5, 10], "aren": [0, 3, 13, 44, 63], "arg": [29, 31, 32, 37, 38, 40, 60], "arg1": 6, "arg2": 6, "argn": 6, "argnam": 42, "arguabl": 67, "argument": [0, 6, 8, 10, 29, 31, 33, 37, 38, 42, 43, 47, 49, 52, 60, 61, 62, 63, 64, 65, 66, 68, 71, 74], "aribtrari": 60, "aris": [0, 6], "arisen": 6, "arithmet": [37, 74], "ark": [0, 2, 4, 5, 9, 15, 16, 25, 30, 34, 42, 65, 67, 73, 74, 76], "arkitectur": 9, "arm": [8, 26], "around": [0, 4, 6, 26, 53, 60, 63, 66, 68, 71, 74], "arrai": [0, 1, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 65, 66, 68, 70, 74, 76], "arrat": 25, "arriv": [0, 38, 52, 63, 74], "arrow": [47, 48, 49, 63, 70], "articl": 1, "articul": 64, "artif": 63, "artifici": [12, 13, 15, 45, 47, 48, 49, 51, 53, 63, 64, 68, 76], "ask": [1, 3, 60, 61, 66, 74], "aspect": 65, "asset": [0, 4, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 35, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 66, 68, 69, 71, 72, 74], "asset_lvl": 76, "asset_mkt": [71, 73], "asset_target": 73, "asset_v": 76, "assetpr": [54, 56], "assetprocess": [12, 21, 24, 35], "assets_grid_spec": [71, 72, 74], "assign": [0, 6, 11, 29, 31, 38, 61, 62, 64], "assign_param": 0, "assign_paramet": [29, 49, 51, 55, 62, 64], "associ": [20, 21, 31, 42, 46, 65, 66, 76], "assort": [0, 64], "assum": [6, 11, 12, 14, 15, 16, 30, 35, 42, 45, 46, 47, 48, 49, 52, 53, 54, 58, 61, 62, 63, 65, 66, 67, 69, 71, 73, 74, 75, 77], "assumpt": [26, 41, 49, 54, 65, 67, 68], "asterisk": [6, 64, 74], "astronom": 5, "asymmetr": 66, "asymptot": [53, 54, 63, 66], "atom": [0, 31, 51, 53, 57, 60, 62, 74], "atomist": [6, 75], "atomsra": 31, "attach": 6, "attempt": [6, 60, 65, 67, 70], "attent": [5, 63], "attr": [31, 60], "attribut": [0, 4, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 37, 41, 42, 45, 46, 47, 48, 49, 51, 53, 54, 57, 58, 60, 61, 63, 65, 68, 69, 74, 76], "attrribut": 29, "auclert": [4, 72, 74, 75], "audit": 10, "augment": [57, 64], "autarki": 15, "author": [3, 4, 25, 65, 71], "autodoc": 69, "autom": [0, 1, 74], "automat": [0, 1, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 29, 35, 41, 45, 47, 48, 49, 51, 61, 62, 63, 64, 65, 68, 74, 76], "autonom": [13, 35], "avail": [0, 1, 3, 5, 26, 29, 52, 53, 64, 69, 70, 71], "averag": [8, 11, 21, 42, 44, 45, 47, 48, 59, 63, 66, 68, 74], "averang": 51, "avers": [0, 3, 4, 5, 8, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 35, 37, 40, 45, 46, 47, 48, 49, 52, 53, 60, 61, 63, 64, 66, 67, 68, 70, 73, 74, 76], "avg_lognorm": 31, "avoid": [0, 1, 3, 5, 25, 31, 37, 66, 69], "awai": [6, 10], "awkward": 62, "ax": [59, 64, 71, 73], "ax_lab": 59, "axhlin": 54, "axi": [4, 6, 31, 40, 45, 47, 48, 49, 52, 53, 60, 64, 68], "axtra": 45, "axtracount": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 62, 71, 72, 73, 74, 76], "axtraextra": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 62, 73, 74, 76], "axtragrid": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 53, 62, 63, 73, 74, 76], "axtragrid_default": [13, 15, 17, 21, 22, 24], "axtramax": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 54, 62, 71, 72, 73, 74, 76], "axtramin": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42, 45, 46, 47, 48, 62, 73, 74, 76], "axtranestfac": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 62, 73, 74, 76], "axtraord": 62, "b": [1, 4, 6, 14, 31, 37, 50, 53, 60, 68, 71, 72, 74], "b_": [17, 63, 68, 71], "b_max": 50, "b_min": 50, "b_ss": 71, "b_t": [17, 52], "b_temp": 50, "babel": 10, "back": [1, 3, 8, 26, 29, 49, 60, 63, 64, 66, 68, 71], "backend": 0, "background": [5, 8, 69], "backshoot": 26, "backup": [29, 37, 66], "backward": [0, 4, 11, 13, 15, 19, 22, 23, 24, 25, 26, 29, 46, 60, 63], "bad": [0, 3, 4, 10, 11, 37, 51, 53], "balanc": [4, 6, 17, 25, 42, 50, 68, 74], "balgrofunc": 15, "ballpark": 60, "bandwidth": 42, "bank": [1, 6, 17, 42, 50, 68, 74], "bar": [26, 64, 75], "bardoczi": [4, 74], "bardoszi": 72, "barrier": 5, "base": [0, 1, 3, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 35, 37, 38, 40, 41, 42, 45, 47, 48, 52, 53, 60, 61, 62, 63, 65, 66, 67, 71, 73, 74, 76], "base_grid": 62, "base_param": 72, "baselin": [45, 74], "bash": 1, "basi": [61, 62, 67], "basic": [0, 8, 11, 14, 15, 16, 29, 31, 32, 35, 42, 47, 48, 49, 51, 53, 56, 61, 63, 64, 66, 68, 69, 71, 75], "basichealthconsumertyp": [14, 46], "basichealthexampl": 46, "bat": [3, 5], "bayer": 0, "bayerluettick": 0, "bbb": 1, "becam": 61, "becaus": [0, 1, 3, 4, 6, 8, 11, 14, 25, 26, 37, 45, 46, 48, 49, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76], "becom": [5, 26, 35, 42, 45, 46, 51, 53, 63, 66, 67, 70, 74], "been": [0, 1, 3, 5, 6, 8, 10, 13, 15, 19, 20, 26, 29, 38, 42, 46, 47, 48, 49, 52, 53, 62, 66, 67, 68, 69, 70, 74], "befor": [1, 4, 5, 6, 8, 10, 11, 13, 15, 19, 22, 23, 24, 25, 26, 29, 31, 38, 48, 49, 52, 53, 57, 60, 61, 62, 63, 64, 65, 66, 68, 74, 76], "began": [65, 66, 67, 68], "begin": [1, 5, 6, 8, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 35, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 66, 68, 69, 74, 75, 76], "beginn": 64, "behav": [61, 65, 70], "behavior": [0, 5, 6, 8, 12, 13, 22, 35, 37, 38, 60, 61, 63, 64, 65, 67, 70, 71, 74], "behaviour": 0, "being": [0, 1, 6, 8, 12, 15, 16, 17, 20, 24, 29, 31, 46, 47, 48, 49, 52, 53, 60, 61, 63, 66, 67, 74], "belief": [4, 8, 11, 65], "believ": [8, 29, 65, 66, 69], "bell": 67, "bellman": [0, 4, 12, 45, 46, 49, 51, 52, 53, 57, 58, 60, 63, 64, 68, 69, 71], "belong": 30, "belov": 68, "below": [1, 6, 8, 26, 35, 37, 45, 46, 47, 48, 49, 51, 52, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 76], "benchmark": [0, 4, 11, 15, 18, 22, 42, 67], "bend": [53, 66], "benefici": 69, "benefit": [1, 35, 45, 46, 47, 48, 63, 71, 73, 76], "beq": 12, "beqcrra": 12, "beqcrraterm": 12, "beqfac": [12, 52], "beqfacterm": 12, "beqint": 52, "beqmpc": 52, "beqshift": [12, 52], "beqshiftterm": 12, "bequest": [0, 12, 15, 16, 47, 48, 49, 52, 61], "bequestwarmglowconsumertyp": 12, "bequestwarmglowportfoliotyp": 12, "bernoulli": [0, 6, 24, 31], "bernoullidistribut": 24, "besid": 63, "bespok": 60, "best": [1, 6, 10, 31, 60, 63, 70], "beta": [12, 13, 14, 15, 17, 19, 21, 22, 24, 31, 37, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 63, 64, 65, 66, 68, 69, 70, 71, 73], "beth": 26, "better": [0, 1, 38, 60, 69, 74], "between": [0, 1, 6, 8, 10, 11, 12, 14, 17, 21, 24, 25, 29, 30, 33, 35, 37, 40, 42, 46, 48, 49, 52, 53, 54, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76], "beyond": [11, 45, 53, 63, 74], "bi": 37, "bias": 65, "bibliographi": 4, "bicub": 19, "bicubicinterp": 66, "big": [5, 52, 69, 71], "bigg": [52, 66], "bigger": [1, 69], "bilinear": [0, 4, 37], "bilinearinterp": [37, 66], "bilinearinterponinterp1d": [37, 66], "bilinearinterponinterp2d": [37, 66], "bilinearli": 37, "biliti": 11, "bilt": 15, "bin": [1, 3, 5, 70, 76], "binari": [11, 35, 52, 67], "binaryincshkdstn": 35, "bind": [47, 63, 66], "binder": 4, "birth": [14, 41, 47, 48, 74], "birth_ag": 68, "bit": [24, 48, 52, 64, 74], "bivari": [14, 52, 67], "bizarr": 61, "black": [0, 1, 74], "blacken": 1, "blank": [6, 8], "blob": 4, "block": [0, 1, 4, 8, 38, 41, 63, 71, 72], "blossom": 64, "blue": [54, 55, 56, 66], "blvl": 26, "bmax": [17, 50], "bmin": [17, 50], "bmin_orig": 50, "bnext": 42, "bnrm": [6, 12, 15, 17, 18, 21, 22, 24, 25, 50, 61, 68, 74], "bnrmgridterm": 50, "bnrmmin": [17, 50], "bnrmminfunc": 17, "bnrmminnow": 17, "bodi": [19, 22, 35, 57], "bog": 67, "boldfac": 64, "bond": 71, "bool": [6, 11, 12, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 29, 30, 31, 35, 37, 41, 42, 61, 63, 68, 74], "boolean": [0, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 29, 31, 33, 37, 41, 42, 60, 61, 63, 67], "boom": 51, "boom_prob": 51, "bootstrap": [8, 33], "bootstrap_sample_from_data": 33, "bor": 12, "bore": [49, 64], "born": [11, 13, 14, 15, 18, 21, 25, 26, 29, 41, 47, 48, 60, 61, 68], "boro": [6, 15, 22, 48], "borocnstart": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45, 47, 48, 49, 51, 53, 63, 64, 68, 74, 76], "borocnstnat": 63, "borrow": [6, 11, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 37, 45, 47, 49, 51, 53, 57, 61, 63, 64, 66, 68, 69, 71, 76], "bot": [31, 42], "bot_x": 59, "both": [3, 4, 5, 6, 8, 11, 16, 17, 20, 25, 29, 30, 38, 46, 49, 53, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74], "bother": [64, 66, 69], "bottom": [5, 31, 42, 47, 59, 64, 67, 74], "bound": [0, 8, 12, 14, 19, 22, 26, 31, 35, 37, 38, 42, 45, 49, 52, 53, 60, 61, 64, 67, 71, 74], "boundari": [35, 66, 67], "boundary_check": 37, "boundedli": 65, "box": 74, "brace": 6, "bracket": [6, 64], "branch": 1, "breathtak": [10, 69], "brentq": [71, 73], "breviti": 46, "brief": [67, 77], "briefli": [47, 74], "bring": 68, "brittl": 0, "broad": 53, "broadcast": 31, "broadli": [52, 67], "broken": 49, "brokentyp": 62, "broyden_custom": 71, "budget": [52, 53, 66], "budget_constraint": 71, "buffer": [0, 3, 26, 35, 67, 69, 74], "bufferstockincshkdstn": 35, "bufferstocktheori": [3, 15, 47], "bug": [0, 60], "bugfix": [0, 1], "bui": [52, 67], "build": [0, 4, 5, 8, 14, 29, 53, 60, 61, 62, 63, 66, 69, 71, 72, 74, 77], "built": [0, 5, 6, 10, 29, 42, 45, 46, 49, 54, 57, 60, 61, 62, 64, 66, 74], "bulk": 74, "bunch": [49, 66, 74], "bundl": [3, 5, 8, 64], "burden": [71, 74], "buri": 60, "burn": 0, "bust": 51, "bust_prob": 51, "bution": [11, 15, 18, 22], "button": [1, 3, 64], "bypass": 1, "c": [1, 4, 6, 12, 13, 14, 15, 17, 19, 21, 22, 24, 37, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 71, 72, 73, 76], "c0": 68, "c1": 68, "c_": [49, 63, 64, 69, 75, 76], "c_at_this_m": 44, "c_dstn": 71, "c_h2m": 71, "c_param": 33, "c_ra": 71, "c_share": 40, "c_ss": [71, 73], "c_t": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 60, 61, 63, 64, 66, 68, 69, 74], "cagetti": [5, 60], "cagetti_incom": 60, "calc_afunc": 11, "calc_asset_gap": 71, "calc_bounding_valu": [11, 15, 17, 18, 22], "calc_choice_prob": 37, "calc_cross": 30, "calc_cross_point": 30, "calc_dynam": [8, 11, 29, 65], "calc_ergodic_dist": 20, "calc_exp_next": 14, "calc_expect": [0, 31], "calc_impulse_response_manu": [29, 74], "calc_jacobian": [20, 71, 72, 73], "calc_limiting_valu": [15, 48, 57], "calc_linear_cross": 30, "calc_log_sum": 37, "calc_log_sum_choice_prob": 37, "calc_lognormal_style_pars_from_normal_par": 31, "calc_nondecreasing_seg": 30, "calc_normal_style_pars_from_lognormal_par": [0, 31], "calc_r_and_w": 11, "calc_reward": 38, "calc_sharelimit_for_crra": [12, 21, 24, 25, 35], "calc_shock_response_manu": 29, "calc_ss_assets_from_discfac": 71, "calc_stable_point": [0, 15, 16, 48, 57, 61], "calc_subpop_avg": 42, "calc_transition_matrix": [20, 76], "calcchoiceprob": 0, "calccrosspoint": 0, "calcdynam": 8, "calcexpect": 0, "calclogsum": 0, "calclogsumchoiceprob": 0, "calcul": [0, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 33, 35, 37, 42, 45, 47, 48, 52, 53, 54, 60, 61, 64, 65, 66, 68, 72, 74, 75], "calibr": [0, 5, 11, 12, 13, 15, 17, 19, 21, 22, 24, 28, 38, 41, 54, 63, 68, 70, 74], "calibratedtyp": 60, "calibration_by_ag": 41, "calibration_ra": 71, "calibration_ta": 71, "call": [0, 3, 5, 6, 8, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 29, 31, 32, 35, 37, 41, 42, 47, 48, 49, 52, 60, 61, 62, 64, 65, 66, 68, 69, 70, 76], "callabl": [0, 6, 31, 37, 38, 41, 42, 66], "came": [10, 74], "camel": 1, "can": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 18, 20, 21, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76], "cancel": 52, "candid": 60, "cannot": [6, 10, 11, 17, 49, 60, 62, 63, 66, 67], "canon": [10, 15, 16, 67, 74], "capabl": [0, 4, 45, 61, 64, 77], "capdynamicrul": 11, "capit": [1, 4, 6, 8, 11, 14, 15, 46, 47, 48, 49, 52, 58, 60, 61, 65, 67, 68, 69, 71, 74, 75], "capitalevorul": 11, "capshar": [4, 23, 58], "captur": [4, 6, 65, 71], "car": 10, "cara": [40, 60], "carat": 6, "carautil": 40, "carautility_inv": 40, "carautility_invp": 40, "carautilityp": 40, "carautilityp_inv": 40, "carautilitypp": 40, "carautilityppp": 40, "card": 48, "care": [0, 3, 6, 19, 42, 64, 74], "careprobfunc": 52, "carlo": [0, 41, 68, 74], "carri": [6, 74], "carrol": [42, 64, 65, 66, 67, 69, 70], "case": [1, 3, 4, 11, 12, 15, 21, 22, 23, 29, 31, 35, 37, 38, 42, 45, 48, 49, 51, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74], "cash": [63, 64, 66, 68, 75], "cast": [0, 6, 63, 74], "categor": 8, "categori": 61, "caus": [0, 11, 12, 76], "cautiou": 34, "caveat": [60, 74], "ccarrol": [26, 42, 54, 56], "cd": [3, 5], "cdf": [19, 22, 50, 52, 66, 68], "cdftrue": 68, "cdot": [46, 52, 53, 66, 75], "cdutil": 40, "cdutilitypc": 40, "cdutilitypc_inv": 40, "cdutilitypd": 40, "ce": [40, 60], "ceas": [6, 67], "cef": 0, "cell": [4, 45, 46, 47, 48, 49, 63, 64, 74, 76], "center": 45, "central": [0, 29, 65], "certain": [21, 26, 29, 74], "certainti": 63, "certifi": 1, "cessiv": 33, "cfunc": [3, 4, 5, 6, 8, 13, 14, 15, 17, 19, 22, 25, 26, 29, 37, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 68, 69, 70, 74, 76], "cfunc_terminal_": 76, "cfunc_u": 26, "cfuncadj": [21, 54, 55, 56], "cfuncarg": 37, "cfuncfxd": [21, 54, 56, 59], "cfunclimitintercept": 16, "cfunclimitslop": 16, "cfuncx": 6, "cgm_incom": 68, "cgrid": 56, "challeng": 71, "chanc": [51, 61], "chang": [1, 3, 5, 6, 8, 15, 21, 25, 30, 35, 48, 49, 52, 53, 54, 60, 61, 63, 65, 66, 67, 68, 71, 72, 74, 75], "channel": 1, "chapter": 69, "charact": [10, 69], "character": [6, 8, 14, 15, 35, 47, 49, 53, 60, 62, 63, 64, 65, 66, 67, 71, 75], "characterist": [15, 64, 66, 67], "chat": 1, "cheap": 67, "check": [0, 1, 3, 5, 6, 8, 11, 13, 15, 18, 19, 22, 23, 24, 25, 29, 37, 42, 61, 62, 64, 66, 68, 69, 71, 73], "check_aic": 15, "check_condit": [0, 15], "check_elements_of_time_vary_are_list": 29, "check_fhwc": 15, "check_fvac": 15, "check_gichrm": 15, "check_gicliv": 15, "check_gicmod": 15, "check_gicraw": 15, "check_gicsdl": 15, "check_markov_input": 18, "check_restrict": [15, 29], "check_ric": 15, "check_wric": 15, "checkcondit": 0, "checkmark": 74, "checkout": 1, "checkrestrict": 0, "chi": 53, "chi_t": 53, "chief": 5, "child": 61, "chines": 69, "chioc": 0, "chist": 51, "choic": [0, 1, 8, 12, 21, 30, 37, 45, 53, 56, 65, 66, 68, 69, 71, 74, 75, 77], "choos": [1, 3, 6, 10, 11, 12, 14, 17, 24, 25, 35, 46, 47, 49, 52, 53, 61, 63, 64, 65, 66, 67, 68, 71, 74], "chose": [64, 67], "chosen": [8, 44, 48, 52, 53, 54, 62, 63, 65, 66, 73], "chri": [1, 42, 64, 66, 67], "circuit": 6, "circumst": 60, "circumv": 0, "citat": 4, "cite": [4, 69], "cjac": 20, "cjac_perm": 72, "cjac_rfre": 72, "cjac_unempprb": 72, "cjacr": 73, "cjacw": 73, "clarifi": 75, "class": [0, 1, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 35, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74], "classic": [64, 69], "classmethod": 31, "clean": [0, 1], "cleanup": 0, "clear": [0, 1, 4, 6, 8, 11, 15, 18, 23, 29, 41, 61, 69, 73], "clear_histori": [29, 41], "clearinghous": 29, "clever": 53, "click": [1, 3, 47, 48, 49, 63, 64, 70], "clock": 0, "clone": [1, 3, 5, 8, 29], "close": [1, 8, 31, 47, 48, 49, 52, 53, 60, 63, 65, 66, 67, 69, 71], "closer": 1, "closest": [31, 32], "closest_x": 32, "clunki": 10, "cluster": 74, "clvl": [13, 14, 19, 45, 52, 53, 76], "clvlgrid": 53, "cn": [25, 59], "cnow": 4, "cnrm": [6, 12, 15, 16, 17, 21, 22, 24, 26, 45, 47, 48, 49, 50, 51, 54, 57, 58, 59, 68, 70, 71, 72, 74, 76], "cnrm_hist": 51, "cnrm_list": 26, "cnrmgrid": 47, "cnrmnow": 21, "cnrmnow_hist": 70, "cnrmpdv": 15, "co": 6, "cobb": [0, 11, 40, 44, 58, 60, 67, 69, 75], "cobb_dougla": 40, "cobb_douglas_p": 40, "cobb_douglas_pn": 40, "cobb_douglas_pp": 40, "cobbdougla": 11, "cobbdouglaseconomi": [0, 11, 44, 65, 67, 69], "cobbdouglasmarkoveconomi": [0, 11, 44, 69], "cocco": 68, "code": [0, 3, 5, 6, 8, 10, 11, 15, 16, 18, 22, 34, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 60, 61, 63, 64, 66, 67, 68, 72, 74, 76], "codebas": [0, 1, 4, 5, 34], "coder": 1, "codex": 0, "coeff": 42, "coeffici": [0, 4, 8, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 31, 35, 37, 40, 42, 45, 46, 47, 48, 49, 52, 53, 58, 60, 61, 62, 63, 67, 70, 73, 74, 76], "coher": 71, "cohort": [6, 60, 68], "coin": 6, "coincid": 60, "collabor": [5, 10], "collaps": 31, "colleagu": 10, "collect": [0, 1, 3, 4, 5, 8, 29, 38, 65, 73, 74], "colleg": 68, "colon": 62, "color": [72, 73], "colorbar": 59, "column": [29, 30, 71, 74], "com": [0, 1, 3, 4, 5, 34], "combin": [0, 4, 5, 8, 10, 11, 14, 15, 21, 22, 29, 31, 32, 35, 37, 38, 42, 46, 53, 57, 61, 64, 65, 67, 71, 74, 75, 76], "combine_incshkdstn_and_riskydstn": [12, 21, 24, 25, 35], "combine_indep_dstn": [0, 31], "combine_indep_wage_and_depr_dstn": 14, "combust": 10, "come": [1, 3, 5, 8, 29, 37, 52, 61, 62, 64, 67, 74], "comma": 6, "command": [1, 3, 5, 6, 8, 29, 34, 64, 70], "command_list": [29, 60], "commands_": 8, "comment": [0, 1, 6, 10], "commit": [0, 25], "common": [0, 1, 3, 6, 8, 12, 21, 24, 30, 37, 53, 55, 60, 62, 63, 64, 66], "common_dict": 55, "commonli": [1, 3, 6, 8, 63, 64, 71], "commun": [1, 8, 10, 65], "comp": 46, "compani": 69, "companion": 75, "compar": [0, 4, 6, 8, 37, 45, 60, 62, 63, 64, 66, 67, 68, 69, 70, 74], "comparison": [4, 42, 45, 67, 68, 74], "comparitor": 60, "compat": [0, 5, 6, 15, 22, 24, 29, 31, 47, 48, 49, 51, 57, 60, 61, 65, 66, 67], "competit": [58, 67, 69, 75], "compil": 3, "complementari": [52, 64, 66], "complet": [4, 5, 6, 8, 26, 47, 60, 61, 63, 64, 65, 67, 68, 71], "complex": [4, 6, 8, 46, 49, 53, 64, 66, 74, 75], "compliant": 0, "complic": [0, 6, 51, 62, 66, 67, 69, 71, 74], "compon": [5, 12, 29, 35, 41, 45, 47, 52, 53, 60, 67, 69], "compos": [8, 37, 49], "composit": [0, 17, 52, 53, 66], "comprehend": 69, "comprehens": [1, 4], "compromis": [52, 74], "comput": [0, 1, 3, 5, 6, 8, 12, 15, 17, 20, 25, 29, 30, 31, 33, 37, 38, 42, 45, 46, 47, 48, 49, 53, 54, 56, 60, 61, 62, 65, 66, 69, 74, 75, 77], "computation": [5, 47, 65, 74, 75], "compute_steady_st": [20, 72, 73], "con": [19, 26, 29, 70], "concaten": [45, 65, 68], "concav": [46, 48, 55, 64, 66, 67], "conceiv": [6, 75], "concept": [6, 52, 64, 66, 69, 77], "conceptu": 8, "concern": [6, 8, 22, 26, 29, 46, 47, 48, 49, 67], "concis": 1, "conclud": 60, "concret": 65, "cond_i": 30, "conda": [4, 8], "condit": [0, 6, 8, 14, 15, 17, 31, 37, 41, 46, 47, 48, 49, 51, 52, 53, 61, 62, 63, 65, 66, 67, 69, 71, 73, 75], "condition_report": 15, "conduct": [8, 53, 61, 69, 74], "confid": 3, "config": 0, "configur": [0, 1, 3, 4, 15, 31, 64, 65], "confirm": 68, "conflict": [1, 5], "conform": 30, "confrom": 30, "confus": [1, 6, 60, 61, 64], "congratul": [3, 5], "conjuct": 60, "conjunct": [4, 53, 60, 62], "conjur": 10, "connect": [0, 1, 69], "cons_grid_spec": 71, "consaggshockmarkov": 11, "consaggshockmodel": [0, 4, 28, 69], "consbequestmodel": [28, 61], "consecut": [6, 60], "consequ": 6, "consgenincprocess": 13, "consgenincprocessmodel": [0, 28, 45], "consgenincprocesssolv": 45, "consgenindshockmodel": 45, "conshealthmodel": [0, 28, 46], "consid": [1, 6, 8, 11, 29, 31, 48, 52, 54, 62, 63, 65, 66], "consider": [10, 60, 63, 70], "consier": 31, "consindshock": [0, 12, 15, 16, 20, 22, 57, 68, 74], "consindshockmodel": [0, 3, 5, 8, 12, 13, 14, 18, 19, 21, 22, 24, 25, 28, 45, 47, 48, 49, 54, 55, 57, 58, 60, 62, 63, 64, 68, 69, 70, 71, 72, 74], "consindshockmodelfast": 28, "consist": [0, 1, 8, 40, 47, 52, 61, 65, 67], "conskinkedr": [15, 22, 57], "conskinkyprefsolv": 57, "conslabeledmodel": 0, "conslaborintmarg": 17, "conslabormodel": [28, 50], "consmarkov": [6, 18, 22], "consmarkovmodel": [0, 6, 11, 15, 23, 28, 29, 51, 61], "consmarkovsolv": 51, "consmedmodel": [0, 28, 52, 53], "consmedshock": 19, "consmedshockmodel": 0, "consnewkeynesianmodel": [4, 28, 72, 73, 76], "consolid": 0, "consperfforesight": [6, 15, 16], "consperfforesight_simpl": 6, "consperfforesightsolv": [1, 49], "consportfolio": [12, 21], "consportfoliodict": 54, "consportfoliodiscretesolv": 0, "consportfoliojointdistsolv": 0, "consportfoliomodel": [0, 12, 28, 54, 55, 56], "consportfoliosolv": 0, "consprefshockmodel": [28, 51], "consprefshocksolv": 57, "consrepagentmodel": [0, 28, 58], "consriskyasset": [12, 24], "consriskyassetmodel": [12, 21, 28], "consriskycontrib": 0, "consriskycontribmodel": [28, 59], "conssequentialportfoliomodel": 56, "const_elast_sub": 40, "const_elast_subs_p": 40, "const_var": [8, 29, 65], "constant": [0, 8, 11, 14, 16, 17, 26, 29, 31, 35, 37, 40, 45, 49, 51, 53, 60, 61, 63, 64, 65, 67, 71, 74, 75], "constantfunct": [25, 37], "constitut": [8, 29, 65], "constrain": [0, 11, 13, 14, 15, 18, 19, 22, 23, 24, 25, 47, 52, 63, 64, 68], "constrained_n": 14, "constraint": [11, 12, 13, 15, 17, 19, 22, 23, 24, 25, 37, 45, 47, 48, 49, 51, 52, 53, 63, 64, 66, 67, 68, 70, 73, 76], "construct": [0, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 35, 37, 38, 42, 46, 51, 54, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76], "construct_hank_lognormal_income_process_unemploy": [20, 35, 71], "construct_lognormal_income_process_unemploy": [11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 25, 35, 52, 53, 62, 74], "construct_lognormal_wage_dstn": [14, 35], "construct_markov_lognormal_income_process_unemploy": [18, 35], "construct_shock": 38, "constructlognormalincomeprocess": 0, "constructor": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 35, 37, 38, 42, 45, 46, 49, 52, 53, 55, 57, 61, 63, 64, 67, 71, 72, 74], "constuctor": 22, "consum": [0, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 35, 40, 44, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74], "consumerlaborsolut": 17, "consumerparamet": 0, "consumersolut": [8, 12, 13, 14, 15, 19, 22, 24, 49, 51, 57, 61, 63], "consumertyp": [11, 15, 49], "consump": [15, 16], "consumpt": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 40, 44, 45, 51, 54, 55, 57, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75], "consumption_grid_spec": [72, 74], "consumptionsav": [0, 1, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76], "consumptionsavingmodel": 1, "consumpton": 67, "contain": [0, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 29, 30, 31, 32, 34, 35, 37, 38, 42, 45, 49, 57, 58, 61, 64, 69, 73, 77], "contant": [52, 53], "content": [0, 1, 6, 8, 29, 61, 62, 64, 71, 74], "context": [0, 6, 8, 10, 53, 54, 60, 61, 65, 66, 75], "continu": [0, 1, 4, 5, 6, 8, 10, 12, 29, 30, 31, 35, 38, 42, 46, 47, 48, 52, 60, 63, 64, 66, 67, 68, 69, 71, 74], "continuous_distribut": 29, "continuousfrozendistribut": [0, 31], "continuum": [58, 75], "contract": [33, 37, 52, 60, 63], "contrast": [6, 23, 49, 58, 65, 66, 67, 74, 76], "contrib_ag": 59, "contribut": [2, 3, 4, 5, 25, 51, 77], "contributor": 1, "control": [0, 6, 8, 14, 15, 17, 25, 29, 37, 38, 46, 50, 52, 53, 58, 61, 65, 66, 74], "convei": [6, 64], "conveni": [6, 8, 37, 53, 60, 61, 67, 74, 75], "convent": [8, 15, 16, 60, 61], "converg": [8, 11, 29, 33, 37, 59, 60, 63, 65, 73], "convergence_criteria": 37, "convers": [0, 1, 76], "convert": [0, 29, 60, 66, 74], "coord": 31, "coordin": [30, 31, 32, 37], "coordnin": 30, "copi": [1, 3, 5, 6, 11, 29, 31, 34, 38, 42, 44, 45, 49, 51, 54, 55, 56, 58, 59, 63, 64, 71, 74, 76], "copula": 0, "copy_modul": 34, "copy_module_to_loc": 34, "core": [0, 1, 4, 5, 12, 13, 14, 15, 17, 19, 21, 22, 24, 28, 33, 34, 37, 41, 66, 67, 69, 74, 77], "corr": [13, 26, 35], "corrdin": 30, "correct": [0, 1, 6, 10, 13, 37, 65, 68], "correctli": [1, 3, 48, 60, 66, 74], "correl": [13, 24, 35, 44, 45, 51, 52, 53, 64, 67, 75], "correspond": [3, 5, 6, 8, 11, 14, 16, 18, 29, 31, 37, 38, 40, 41, 46, 48, 51, 60, 63, 65, 66, 74], "correspondingli": [1, 8], "cosin": 0, "cost": [17, 52, 66, 67, 75], "costlessli": 52, "costli": [31, 66], "could": [0, 6, 8, 10, 14, 24, 31, 33, 46, 47, 49, 52, 53, 60, 61, 62, 64, 65, 68, 70, 71, 74], "couldn": 62, "counstruct": 70, "count": [8, 42], "counterfactu": 61, "countri": 70, "coupl": [47, 67, 71], "cours": [1, 49, 65, 66, 67, 68, 69, 74], "covari": 31, "cover": [1, 61, 64, 66], "coverag": 1, "cpi": 0, "cpol_grid": 76, "cpu": [8, 33], "craft": [5, 38], "crash": 68, "cratic": 11, "creat": [0, 1, 4, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 29, 33, 35, 42, 45, 47, 48, 49, 51, 54, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 74], "create_databas": 29, "create_distributed_ag": 29, "create_model": [71, 73], "credit": [1, 48], "criteria": 60, "criterion": [4, 8], "critic": [1, 4, 8, 29, 52, 63, 66, 67], "cross": [0, 1, 30, 35, 46, 66], "cross_sec": 68, "crra": [0, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 76], "crra_": 12, "crracdutil": 40, "crracdutilitypc": 40, "crracdutilitypc_inv": 40, "crracdutilitypd": 40, "crracon": 19, "crrame": [19, 53], "crrautil": [8, 40, 60], "crrautility_inv": [40, 53, 60], "crrautility_invp": [40, 60, 66], "crrautilityp": [40, 60], "crrautilityp_inv": [40, 60], "crrautilityp_invp": [40, 60], "crrautilitypp": [40, 60], "crrautilityppp": [40, 60], "crrautilitypppp": [40, 60], "crucial": 71, "cstwmpc": [0, 1], "cstwmpcold": 0, "csv": 0, "cthruxfunc": 19, "cubic": [0, 8, 12, 13, 15, 17, 19, 21, 22, 24, 26, 37, 45, 47, 48, 51, 53, 57, 63], "cubic_interp_fast": 39, "cubicbool": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45, 47, 48, 51, 53, 63, 74], "cubichermiteinterp": [0, 37], "cubichermitesplin": 37, "cubicinterp": [37, 66], "culmin": 5, "cultiv": [8, 29, 65], "cultur": 1, "cumlivprb": 68, "cumprod": [35, 68], "cumsum": 71, "cumul": [48, 49, 50, 68, 71], "curat": 1, "currenlti": 42, "current": [1, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 22, 25, 29, 31, 33, 35, 37, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 75], "curs": 46, "cursori": 64, "curv": [37, 42, 49, 66], "curvatur": 66, "curvi": 66, "curvilinear": [8, 37], "curvilinear2dinterp": [14, 37, 46, 67], "custom": [0, 5, 37, 51, 60, 62, 63, 66], "customiz": 65, "cutoff": 42, "cyc_ag": 63, "cyc_dictionari": 63, "cycl": [0, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 68, 71, 72, 74, 76], "cyclic": 0, "cyclicaldict": 63, "cyclicalexampl": 63, "d": [1, 3, 6, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 30, 31, 40, 45, 47, 48, 49, 51, 53, 57, 59, 60, 61, 64, 69, 75, 76], "d_bar": 40, "d_t": [46, 52], "dad": 74, "dadr": 71, "dadz": 71, "dai": [1, 10, 26], "damp": [0, 4, 44], "dampingfac": [4, 44], "darwin": 42, "dash": 68, "data": [0, 1, 4, 5, 6, 8, 10, 29, 31, 33, 35, 42, 45, 47, 48, 51, 60, 61, 62, 63, 64, 65, 66, 69, 70, 74, 76], "data_simul": 73, "data_simul_ha": 71, "data_simul_ra": 71, "data_simul_ta": 71, "data_to_match": 1, "dataarrai": [0, 31], "datafil": 0, "datafram": [29, 59], "dataset": [0, 31], "datatyp": 6, "date": [0, 1, 64, 70], "db": 71, "dblock": [0, 38, 41], "dcdm": 19, "dcdp": 19, "dcdr": [71, 74], "dcdshk": 19, "dcdz": 71, "dcegm": [0, 28], "dcount": 25, "dct": 0, "de": 74, "deactiv": 3, "dead": [6, 68, 74], "deal": [0, 5, 15, 24, 61, 64, 69], "dealt": 69, "dear": 68, "dearli": 68, "death": [6, 12, 14, 26, 46, 49, 52, 61, 63, 64, 67, 68, 74], "death_ag": 68, "debian": 42, "debt": [15, 16, 47, 48, 49, 71], "debug": [6, 74], "decad": 66, "decai": [0, 13, 35, 37, 54, 66], "decay_hark": 32, "decay_prop": 32, "decayinterp": [0, 32], "deced": [6, 74], "decemb": 0, "decid": [56, 60], "decis": [0, 4, 11, 14, 17, 25, 26, 29, 38, 41, 42, 46, 52, 53, 57, 58, 61, 64, 65, 66, 67, 71, 73], "declar": [1, 61, 69], "declin": 52, "decompos": 52, "decor": [0, 43], "decreas": [1, 30, 46, 63], "dedic": 0, "deduct": [0, 25], "deem": 8, "deep": [4, 5, 29, 34, 60, 71], "deepcopi": [44, 51, 58, 64, 76], "deeper": 60, "deepli": 71, "def": [1, 44, 54, 59, 62, 70, 71, 72, 73, 74, 76], "default": [0, 1, 3, 4, 6, 8, 12, 13, 15, 17, 19, 20, 21, 22, 24, 29, 30, 31, 32, 33, 35, 37, 40, 41, 42, 46, 49, 51, 52, 53, 54, 55, 57, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74], "default_": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 61, 62, 74], "defici": 10, "defin": [0, 3, 5, 6, 8, 12, 13, 15, 17, 18, 20, 22, 24, 25, 26, 29, 30, 31, 37, 38, 41, 42, 45, 46, 48, 49, 51, 52, 53, 54, 57, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74], "define_distribution_grid": 20, "definit": [0, 8, 21, 37, 47, 51, 53, 54, 60, 62, 64, 66], "defint": 62, "degener": [35, 37, 47, 74], "degre": [8, 25, 33, 40, 60, 70, 71], "del_from_time_inv": [29, 76], "del_from_time_vari": 29, "del_param": 29, "delaunai": 46, "delcar": 6, "delet": [0, 1, 29, 60, 76], "delta": [14, 46, 58, 69, 73], "delta_": 46, "delta_mnrm_zerofunc": 15, "delta_t": [14, 46], "dem": 8, "demand": [69, 73], "demark": [0, 1, 3, 5, 30, 77], "demo": 0, "demonstr": [0, 1, 4, 6, 8, 22, 46, 57, 64, 66, 67, 68, 71, 76], "denardi": 67, "deni": 3, "denomin": 53, "denot": [6, 52, 60, 66, 74, 75], "dens": [11, 15, 18, 22, 47, 53], "densiti": [20, 70], "depend": [0, 1, 4, 6, 8, 11, 12, 13, 14, 15, 17, 19, 24, 29, 32, 35, 37, 41, 42, 49, 53, 60, 61, 62, 65, 66, 67, 75], "deploi": 1, "deposit": 25, "deprec": [0, 15, 76], "deprecationwarn": 76, "depreci": [4, 14, 46, 58, 67, 69, 73], "deprfac": [4, 23, 58], "deprrt": 14, "deprrte_": 14, "deprrtecount": [14, 46], "deprrtedstn": 14, "deprrtemean": [14, 46], "deprrtespread": [14, 46], "der": 40, "der_func": 40, "der_interp": 37, "derin": 70, "derinv": 40, "deriv": [0, 5, 8, 19, 21, 32, 33, 37, 40, 42, 47, 53, 54, 56, 60, 67, 74], "derivativei": [19, 37, 66], "derivativew": [37, 66], "derivativex": [19, 37, 50, 57, 66], "derivativexx": 37, "derivativez": [19, 37, 66], "descend": 67, "describ": [0, 1, 5, 6, 8, 13, 15, 16, 25, 26, 29, 30, 33, 45, 47, 48, 49, 51, 60, 61, 63, 64, 65, 66, 75], "describe_constructor": [29, 62, 74], "describe_model": [29, 68, 74], "describe_paramet": 15, "descript": [0, 1, 3, 4, 6, 8, 10, 15, 16, 38, 45, 46, 47, 48, 49, 51, 52, 53, 57, 64, 65, 67, 68, 69, 74, 77], "design": [1, 3, 5, 6, 8, 10, 29, 37, 38, 52, 53, 63, 65, 69, 71], "desir": 37, "desktop": [1, 3], "despit": [26, 63, 65], "destroi": 68, "detail": [0, 1, 3, 4, 5, 6, 8, 25, 31, 42, 48, 49, 57, 60, 63, 64, 66, 68, 71, 74, 76, 77], "determin": [0, 4, 6, 8, 11, 15, 17, 18, 24, 25, 26, 29, 31, 37, 42, 52, 61, 67, 69], "determine_platform": 42, "determinist": [6, 25, 49, 63, 69, 75], "dev": [1, 3, 7, 71, 73], "develo": 3, "develop": [5, 8, 10, 34, 53, 60, 61, 66, 67, 69, 71, 77], "development": [62, 68, 74], "deviait": 35, "deviat": [0, 19, 22, 31, 35, 44, 45, 47, 48, 49, 52, 57, 59, 62, 63, 66, 68, 70, 71, 73, 74, 75, 76], "devot": 69, "df": [32, 59], "dfdw": 37, "dfdx": 37, "dfdx_out": 37, "dfdy": 37, "dfdy_out": 37, "dfdz": 37, "dfdz_out": 37, "dfrac": 59, "dfracfunc": 59, "dfracfunc_adj": [25, 59], "dfracfunc_fxd": 25, "dfracgrid": 25, "dg": 71, "dgrid": 25, "di": [6, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 26, 29, 49, 53, 68, 74, 75], "diagram": 69, "dict": [12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 31, 35, 38, 41, 42, 76], "dict_kei": 60, "dict_nam": 62, "dictionari": [0, 4, 6, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 31, 35, 38, 41, 42, 45, 47, 48, 49, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74], "did": [0, 5, 10, 47, 64, 65, 69, 71], "didn": [63, 64], "die": [0, 6, 11, 12, 15, 18, 26, 29, 41, 49, 61, 63, 68], "dieprb": [12, 14, 15, 17, 21, 22, 24, 47, 48, 49], "dieprb_": [12, 14, 15, 17, 21, 22, 24, 47, 48, 49], "dieprb_t": [14, 49], "dieprobmax": [14, 46], "dieprobmaxcoeff": [14, 46], "differ": [1, 3, 4, 5, 6, 8, 10, 11, 13, 15, 16, 22, 29, 30, 31, 33, 37, 45, 47, 49, 51, 52, 53, 54, 56, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "differenc": 66, "differenti": [6, 8, 40, 61, 63], "differnc": 66, "difficult": [5, 6, 46, 52, 71, 74], "difficulti": 52, "dig": [1, 47], "digest": 64, "digit": 76, "dim": [31, 66], "dim_to_keep": 31, "dimens": [0, 8, 14, 19, 20, 31, 37, 46, 60, 66, 67], "dimension": [0, 31, 46], "dimensionless": 8, "direct": [42, 63, 74, 75], "directli": [1, 3, 6, 8, 31, 34, 57, 65, 67, 69], "directori": [0, 1, 3, 5, 8, 34, 42, 69], "disabl": [29, 70], "disable_log": 29, "disc_param": 38, "discard": [0, 4, 6, 31], "discconsportfoliodict": 54, "discfac": [3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 45, 46, 47, 48, 49, 52, 53, 59, 63, 64, 68, 70, 71, 72, 73, 74, 76], "discfac_star": 71, "discontinu": [37, 48, 71], "discord": 1, "discount": [3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 45, 46, 47, 48, 49, 51, 52, 53, 57, 59, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76], "discourag": 1, "discoveri": [10, 69], "discrep": 60, "discret": [0, 4, 5, 6, 8, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 25, 29, 30, 31, 35, 37, 38, 42, 45, 47, 48, 49, 51, 52, 53, 56, 57, 60, 61, 62, 64, 65, 68, 71, 73, 74, 76], "discrete_distribut": 29, "discrete_v": 37, "discretedistribuion": 19, "discretedistribut": [0, 14, 20, 22, 25, 31, 35, 44], "discretedistributionlabel": [0, 31, 35, 38, 51], "discretedistributionxra": 0, "discretedstn": 0, "discretefrozendistribut": [0, 31], "discreteinterp": 37, "discretesharebool": [12, 21, 25, 54, 59], "discretetyp": 54, "discretized_dstn": 31, "discretized_shock_dstn": 38, "discuss": [4, 5, 6, 31, 53, 61, 63, 64, 66, 69, 74], "disk": [42, 60], "displai": [6, 29, 42, 44, 51, 64, 74, 75], "disproportion": 6, "dissatisfact": 5, "dissolv": 71, "dist": [31, 38, 60], "dist_mgrid": [20, 42, 76], "dist_of_func": 31, "dist_param": 54, "dist_pgrid": [20, 42, 76], "distanc": [0, 4, 8, 11, 29, 33, 37, 42, 59, 63, 64, 65, 66, 71], "distance_criteria": [8, 15, 16, 17, 19, 21, 25, 32, 37, 40, 60], "distil": 5, "distinct": [61, 74], "distr_of_funct": [0, 31], "distri": [11, 15, 18, 22], "distribuion": 35, "distribut": [0, 3, 4, 5, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 35, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75], "distribute_param": [0, 29], "distributed_param": 29, "distributeparam": 0, "distributioni": 35, "disturb": [70, 71], "dive": 8, "divert": 25, "divid": [15, 44, 45, 47, 48, 49, 50, 53, 64, 67], "dk_": 75, "dm_t": 21, "dmeddm": 19, "dmeddp": 19, "dmeddshk": 19, "do": [0, 1, 3, 5, 8, 10, 12, 13, 15, 17, 19, 21, 22, 24, 29, 34, 41, 42, 45, 47, 48, 49, 53, 56, 60, 61, 62, 63, 64, 68, 69, 70, 71, 75], "do_simul": [50, 51, 53, 57], "doc": [0, 1, 3, 4, 31, 37, 42, 73], "docker": 4, "docstr": [0, 1, 74], "documen": 29, "document": [0, 3, 5, 6, 8, 11, 15, 16, 29, 34, 37, 47, 48, 49, 53, 60, 63, 64, 65, 69, 73], "doe": [1, 3, 6, 8, 11, 12, 13, 15, 19, 22, 23, 24, 25, 29, 35, 41, 42, 46, 48, 49, 52, 53, 60, 61, 62, 63, 64, 66, 67, 68, 69, 76], "doesn": [45, 49, 53, 60, 61, 64, 66, 67, 68, 69, 74], "doi": [4, 25, 30], "dollar": [11, 15, 18, 22, 53, 67], "dolo": [15, 29], "domain": [0, 8, 42, 66], "don": [0, 1, 3, 6, 29, 44, 51, 53, 60, 62, 63, 64, 65, 66, 68, 71, 74], "donat": 1, "done": [5, 6, 8, 29, 45, 46, 61, 62, 63, 65, 66, 67, 68, 69], "dot": [1, 8, 31, 60, 71, 74, 76], "doubl": [42, 64, 73], "dougla": [0, 11, 40, 44, 58, 60, 67, 69, 75], "down": [11, 33, 44, 60, 61, 62, 64, 67, 68, 71, 72], "download": [3, 5, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "downstream": [0, 6], "downtim": 60, "downward": 49, "dr": [38, 41], "dr_": 75, "drag": 49, "dramat": [68, 76], "draw": [0, 11, 13, 14, 18, 21, 23, 24, 25, 29, 31, 38, 41, 42, 45, 48, 49, 52, 53, 60, 61, 62, 63, 65, 67, 74, 76], "draw_ev": 31, "draw_shock": 41, "drawdiscret": 0, "drawfig": 42, "drawn": [0, 6, 13, 14, 15, 26, 33, 35, 41, 45, 49, 52, 53, 61, 63, 66, 67, 68, 74, 76], "dreiv": 0, "drive": [10, 34, 52], "driver": 10, "drop": [0, 1, 53, 63, 68], "ds_t": 21, "dstn": [24, 31, 46, 68, 74, 76], "dtype": 61, "du": [4, 71, 72, 73, 76], "duct": 26, "due": [0, 6, 29, 37, 45, 46, 48, 49, 54, 65], "dummi": [6, 29, 31, 35, 62, 63, 74], "dunder": 0, "duplic": 6, "durabl": [40, 71], "durat": 4, "dure": [4, 6, 8, 10, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 35, 41, 45, 47, 48, 51, 52, 53, 61, 62, 63, 65, 68, 69, 70, 74], "durmeanb": 4, "durmeang": 4, "dv_t": 21, "dvdhfunc": 14, "dvdm": 37, "dvdmfunc": [14, 25, 37], "dvdmfunc_adj": 25, "dvdmfunc_fxd": 25, "dvdmfuncfxd": 21, "dvdnfunc": 25, "dvdnfunc_adj": 25, "dvdnfunc_fxd": 25, "dvdsfunc": 25, "dvdsfunc_fxd": 25, "dvdsfuncfxd": 21, "dw_": 75, "dx": [32, 76], "dy": [32, 42, 49], "dydx": [37, 66], "dydx_list": [37, 39], "dydx_valu": 66, "dyn_var": [4, 8, 29, 65], "dynam": [0, 4, 5, 8, 10, 11, 20, 29, 30, 35, 38, 41, 42, 44, 45, 46, 53, 63, 64, 67, 68, 71, 74], "dynar": [10, 71], "dz": [32, 73], "dz_": 75, "e": [1, 3, 5, 6, 8, 12, 13, 15, 17, 19, 21, 22, 24, 29, 32, 35, 37, 40, 45, 46, 47, 48, 50, 51, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74], "e_": 75, "e_param": 33, "each": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76], "earli": [65, 66], "earlier": [33, 62, 68], "earliest": 29, "earn": [14, 46, 49, 63, 64], "eas": 67, "easi": [5, 6, 8, 51, 52, 62, 64, 65, 67], "easier": [5, 6, 8, 10, 15, 29, 63, 66, 69], "easiest": [5, 62, 68], "easili": [0, 3, 5, 6, 8, 10, 29, 31, 52, 53, 60, 62, 66, 67, 69, 75], "ecma": 74, "econ": [0, 2, 3, 4, 5, 9, 15, 16, 25, 30, 34, 42, 46, 65, 67, 73, 74, 76], "econ2": [26, 42, 54, 56], "econforg": [0, 32], "econforgeinterp": [0, 28], "econom": [0, 1, 4, 5, 8, 10, 20, 29, 64, 65, 74, 77], "econometr": [5, 10], "econometrica": [4, 5], "econometrician": 10, "economi": [0, 5, 8, 11, 44, 51, 63, 67, 69, 73, 74, 76], "economist": [1, 5, 74], "economyexampl": [44, 69], "ecta17434": 4, "ed": 65, "edg": 32, "edit": [1, 48], "edli": 26, "edu": [4, 26, 42, 54, 56, 71, 76], "educ": [60, 68], "eevalgrid": 54, "effect": [5, 6, 11, 31, 35, 52, 60, 67, 69], "effici": [0, 5, 40, 42, 52, 67, 74, 76], "effort": [8, 10, 63, 69, 74], "eg": 69, "egm": [0, 30, 46, 47, 53, 66], "eh": 62, "ei": [71, 73], "eigenvalu": 20, "eigenvector": [20, 76], "either": [3, 5, 8, 23, 24, 26, 29, 31, 35, 45, 49, 57, 58, 63], "elabor": [66, 69], "elast": [40, 60, 73], "elastist": 60, "element": [6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 31, 32, 33, 35, 37, 38, 42, 47, 48, 49, 51, 52, 60, 63, 64, 67, 70, 74, 76], "eler": 37, "elev": 5, "eleven": 63, "elif": [44, 76], "elig": [6, 74], "elimin": [6, 8, 30, 64, 66], "ell": 75, "ell_": 58, "elogpermshk": 15, "els": [3, 4, 5, 6, 42, 50, 53, 59, 62, 66, 72, 74, 76], "elsewher": [15, 16, 60, 68], "email": [1, 3], "eman": 64, "embarrassingli": 60, "embed": 26, "embodi": 64, "emphas": 68, "empir": [5, 60, 68], "emploi": [4, 26, 49, 51, 67], "employ": [0, 4, 26, 70], "employed_income_dist": 51, "employment_r": 4, "empnow": 4, "empti": [0, 3, 6, 11, 15, 61, 65, 68, 74], "enabl": [0, 4, 6, 37, 61, 66, 69, 74], "enable_log": 29, "encompass": 8, "encount": [29, 44, 50, 53, 62, 66], "encourag": [1, 5, 8], "end": [0, 1, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 35, 38, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 64, 66, 68, 69, 73, 74, 75, 76], "end_tim": [50, 51, 55], "endofprd": 66, "endofprd_vp": 66, "endofprddvda_adj": 21, "endofprddvda_fxd": 21, "endofprddvds_fxd": 21, "endogen": [0, 6, 8, 14, 15, 17, 29, 30, 37, 46, 47, 48, 51, 52, 53, 64, 65, 69, 75], "endogenous_prev": [15, 29], "endogenous_st": [15, 29], "endow": 0, "endpoint": [0, 31, 59], "enforc": [37, 43], "engin": [3, 10, 31, 41], "english": 6, "enhanc": [0, 5], "enorm": 5, "enough": [5, 52, 53, 64, 65, 74], "ensur": [1, 4, 6, 8, 11, 13, 14, 22, 24, 46, 49, 60, 76], "enter": [5, 8, 20, 34, 65, 67, 74], "entir": [6, 15, 49, 53, 60, 64, 67, 74, 75], "entri": [1, 6, 11, 14, 15, 22, 30, 31, 32, 35, 37, 42, 60, 61, 62, 68, 74], "enumer": [71, 73], "env": 3, "env_ind": 30, "envelop": [0, 8, 30, 37, 52, 53, 66], "environ": [4, 11, 34, 42, 49, 65, 68], "ep": 74, "epanechnikov": 42, "epanechnikov_kernel": 42, "eplic": 8, "eponym": 3, "eproduct": 8, "epsilon": 60, "epsilon_": [69, 75], "epsilon_t": 75, "eq": 0, "eqnarrai": [13, 19, 45, 51, 52, 53, 57, 58, 66, 69], "equal": [31, 33, 35, 37, 41, 46, 48, 49, 53, 60, 61, 66, 67, 68, 69, 71], "equat": [0, 1, 4, 12, 26, 37, 38, 41, 46, 47, 52, 53, 66, 69, 71], "equilibria": 65, "equilibrium": [5, 8, 11, 20, 29, 44, 73, 75], "equiprob": [0, 14, 19, 22, 31, 35, 47, 51, 54, 57, 60, 62, 64, 66, 68], "equispac": 74, "equiv": [46, 47, 53, 64, 66, 75], "equival": [8, 14, 25, 42, 67], "er": 61, "eras": [17, 29], "erf": 66, "erfc": [52, 66], "erg_dstn": 76, "ergod": [0, 20, 61, 68, 76], "ergord": 20, "error": [0, 1, 3, 4, 6, 11, 15, 18, 22, 29, 31, 37, 45, 49, 52, 60, 62, 65, 66, 67, 74, 76], "escap": [6, 47], "esp": 4, "especi": [1, 53, 62, 66], "esqu": 71, "essenc": [5, 65], "essenti": [29, 47, 48, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74], "establish": 10, "estatenow": 26, "estim": [0, 1, 4, 5, 10, 22, 28, 35, 46, 62, 70, 71, 73, 74], "estimationparamet": 70, "et": [0, 30, 70, 74, 75], "eta": [19, 22, 52, 53, 57, 60], "eta_": [22, 52, 53, 57], "eta_t": [19, 22, 52, 53, 57], "etc": [0, 3, 5, 6, 8, 10, 13, 15, 16, 17, 29, 31, 37, 46, 58, 61, 64, 65, 67, 71, 74], "euler": [4, 11, 15, 18, 22, 26, 71], "eulererrorfunc": [11, 15, 18, 22], "eval": [33, 37], "eval_func": 40, "eval_health_prod": 14, "eval_marg_health_prod": 14, "eval_with_deriv": 37, "evalu": [0, 4, 8, 14, 15, 19, 30, 31, 32, 33, 37, 38, 40, 42, 47, 53, 60, 61, 66, 68, 74], "even": [1, 6, 8, 15, 25, 29, 46, 49, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 74, 75], "evenli": 47, "event": [10, 29, 31, 45, 61, 68, 74], "eventu": [15, 29, 49, 67, 68, 74], "ever": [6, 29, 60], "everi": [1, 8, 11, 12, 15, 22, 29, 30, 33, 37, 45, 49, 60, 63, 64, 65, 66, 69, 74, 75], "everybodi": [10, 69], "everyon": [6, 66, 68], "everyth": [3, 6, 49, 60, 63, 64, 69], "everywher": [14, 47, 66], "evolut": [8, 11, 29, 75], "evolv": [4, 6, 11, 13, 19, 51], "ex": [0, 8, 10, 11, 29, 47, 48, 49, 60, 65, 70], "ex_incnext": 16, "exact": [49, 54, 63, 66, 67, 68, 69], "exact_match": 31, "exactli": [6, 14, 31, 44, 47, 48, 49, 50, 51, 60, 63, 66, 67, 76], "examin": [4, 45, 68, 69], "exampl": [0, 6, 13, 19, 30, 31, 32, 34, 40, 50, 51, 54, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77], "example1": 76, "example_consaggshockmodel": 4, "example_consportfoliomodel": 0, "example_notebook": 1, "example_wealthportfolio": 67, "exce": [6, 47, 48, 49], "exceed": 26, "excel": [4, 71], "except": [0, 6, 8, 13, 29, 41, 42, 48, 49, 51, 57, 61, 62, 63, 64, 67, 68, 74], "exclam": 6, "exclud": [37, 60], "exclus": 42, "exec": 0, "execut": [1, 3, 4, 6, 8, 29, 34, 38, 60, 61, 62, 64, 65, 68], "exercis": [6, 63, 68, 70, 74], "exhaust": 53, "exhibit": [15, 76], "exist": [0, 1, 5, 6, 8, 10, 11, 13, 15, 23, 29, 31, 37, 45, 47, 49, 58, 61, 62, 63, 64, 67, 69, 74, 77], "exit": [60, 61, 65], "exogen": [0, 6, 8, 11, 15, 18, 25, 29, 37, 38, 47, 48, 52, 53, 61, 65, 69, 71, 75], "exogenous_prev": [15, 29], "exp": [17, 19, 35, 44, 46, 47, 48, 52, 53, 60, 66, 74], "expand": [0, 1, 8, 10, 48, 63, 64, 65], "expans": [4, 33], "expect": [0, 4, 6, 11, 12, 13, 15, 17, 18, 22, 31, 35, 37, 38, 45, 51, 53, 56, 57, 60, 61, 62, 63, 65, 66, 67, 68, 69, 74, 75], "expected_valu": 60, "expenditur": [19, 53, 71], "expens": [52, 60, 75], "experi": [6, 8, 10, 11, 34, 35, 45, 46, 51, 52, 61, 63, 64, 67, 69, 76], "experienc": [3, 8, 29, 68, 74], "experiment": 1, "expir": 41, "explain": [4, 5, 6, 8, 10, 45, 63, 64, 66, 69], "explan": [3, 5, 6, 8, 63, 64], "explanatori": 8, "explicit": [10, 35, 54, 74], "explicitexampl": 45, "explicitli": [0, 5, 6, 13, 45, 62, 66, 67, 71, 74], "exploit": 4, "explor": [4, 8, 34, 52, 62], "explos": 4, "expmedfunc": 52, "expon": [14, 46], "exponenti": [4, 6, 20, 25, 42, 45, 46, 47, 48, 49, 53, 60, 62, 66, 73, 76], "expos": [60, 70], "exposit": [15, 75], "expositori": [11, 15, 18, 22], "express": [0, 6, 38, 46, 52, 53, 63, 66, 67, 71, 75], "extant": 35, "extend": [0, 5, 8, 11, 13, 18, 20, 22, 45, 51, 52, 53, 57, 60, 61, 65, 66, 67, 69], "extens": [0, 4, 5, 8, 11, 20, 22, 42, 48, 57, 69], "extent": [1, 5, 47, 59, 62, 67], "extra": [0, 6, 12, 17, 42, 45, 53, 64, 68], "extract": [0, 35, 53, 68, 74, 76], "extraordinarili": 49, "extrap_decay_hark": 32, "extrap_decay_prop": 32, "extrap_method": 32, "extrap_mod": 32, "extrap_past": 32, "extrapol": [0, 32, 37, 45, 53, 66, 67], "extrem": [0, 11, 37, 67, 70], "ey": [48, 51], "f": [4, 14, 31, 32, 37, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64, 66, 68, 73, 75], "f_": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 51, 57, 58, 63, 64, 68], "f_approx": 60, "f_dstn": 31, "f_exp": 31, "f_ss": 71, "f_t": [52, 53, 63, 64, 68], "f_val": 32, "f_valu": [37, 66], "f_w": 37, "f_x": 37, "f_y": 37, "f_z": 37, "face": [0, 4, 8, 11, 14, 25, 45, 48, 51, 57, 63, 67, 68, 69, 71, 73, 75, 76], "fact": [6, 49, 54, 60, 61, 64, 67, 75], "factor": [0, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 35, 40, 44, 45, 46, 47, 48, 49, 52, 53, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76], "factori": 38, "fagereng": 70, "fail": [1, 15, 29, 35, 37, 62, 74], "fair": 52, "fairli": [1, 6, 37, 48, 52, 60, 63, 65, 67, 68], "faith": [4, 53], "fake": [0, 61, 62, 66, 74, 75], "fall": [29, 32, 42, 63], "fals": [0, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 35, 37, 39, 42, 44, 45, 47, 48, 51, 53, 55, 59, 60, 61, 62, 63, 67, 68, 72, 73, 74], "familiar": [60, 69], "famous": [46, 66, 67], "fanci": 69, "far": [5, 32, 66, 68], "farm": 65, "fashion": [1, 69, 71], "fashionvictim": 0, "fast": [0, 6, 62, 71], "faster": [0, 10, 31, 37, 68, 76], "fear": 1, "featur": [1, 4, 6, 8, 35, 47, 49, 52, 54, 60, 61, 64, 66, 68, 70], "februari": 0, "fect": 26, "fed": 71, "feed": [6, 63], "feedback": [1, 6, 15, 69], "feel": [1, 8, 64], "femal": [60, 68], "few": [0, 1, 5, 6, 24, 44, 47, 48, 49, 60, 63, 68, 71, 76], "fewer": [4, 51, 67], "fhwc": 15, "fhwfac": 15, "field": [0, 5, 15, 29, 60], "fig": [59, 71, 73], "figaspect": 59, "figsiz": [59, 71, 73, 76], "figur": [1, 4, 25, 42, 45, 46, 47, 54, 59, 63, 64, 66, 68, 72, 76], "figure_nam": 42, "file": [0, 1, 2, 3, 5, 7, 8, 10, 20, 21, 24, 25, 29, 33, 34, 35, 60, 61, 62, 67, 74], "filenam": [33, 42, 60, 62], "files_in_dir": 42, "fill": [0, 6, 29, 37, 49, 61, 65], "filterwarn": 70, "final": [0, 1, 3, 4, 6, 25, 29, 35, 37, 49, 51, 61, 62, 63, 65, 66, 73, 74], "financ": [48, 58], "find": [0, 1, 3, 4, 5, 8, 11, 14, 15, 21, 26, 29, 30, 31, 37, 47, 48, 52, 53, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75], "find_coord": 37, "find_coords_numba": 37, "find_gui": 42, "find_sector": 37, "find_sector_numba": 37, "find_steady_st": 71, "finder": 0, "fine": [6, 62, 63, 68], "finf": 75, "finhorizonag": 76, "finish": [3, 59, 60, 69], "finit": [6, 8, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 31, 37, 50, 59, 60, 62, 66, 69, 74, 76], "firm": [4, 5, 10, 65, 69], "first": [0, 1, 3, 4, 5, 6, 8, 10, 11, 14, 17, 25, 30, 31, 37, 38, 40, 42, 45, 46, 47, 48, 49, 52, 53, 54, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76], "firstli": 3, "fiscal": 71, "fit": [31, 70], "five": [47, 63, 69], "fix": [0, 1, 8, 10, 12, 21, 37, 42, 44, 52, 53, 57, 60, 61, 65, 67, 68, 75, 76], "fixedportfolioshareriskyassetconsumertyp": 0, "fixedshareexampl": 55, "fjac": 73, "flag": [1, 8, 33, 61], "flake8": 0, "flat": [35, 45, 47, 48], "flatten": [0, 42, 46, 53, 57, 59, 76], "flavor": 8, "flaw": 0, "flexibl": [4, 8, 35, 61, 63, 65, 66, 67], "flip": [0, 6, 66], "float": [0, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 33, 35, 37, 40, 42, 45, 49, 66, 68, 70, 74], "flow": [0, 13, 17, 25, 49, 51, 52, 53, 58, 64, 66, 67, 68], "fluctuat": [69, 73], "fly": 68, "fmin": [33, 60], "fmin_powel": 60, "foc": [12, 52, 53, 66], "focal": 5, "focus": 60, "fold": 67, "folder": [0, 1, 3, 8, 42], "follow": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 15, 17, 19, 21, 22, 23, 24, 25, 29, 34, 35, 38, 42, 45, 46, 52, 53, 61, 62, 63, 65, 66, 67, 68, 69, 74, 75, 76], "forc": [12, 13, 15, 17, 19, 21, 22, 24, 29, 62], "foresight": [0, 11, 12, 13, 15, 16, 17, 19, 21, 22, 24, 26, 47, 48, 67, 69, 73, 75], "forget": [3, 63, 64], "fork": [1, 3], "form": [0, 4, 8, 10, 12, 29, 37, 45, 46, 47, 49, 51, 52, 53, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 76], "format": [0, 1, 6, 8, 42, 46, 50, 53, 60, 61, 65, 66, 68, 71, 72, 74], "former": [0, 14, 60, 61], "formula": 52, "forthcom": 0, "fortuit": 49, "forum": 4, "forward": [0, 4, 13, 35, 71, 74], "found": [0, 4, 5, 7, 8, 10, 29, 30, 33, 37, 42, 47, 62, 63, 64, 67, 68, 69, 71, 74, 75], "foundat": [3, 53, 71], "four": [6, 59, 60, 63, 69], "fourth": [37, 60], "fperri": 31, "frac": [12, 13, 14, 15, 17, 19, 21, 22, 24, 35, 45, 46, 47, 49, 51, 52, 53, 57, 58, 60, 63, 64, 66, 68, 69, 71, 74, 75], "fraction": [17, 25, 58, 67], "frame": [0, 8, 64], "frameagenttyp": 0, "framemodel": 0, "frameset": 0, "framework": [1, 4, 5, 8, 26, 29, 41, 52, 65, 66, 67, 69, 73], "free": [0, 1, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 33, 35, 45, 46, 47, 48, 49, 52, 53, 60, 63, 64, 66, 68, 74], "freeli": [60, 61], "french": 67, "frequenc": [60, 67], "freshli": 61, "fret": 10, "friction": [0, 25], "frictionless": 54, "friedman": 74, "friendli": 1, "from": [0, 1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "from_dataset": 31, "from_mean_std": [0, 31], "from_solut": 29, "from_t": 29, "from_unlabel": [31, 60], "fromt": 31, "frozen": 3, "frustrat": 10, "ftol": 33, "full": [0, 1, 4, 5, 8, 25, 26, 31, 34, 37, 48, 60, 67, 69], "full_module_nam": 34, "fulli": [8, 13, 15, 16, 47, 48, 49, 52, 61, 63, 65, 66, 67, 68], "fun": [42, 67, 73], "func": [6, 14, 31, 37, 68, 74], "function": [0, 1, 3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77], "function_list": 59, "function_nam": 8, "functionnam": 1, "fund": [0, 25, 71], "fundament": [1, 5, 67, 68, 71, 72], "funki": 6, "further": [8, 10, 16, 42, 46, 52, 53, 65, 77], "futur": [0, 8, 11, 12, 15, 16, 17, 18, 22, 46, 47, 48, 49, 51, 52, 53, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76], "futz": 61, "fvacpf": 15, "g": [1, 3, 5, 6, 8, 13, 14, 29, 32, 35, 37, 40, 45, 46, 48, 52, 53, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 74], "g_": [13, 35, 45, 52, 53, 63], "g_error": 66, "g_ss": 71, "g_t": [19, 52], "gain": [5, 12], "gamma": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 64, 68], "gamma_": [13, 19, 35, 45, 51, 57, 58, 63, 64, 68], "gamma_t": [63, 64, 68, 69], "gap": [30, 71], "gather": [8, 69, 70], "gauss": 31, "gaussian": [60, 66], "gave": [67, 69], "gdp": 71, "geari": [12, 40, 60], "gen_tran_matrix_1d": 42, "gen_tran_matrix_2d": 42, "gener": [0, 1, 4, 5, 6, 11, 13, 14, 15, 18, 19, 22, 23, 24, 25, 29, 31, 33, 35, 37, 41, 42, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76], "generalincomeprocessmodel": 66, "genet": 8, "genincdictionari": 45, "genincomeprocessconsumertyp": 53, "genincprocessconsumertyp": [13, 45, 52], "genincprocessmodel": [13, 53], "genincshockconsumertyp": [13, 19], "gentl": [4, 5, 60, 61, 62, 63, 65, 66, 67, 68, 73], "geometr": [12, 15, 16, 47, 48, 49, 51, 54, 57, 64, 66, 67, 68], "geq": [12, 13, 15, 19, 21, 22, 24, 45, 47, 48, 49, 51, 52, 53, 57, 63, 64, 66, 68, 75], "get": [0, 3, 4, 5, 6, 8, 11, 12, 15, 17, 18, 19, 22, 25, 29, 45, 46, 47, 48, 51, 52, 53, 58, 59, 60, 63, 67, 68, 69, 74, 77], "get_adjust": 24, "get_aggshock": 11, "get_arg_nam": [42, 74], "get_arrival_value_funct": 38, "get_control": [11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 29, 38, 41], "get_controls_cn": 25, "get_controls_reb": 25, "get_controls_sha": 25, "get_decision_value_funct": 38, "get_dynam": 38, "get_economy_data": [4, 11, 44, 69], "get_it_from": [42, 62], "get_long_run_averag": 71, "get_lorenz_shar": 42, "get_maggnow": 11, "get_markov_st": 18, "get_mort": [29, 41, 61], "get_paramet": 29, "get_percentil": 42, "get_permgrofacagglr": 11, "get_permshkdstn_from_incshkdstn": [11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 35, 62, 74], "get_permshkdstn_from_incshkdstn_markov": [18, 35], "get_post_st": 25, "get_postst": [13, 14, 15, 17, 18, 19, 26, 29, 41], "get_rfre": [11, 15, 18, 22, 24, 61], "get_riski": 24, "get_shock": [11, 14, 15, 18, 19, 22, 23, 24, 26, 29, 38, 41], "get_stat": [17, 23, 24, 29, 41, 61], "get_state_rule_value_function_from_continu": 38, "get_states_cn": 25, "get_states_reb": 25, "get_states_sha": 25, "get_transhkdstn_from_incshkdstn": [11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 35, 62, 74], "get_transhkdstn_from_incshkdstn_markov": [18, 35], "get_transhkgrid_from_transhkdstn": [17, 35], "get_var": 38, "getattr": 63, "getmrkvnow": 11, "giant": 70, "giant_list": 70, "gicraw": 15, "gimel": [52, 53], "gimel_": [52, 53], "gimel_t": [52, 53], "giraldo": 25, "gist": 66, "git": [1, 3, 5], "github": [0, 1, 3, 4, 5, 15, 34, 44, 49, 50, 53, 69], "gitignor": 0, "gitter": 1, "give": [1, 3, 6, 8, 37, 48, 49, 51, 53, 56, 64, 65, 68], "given": [4, 8, 11, 13, 14, 15, 17, 19, 20, 25, 26, 29, 30, 31, 32, 35, 37, 38, 40, 41, 42, 49, 51, 52, 53, 60, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75], "glad": 1, "global": [8, 11], "global_markov": [18, 51], "glow": [0, 12, 61], "gnrm": 25, "go": [1, 3, 6, 15, 31, 35, 53, 62, 64, 65, 67, 68, 69, 73], "goal": [1, 8, 10], "goe": [49, 53, 61, 66], "gome": 68, "good": [4, 5, 8, 11, 17, 19, 40, 51, 52, 57, 60, 65, 71, 73], "goods_mkt": [71, 73], "got": 60, "gothic": [46, 47], "gourincha": 5, "gov": 71, "govern": [0, 8, 29, 69], "governemnt": 71, "gpfacliv": 15, "gpfaclivmod": 15, "gpfacmod": 15, "gpfacraw": 15, "gpfacsdl": 15, "grab": [6, 42], "gradient": [32, 37], "graduat": [10, 69], "graft": [10, 69], "graph": 75, "grate": 1, "great": [1, 5, 49, 57, 69, 74], "greater": [17, 47, 48, 60, 67], "greatest": [1, 60, 62], "greatli": [6, 46, 63, 66], "green": [1, 55, 56, 68], "grew": [61, 64], "grid": [0, 4, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 29, 30, 31, 32, 35, 37, 42, 45, 46, 47, 48, 52, 53, 54, 59, 62, 63, 64, 67, 69, 71, 72, 73, 74, 76], "grid_list": 32, "grida": 76, "gridc": 76, "gridpoint": [4, 15, 20, 25, 30, 35, 37, 42, 44, 46, 47, 48, 49, 51, 52, 53, 66, 69, 74], "group": 68, "grow": [1, 15, 26, 46, 49, 63, 64, 67, 68, 74], "growth": [0, 3, 5, 6, 11, 12, 13, 15, 17, 18, 19, 21, 22, 24, 25, 35, 44, 45, 47, 48, 49, 53, 63, 64, 67, 68, 69, 70, 73, 74, 76], "growthavg": 44, "growthwidth": 44, "gt": [47, 49, 62, 63, 64, 68, 74, 76], "guarante": [46, 63], "guess": [4, 8, 29, 33, 60, 63, 65, 66], "gui": [0, 42], "guid": [0, 4, 8, 77], "guidanc": [69, 71, 77], "guidelin": 77, "h": [14, 42, 46, 53, 60, 66, 70, 75, 76], "h_": [14, 46, 75], "h_error": 66, "h_label": 60, "h_t": [14, 46, 52, 53], "ha": [0, 1, 3, 5, 6, 8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 24, 25, 26, 29, 31, 32, 35, 37, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76], "had": [0, 6, 10, 64, 66, 67, 68, 69, 74], "half": [14, 68], "hamenberg": [35, 76], "hand": [5, 6, 10, 52, 60, 63, 64, 66, 68, 71, 73, 75], "handcraft": [5, 29], "handl": [0, 3, 6, 11, 12, 14, 17, 23, 29, 46, 48, 60, 61, 63, 64, 66, 67, 68, 71, 74], "handwritten": [72, 74], "hank": [0, 20, 35, 73], "hank_constructor": 71, "hank_dict": [71, 73], "hankfiscal_exampl": [0, 71], "happen": [0, 10, 30, 35, 60, 63, 68, 72, 74], "happi": 69, "hard": [1, 3, 6, 34, 52, 61, 63, 69], "hardcod": [0, 52, 67], "hardwir": 65, "hark": [0, 1, 2, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 62, 68, 70, 75, 76], "hark_precis": 0, "harkinterpol": 37, "harkinterpolator1d": [8, 37, 66], "harkinterpolator2d": [8, 37], "harkinterpolator3d": 37, "harkinterpolator4d": 37, "harkinterpolatornd": 66, "harkinterpolatorxd": 8, "harkobject": [0, 42], "harmenberg": [0, 15, 35, 42, 74], "harmless": 70, "harvest": 65, "hat": [42, 52, 53], "have": [0, 1, 3, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "haven": 53, "hazard": [52, 67], "he": [0, 18, 25, 26, 46, 47, 49, 51, 58, 61, 64, 68, 74], "head": [1, 62], "health": [0, 6, 14, 52, 53], "healthier": 46, "healthprodexp": [14, 46], "healthprodfac": [14, 46], "hear": 1, "hei": [68, 74], "held": 70, "help": [1, 3, 5, 6, 8, 69, 74], "helper": [28, 37], "henc": [8, 35, 46, 53, 63, 64, 65, 74], "henceforth": 26, "her": [51, 57, 63, 69], "here": [0, 1, 3, 5, 6, 8, 11, 12, 14, 15, 16, 18, 22, 29, 34, 45, 46, 47, 48, 49, 51, 52, 53, 60, 61, 62, 64, 66, 68, 69, 70, 71, 73, 74, 75], "hermit": 31, "het_household_block": 71, "heterogen": [0, 1, 4, 5, 8, 10, 11, 20, 23, 29, 49, 53, 58, 60, 65, 67, 69, 70, 71, 77], "hh_ha": 71, "hh_ra": 71, "hh_ta": 71, "hi": [12, 18, 21, 24, 25, 26, 29, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 61, 63, 64, 67, 76], "hidden": 64, "high": [5, 6, 29, 42, 48, 53, 60, 67, 68, 74], "higher": [5, 6, 14, 21, 33, 40, 46, 48, 62, 63, 66, 71, 74], "highest": [25, 31, 37, 45, 60, 63, 66], "highli": [0, 10, 34, 66, 67], "highlight": [71, 76], "hist": 70, "histogram": 76, "histori": [0, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 29, 41, 44, 45, 47, 48, 49, 52, 53, 59, 60, 61, 65, 68, 69, 70, 74, 76], "hlvl": [13, 14, 19, 46], "hlvlcount": [14, 46], "hlvlgrid": [14, 46], "hlvlinitcount": 14, "hlvlinitdstn": 14, "hlvlinitmax": 14, "hlvlinitmin": 14, "hlvlmax": [14, 46], "hlvlmin": [14, 46], "hnrm": [13, 15, 16, 19, 47, 49, 61, 64], "hobbyist": 1, "hold": [6, 8, 11, 14, 15, 29, 31, 32, 37, 46, 48, 53, 61, 64, 65, 67, 68, 71, 72, 74, 75], "home": [3, 66], "homogen": [8, 40, 47, 48, 49, 60], "homothet": [67, 68, 74], "hood": 0, "hope": [1, 10, 61, 67, 69], "hopefulli": 64, "hopelessli": 1, "horizon": [0, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 71, 74, 76], "horizont": [37, 64, 76], "host": 10, "hosuehold": 71, "hous": 66, "household": [4, 5, 10, 58], "how": [0, 3, 4, 5, 6, 8, 11, 17, 18, 20, 22, 32, 35, 46, 47, 48, 49, 52, 53, 57, 58, 60, 62, 63, 64, 66, 67, 70, 71, 72, 75, 76, 77], "howev": [3, 8, 11, 24, 45, 51, 52, 53, 57, 60, 61, 63, 64, 66, 67, 69, 74], "howwesolveindshockconsumertyp": 73, "html": [1, 3, 4, 7, 31, 37, 42, 73], "http": [0, 1, 3, 4, 5, 7, 15, 25, 26, 30, 31, 37, 42, 54, 56, 73, 76], "human": [0, 11, 14, 15, 16, 18, 22, 46, 49, 61, 63, 64], "humanwealth": 64, "hybr": 73, "hypothes": 66, "hypothet": [52, 65], "hystori": [6, 29, 61, 68, 74], "i": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "i_dim": 37, "icon": 1, "id": [3, 5, 59], "idea": [3, 10, 69, 77], "ident": [6, 8, 12, 13, 20, 37, 45, 48, 49, 52, 57, 58, 63, 66, 67, 68, 74], "identif": 10, "identifi": [0, 37, 60, 66], "identityfunc": [21, 25], "identityfunct": [0, 35, 37], "idiosyn": 11, "idiosyncdict": 47, "idiosyncrat": [0, 4, 5, 6, 8, 11, 12, 13, 15, 16, 24, 25, 35, 45, 49, 51, 57, 61, 65, 68, 69, 71, 74, 75], "idisyncrat": 45, "ignor": [0, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 62, 70], "ih_ag": 63, "ih_cnst_ag": 63, "iid": [22, 52, 53, 57, 66, 67], "ij": [20, 51], "ijrsdcegm2017": 30, "iliquid": 25, "ill": 52, "illeg": 0, "illegal_valu": 37, "illiquid": [25, 71], "illustr": [0, 8, 51, 64, 69, 71, 72], "imag": [42, 67, 75], "imagin": [52, 74], "imal": 19, "immateri": 48, "immedi": [1, 12, 29, 58, 61, 63, 64, 74], "immin": 63, "immunityexampl": 51, "immunityprb": 51, "immunityt": 51, "impact": 71, "impati": [0, 15, 68], "impedi": 5, "implement": [0, 1, 4, 5, 8, 11, 13, 17, 18, 19, 22, 31, 33, 48, 54, 66, 67, 69, 74], "implementaion": 0, "impli": [29, 35, 64, 67, 68, 69, 71, 73, 76], "implic": 70, "implicit": [53, 54, 75], "implicitli": 54, "import": [0, 1, 3, 4, 5, 8, 11, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "import_nam": 8, "importantli": [6, 8, 66, 69, 74], "importerror": 42, "impos": [45, 47, 48, 60, 76], "imposs": 62, "improv": [0, 1, 10, 30, 46, 53, 60, 65, 66, 69, 70, 74, 76, 77], "impuls": [4, 29, 74, 75], "impulses_ha": 71, "impulses_ra": 71, "impulses_ta": 71, "imshow": 59, "in_ipynb": 42, "inabl": [25, 54], "inaccur": 66, "inal": 29, "inapplic": 0, "inattent": 11, "inbound": [68, 74], "inc": [68, 70, 72], "incent": 67, "incept": [68, 74], "includ": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 26, 29, 31, 33, 35, 37, 38, 42, 46, 47, 48, 49, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74], "include_list": 1, "inclus": 6, "incom": [0, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 42, 44, 46, 49, 52, 53, 54, 57, 58, 61, 62, 66, 69, 70, 71, 73], "income_calib": 68, "income_param": [54, 68], "income_process_stuff": 62, "incomedstn": [0, 45, 51, 52, 53, 64], "incomedstnimm": 51, "incomedstnreg": 51, "incomeprocess": [12, 13, 15, 17, 19, 21, 22, 24, 35, 71, 74], "incomeprocessdict": 35, "incometool": [60, 68], "incompar": 60, "incompat": [0, 46], "incomplet": 0, "incomprehens": 5, "incorpor": [0, 3, 11, 35, 61, 64, 66, 67], "incorrect": [54, 65, 74], "increas": [4, 11, 20, 46, 52, 63, 68, 69, 71], "increasingli": [53, 61], "incred": 74, "increment": [6, 35, 42], "incshkdstn": [0, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 44, 51, 58, 61, 62, 63, 68, 71, 74, 76], "incshkdstn_default": [13, 15, 17, 21, 22, 24], "incshkdstn_hank": 35, "incunemp": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 46, 47, 48, 62, 63, 64, 71, 72, 73, 74, 76], "incunempret": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 62, 63, 73, 74, 76], "ind": 20, "inde": [8, 14, 62], "indefinit": [1, 8, 11, 15, 18, 22, 29, 37, 47, 49, 63, 74], "indent": 62, "indepdstnbool": [12, 21, 24, 25], "independ": [0, 8, 12, 14, 25, 31, 38, 42, 46, 60, 64, 65, 71], "index": [0, 1, 4, 6, 11, 17, 29, 30, 31, 35, 37, 40, 46, 60, 61, 64, 68, 74, 75, 76], "index_interp": 37, "indexdistribut": [0, 24, 31, 35, 61], "indexdstn": 0, "indexedinterp": [0, 37], "indic": [1, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 31, 33, 35, 37, 41, 42, 45, 47, 48, 49, 53, 60, 61, 63, 68, 72, 74, 76], "indiffer": [52, 53], "indirect": [5, 74], "indirectli": [8, 65], "indistinguish": 56, "individu": [0, 8, 11, 20, 29, 35, 37, 47, 49, 60, 62, 63, 65, 69, 73, 74, 75], "individual_resourc": 4, "indshockconsumertyp": [0, 8, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 42, 45, 48, 51, 53, 54, 55, 57, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74], "indshockconsumertype_constructors_default": [55, 71], "indshockconsumertypefast": 16, "indshockdictionari": 64, "indshockexampl": [47, 48, 55, 64], "indshockexplicitpermincconsumertyp": [13, 45], "indshockriskyassetconsumertyp": [0, 21, 24, 25], "indshockriskyassetconsumertype_constructor_default": 55, "indshocksolut": 16, "induc": 65, "induct": [0, 4, 29], "industri": [5, 75], "inelast": [23, 67, 75], "inequ": 70, "inf": [33, 37, 50, 63], "inf_ag": 59, "infer": 5, "infimum": [15, 16, 60], "infin": [12, 15, 16, 35, 54, 56, 61], "infinit": [0, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 35, 37, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 69, 71, 74], "infiniteag": 63, "infinitesim": 0, "inflat": 0, "inflendpoint": 31, "info": 42, "inform": [0, 1, 3, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 26, 29, 31, 38, 41, 42, 48, 49, 53, 60, 61, 62, 64, 65, 67, 68, 70, 72, 73, 74, 75, 76], "infrastructur": [1, 4, 5, 6], "infti": [11, 15, 18, 22, 45, 53, 54, 66], "ingredi": 8, "inhabit": 44, "inher": [1, 8, 29], "inherit": [0, 8, 11, 15, 22, 24, 29, 37, 41, 42, 44, 45, 57, 60, 61, 66, 67, 69], "init": [0, 31], "init_agg_shock": 69, "init_cobb_dougla": 69, "init_consumer_object": 70, "init_idiosyncratic_shock": 58, "init_indshk_markov": 51, "init_labor_lifecycl": 50, "init_lifecycl": [0, 54], "init_portfolio": [55, 56], "init_risky_contrib": 59, "init_serial_growth": 51, "init_serial_unemploy": 51, "init_sticky_shar": 56, "init_unemployment_immun": 51, "initi": [0, 1, 4, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 33, 35, 41, 45, 47, 48, 49, 59, 60, 61, 62, 64, 65, 66, 67, 70, 74, 76], "initialis": 0, "initialize_sim": [4, 6, 11, 15, 18, 21, 22, 23, 24, 25, 29, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 65, 68, 70, 76], "initialize_sym": [6, 29, 68, 71, 74], "initializesim": 0, "inlin": [0, 1], "innov": 4, "inop": 29, "input": [0, 4, 8, 10, 12, 14, 18, 29, 31, 32, 33, 37, 38, 41, 42, 58, 60, 63, 64, 65, 66, 69, 70, 73, 74], "input1": 1, "input2": 1, "insert": [42, 48, 69], "insid": [0, 3, 32, 62, 64, 67], "insight": [10, 69, 71], "inspect": [1, 42, 71], "instal": [0, 1, 2, 8, 13, 42, 45, 77], "install_retirement_func": 13, "instanc": [0, 3, 4, 5, 6, 8, 11, 14, 15, 18, 22, 24, 29, 31, 35, 37, 41, 42, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74], "instanti": [0, 6, 37, 47, 60, 61, 62, 63, 66, 74], "instead": [0, 1, 4, 5, 6, 8, 11, 12, 15, 18, 22, 25, 29, 31, 41, 45, 46, 49, 51, 53, 60, 61, 62, 63, 66, 67, 68, 74, 76], "instruct": [0, 1, 5, 6, 64, 65], "instructor": 63, "insur": [37, 52, 53, 67, 71], "int": [6, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 29, 30, 31, 33, 35, 37, 40, 41, 42, 50, 63, 68, 69, 72, 74], "int_": 75, "int_0": 75, "integ": [0, 6, 8, 31, 37, 47, 49, 60, 62, 63, 68], "integr": [0, 1, 5, 8, 31, 37, 52, 69], "intellig": 1, "intend": [6, 8, 49, 60, 74], "intens": [12, 17, 35, 52, 67], "intent": [46, 61, 66], "intention": 42, "inter": 8, "interact": [0, 4, 6, 8, 25, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "intercept": [4, 11, 30, 37, 40, 44], "intercept_limit": [37, 39, 66], "intercept_prev": 44, "interchang": 8, "interconnect": 5, "interest": [0, 1, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 37, 42, 45, 46, 47, 49, 52, 53, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74], "interfac": [37, 60, 66, 68], "interfer": 3, "interior": [52, 53, 66], "intermedi": [10, 62, 63], "intern": [0, 6, 8, 10, 11, 14, 15, 18, 19, 22, 23, 29, 35, 41, 49, 60, 61, 64, 65, 66, 67, 68, 74], "interoper": [0, 8, 10], "interp": 32, "interp1d": 21, "interp2d": [21, 25], "interp3d": 25, "interpl": 66, "interpol": [0, 4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22, 26, 28, 30, 32, 45, 46, 47, 48, 49, 51, 52, 53, 57, 60, 63, 64, 74], "interpoli": [12, 13, 15, 19, 21, 22, 24], "interpolor": 8, "interpret": [6, 8, 52, 53, 61, 62, 65, 67, 74], "interrel": 60, "interrupt": 33, "intersect": [30, 64], "interst": 57, "intertempor": [8, 12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 52, 53, 65, 70, 73, 74, 76], "interupt": 60, "interv": [12, 17, 24, 25, 30, 75], "intract": 65, "intraperiod": [46, 52, 53, 66], "intratempor": [46, 53], "intric": 5, "intro": [4, 60, 61, 62, 63, 64, 65, 66, 67, 68], "introduc": [0, 45, 49, 52, 54], "introduct": [3, 5, 47, 60, 68, 73], "introductori": [0, 61, 62, 64], "intuit": 66, "inv": 40, "inv_func": 40, "invalid": [35, 45, 50, 53], "invari": [0, 6, 8, 13, 15, 18, 23, 29, 58, 63, 76], "invers": [0, 8, 10, 14, 16, 37, 40, 49, 50, 52, 53, 60, 63, 64, 67], "invert": [5, 17, 26, 40, 46, 53, 66], "invest": [0, 5, 14, 67], "investig": [35, 61, 62], "invok": [0, 8, 49, 51, 60, 61, 62, 64, 74], "involv": [1, 5, 10, 30, 38, 52, 61, 65, 66, 67, 69, 74], "io": [1, 15], "ioff": 54, "ipykernel_18916": 76, "ipynb": [0, 1, 3, 4, 8, 32, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "ipython": [42, 75], "irf": [71, 73], "irfs_b_lin": 71, "irfs_g_lin": 71, "irfs_list": [71, 73], "irfs_rank": 71, "irfs_tank": 71, "irfs_z": 73, "irregular": [8, 46], "irregularli": 46, "irrelev": [8, 11, 12, 14, 25, 53, 63], "irrevers": 69, "is_time_vari": 29, "iskhakov": [0, 5, 30], "isn": [6, 12, 29, 61, 63, 67], "isol": [3, 5], "isort": 1, "issu": [0, 5, 57, 66, 74, 77], "ital": 64, "item": [0, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 30, 32, 59, 63, 76], "iter": [0, 4, 8, 11, 13, 15, 19, 22, 23, 24, 25, 26, 29, 31, 33, 46, 60, 61, 63, 65, 67], "its": [0, 1, 3, 6, 8, 11, 15, 16, 24, 25, 29, 30, 31, 37, 41, 45, 46, 47, 48, 49, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74], "itself": [6, 8, 10, 37, 47, 53, 58, 60, 62, 63, 64, 65, 66], "j": [6, 20, 30, 33, 37, 44, 51, 53, 57, 59, 60, 68, 71, 73, 74, 76], "jac": [72, 74], "jacobian": [0, 20, 29, 64, 68], "jacobian_dict": 73, "jacobian_exampl": 72, "jacobiandict": [71, 73], "jedc": [46, 74], "jetbrain": 3, "jhu": [26, 42, 54, 56, 71, 76], "jhuecon": 1, "job": 29, "joblib": 60, "join": 4, "joint": [12, 14, 25, 31, 35, 46, 52, 60, 63, 64, 67, 68, 74], "joint_dist_solv": 25, "jointli": [6, 52, 53, 62], "jone": 67, "journal": [1, 4], "journeyphdparam": 69, "jpeg": 75, "jpg": 0, "jr": 4, "judg": 67, "juli": 0, "jump": [31, 47, 60], "jump_to_grid_1d": 42, "jump_to_grid_2d": 42, "jump_to_grid_fast": 76, "jumper": 44, "jun": 25, "june": 0, "jupyt": [0, 1, 3, 4, 5, 42, 64, 76], "jupytext": [0, 1], "just": [0, 1, 3, 5, 6, 8, 11, 13, 14, 15, 19, 22, 23, 24, 25, 37, 40, 47, 49, 52, 53, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 74], "justifi": [8, 64, 65], "j\u00f8rgensen": 5, "k": [11, 30, 35, 37, 44, 46, 54, 57, 59, 68, 73, 75], "k_": [6, 58, 63, 68, 69, 75], "k_ss": 73, "k_t": [68, 69, 75], "kappa": 52, "karl": 74, "keep": [1, 3, 5, 6, 31, 52, 64, 68, 71], "kei": [0, 1, 4, 6, 8, 29, 31, 38, 42, 52, 53, 60, 62, 63, 67, 68, 74, 75, 76, 77], "kepler": 5, "kept": [3, 6, 31], "kernel": [8, 42, 64], "kernel_regress": 42, "keynesian": [20, 72], "keyword": [0, 29, 31, 42, 62], "khwaja": 53, "kill": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 47, 48, 49, 76], "kind": [1, 5, 6, 10, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 47, 48, 49, 52, 61, 64, 65, 66, 67, 70, 74], "kindermann": 69, "kink": [0, 49, 57, 63, 67, 69], "kinkedr": [6, 57, 67], "kinkedrconsumertyp": [15, 22, 57, 61, 69], "kinkedrdict": 48, "kinkedrsolv": 0, "kinki": 57, "kinkyexampl": 48, "kinkyprefconsumertyp": [22, 57], "kinkyprefexampl": 57, "kloginitcount": 68, "kloginitmean": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45, 47, 48, 49, 62, 68, 74], "kloginitstd": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45, 47, 48, 49, 62, 68, 74], "klvl": [13, 14, 19], "klvlgrid": 52, "klvlinitdstn": 14, "klvlmax": 52, "klvlmin": 52, "klvlnow": 13, "know": [0, 1, 6, 8, 10, 29, 47, 48, 49, 53, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71], "knowledg": [1, 5, 69, 71], "known": [0, 5, 8, 29, 38, 46, 53, 61, 66, 67], "knrm": [6, 15, 18, 25, 61, 68, 71, 72, 74], "knrminitcount": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 62, 74], "knrminitdstn": [6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 61, 62, 68, 74], "kruger": 69, "krusel": [0, 2, 44, 65], "krusellsmith": [0, 4], "krusellsmithagenttestcas": 4, "krusellsmitheconomytestcas": 4, "krusellsmithmethodstestcas": 4, "krusellsmithtestcas": 4, "krussel": 69, "ks_dag": 75, "kseconomi": 44, "ksexampletyp": 44, "kss": [44, 69], "ktolnow": 11, "kwarg": [29, 31, 33, 40], "kwd": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 60], "l": [4, 11, 17, 37, 50, 54, 73, 75], "l_": [17, 75], "l_ss": 73, "l_t": [17, 75], "lab": 59, "label": [0, 6, 8, 24, 29, 31, 38, 52, 53, 54, 59, 60, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76], "labor": [4, 5, 6, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 25, 35, 44, 49, 58, 63, 64, 68, 71, 73, 74, 76], "laborextmargconsumertyp": 67, "laborintmargconsumertyp": [17, 50], "laborintmargexampl": 50, "labour": [69, 73], "lack": [31, 46, 52, 61, 68], "lai": 53, "lam": 71, "lambda": [0, 4, 31, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 64, 66], "languag": [8, 10], "laptop": 75, "larg": [8, 47, 52, 57, 60, 63, 66, 68, 71], "larger": [5, 6, 20, 62, 63, 76], "largest": [8, 30, 45, 60, 63], "last": [0, 5, 6, 8, 15, 29, 31, 49, 51, 54, 61, 67, 69], "later": [6, 15, 29, 33, 37, 60, 61, 69, 71, 73], "latest": [1, 42, 63], "latex": [0, 1, 42], "latex_env": 42, "latexexist": 42, "latter": [0, 8, 53, 61, 67, 74], "launch": [3, 5, 42, 76], "layer": [29, 37, 52, 60, 64], "lazi": 60, "lazier": 61, "lbr": [17, 50], "lbr_t": 17, "lbrcost": 17, "lbrcost_default": 17, "lbrcostcoeff": 17, "lbrfunc": [17, 50], "lbrind": 4, "lc_agent": 63, "lc_consportfoliodict": 54, "lctype": 68, "le": 64, "lead": [5, 61, 76], "leader": 1, "leap": 53, "learn": [1, 4, 8, 10, 29, 68, 74, 76, 77], "least": [8, 49, 60, 61, 62, 63, 66, 68, 75], "leav": [3, 6, 12, 53], "lectur": [5, 26, 47, 49, 64, 69, 71], "lecturenot": [26, 54, 56], "led": 5, "lee": [8, 33, 60], "left": [6, 8, 12, 15, 17, 21, 22, 24, 30, 35, 46, 47, 48, 52, 53, 60, 63, 64, 66, 74, 75], "left_i": 30, "legaci": [0, 6, 10, 47, 48, 74], "legacyoosolv": 0, "legal": [61, 66], "legend": [42, 52, 53, 54, 59, 68, 71, 72, 73, 74, 76], "legend_kwd": 42, "leisur": [17, 50, 67], "len": [30, 31, 43, 50, 59, 60, 63, 71, 73, 76], "lend": 69, "lender": 64, "length": [6, 8, 11, 14, 17, 18, 25, 30, 31, 33, 35, 37, 40, 42, 51, 60, 61, 63, 71, 73], "leq": [35, 49, 52, 66, 74], "less": [0, 3, 8, 10, 12, 13, 14, 33, 37, 41, 45, 47, 48, 50, 52, 53, 60, 63, 64, 65, 66, 67, 69, 70, 74, 76], "let": [1, 3, 5, 45, 46, 47, 48, 49, 51, 52, 53, 60, 62, 63, 64, 66, 67, 68, 69, 73, 74], "letter": 1, "level": [0, 3, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 35, 37, 40, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76], "lh": [6, 53], "li": 56, "liber": 8, "librari": [1, 8, 11, 15, 18, 22, 42, 69, 71], "licens": [1, 5], "lie": 42, "lifcycl": 73, "life": [0, 13, 35, 49, 52, 62, 64, 74], "life_t": [60, 68], "lifecycl": [0, 6, 8, 12, 29, 35, 45, 47, 48, 50, 54, 62, 63, 70, 71, 74, 76], "lifecycle_dict": 68, "lifecycle_dictionari": 63, "lifecycledict": 63, "lifecycleexampl": [50, 63], "lifecyclemodel": 70, "lifecyclepop": 70, "lifespan": 8, "lifetim": [29, 37, 75], "lift": [14, 46, 48, 67], "lightli": 0, "lightn": 67, "like": [0, 1, 3, 5, 6, 8, 10, 11, 13, 29, 31, 35, 41, 44, 46, 47, 48, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74], "likelihood": [12, 17], "likewis": [6, 29, 49, 52, 60, 61, 63, 64, 75], "lim_": 45, "limit": [0, 1, 4, 5, 10, 11, 12, 15, 18, 22, 31, 32, 37, 42, 47, 56, 60, 65, 66, 67, 76], "limit_fun": 32, "limit_grad": 32, "line": [1, 3, 4, 5, 6, 30, 34, 42, 45, 52, 54, 56, 62, 63, 64, 65, 66, 68, 76], "linear": [0, 8, 11, 12, 15, 17, 19, 22, 26, 32, 35, 37, 42, 45, 47, 48, 49, 52, 53, 63, 64, 67, 71], "linear_interp_deriv_fast": 39, "linear_interp_fast": 39, "linearfast": [0, 32], "linearinterp": [0, 35, 37, 42, 49, 64, 66], "linearinterpol": 37, "linearinterponinterp1d": [37, 66], "linearinterponinterp2d": [37, 66], "linearinterponinterp3d": 66, "linearli": [0, 37, 42, 66], "linewidth": 76, "link": [0, 1, 3, 4, 8, 53, 64, 67, 69, 77], "linkag": 4, "linspac": [44, 45, 48, 49, 50, 53, 54, 56, 57, 59, 62, 66, 68], "lint": 0, "linux": [3, 5, 42], "liqconstrdict": 49, "liqconstrexampl": 49, "liquid": [14, 25, 48, 52, 56, 64, 68, 71], "list": [0, 1, 3, 4, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 35, 37, 38, 42, 45, 46, 47, 49, 51, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76], "list_of_interpolants_over_x": 66, "liter": [6, 60, 74], "literatur": [0, 5, 15, 45], "littl": [5, 8, 63, 65, 68, 74], "liv_prb": 54, "live": [1, 4, 6, 11, 41, 46, 49, 50, 61, 62, 63, 64, 68, 69, 70, 71, 74], "livprb": [3, 5, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 42, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 63, 64, 68, 71, 72, 73, 74, 76], "livprb_i": 6, "livprb_t": [63, 64, 68], "ll": [1, 3, 53, 61, 63, 64, 66, 68, 74], "ln": [35, 42, 74], "load": [0, 33], "local": [1, 3, 4, 5, 8, 16, 42, 60, 66], "locat": [0, 1, 3, 4, 34, 37, 69], "lock": 61, "locu": 15, "log": [0, 1, 4, 8, 11, 12, 13, 15, 17, 19, 21, 22, 24, 31, 35, 44, 45, 47, 48, 49, 52, 53, 54, 57, 59, 60, 62, 66, 67, 68, 70, 73, 74, 75, 76], "log_condition_result": 15, "logarithm": [31, 53], "logic": [0, 6, 53, 60, 66], "logist": [14, 46], "logit": 53, "lognorm": [0, 13, 15, 19, 22, 24, 26, 31, 35, 46, 47, 48, 49, 51, 52, 54, 56, 57, 60, 64, 67, 68, 74], "lognormpermincshk": 35, "logo": 67, "long": [0, 6, 8, 11, 33, 35, 45, 48, 49, 60, 61, 63, 67, 68, 74, 75], "longer": [0, 1, 37, 52, 63, 68, 69], "longev": 6, "longleftrightarrow": 53, "longrightarrow": [47, 52, 64, 66], "look": [1, 3, 6, 29, 47, 49, 52, 60, 61, 62, 63, 64, 65, 66, 69, 74, 77], "loop": [8, 29, 41, 60, 61, 63, 65], "loos": 64, "loosen": [52, 65], "lorenz": [8, 42], "lorenz_out": 42, "loss": [52, 66, 67], "lost": 62, "lot": [5, 6, 60, 63, 66, 67, 68, 70, 74], "low": [21, 48, 53, 63, 64, 66, 67, 74], "lower": [1, 8, 12, 14, 35, 37, 42, 45, 47, 49, 52, 53, 59, 60, 61, 62, 63, 67, 74], "lower_bound_for_dim0_wrt_other_dim": 66, "lower_extrap": [37, 39, 66], "lowerbound": 37, "lowercas": 58, "lowerenvelop": [37, 47], "lowerenvelope1d": 47, "lowerenvelope2d": 37, "lowerenvelope3d": 37, "lowest": [31, 45, 47, 64, 66], "lt": [47, 49, 62, 63, 64, 68, 74], "lucki": 70, "luckili": [52, 74], "ludwig": [14, 46], "luettick": 0, "lump": 71, "lumpi": 71, "lvl": 13, "m": [1, 3, 4, 6, 8, 11, 13, 15, 16, 18, 19, 22, 25, 26, 37, 44, 45, 46, 52, 53, 54, 56, 57, 59, 64, 67, 70, 72, 76], "m_": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 63, 64, 66, 68, 69, 75], "m_densiti": 20, "m_grid": 44, "m_int": 30, "m_nrm_next": 25, "m_nrm_tp1": 25, "m_t": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 60, 61, 63, 64, 66, 68, 69], "m_temp": [45, 53], "m_til": 59, "m_val": [42, 76], "mac": [3, 5], "machin": [4, 8, 42, 52, 63, 67, 69], "machineri": [61, 65], "maco": 42, "macro": [4, 29, 44, 65, 69, 75], "macroeconom": [4, 5, 6, 8, 11, 23, 29, 44, 58, 60, 64, 67, 69, 71, 74, 75], "macroeconomi": [4, 11, 71], "macroeconomist": 10, "macrotheory08": 31, "made": [1, 4, 5, 6, 10, 15, 46, 52, 60, 61, 62, 63, 66, 71, 72, 74], "maggcount": [4, 11], "maggexpfac": [4, 11], "maggnow": 11, "maggperturb": [4, 11], "magic": 74, "magnitud": [10, 33, 52, 69, 70, 71], "mahout": 68, "mai": [0, 1, 3, 6, 8, 10, 11, 12, 20, 31, 42, 64, 69, 76], "main": [3, 5, 6, 8, 52, 60, 61, 66, 67], "main_k": 4, "mainli": 67, "maintain": [0, 1, 42, 67, 76], "major": [5, 67, 71, 74], "make": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 31, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73], "make_2d_crra_solution_termin": 13, "make_adjustdstn": [12, 21, 24, 25], "make_aggmrkv_solution_termin": 11, "make_aggshkdstn": 11, "make_aggshkhist": [4, 11, 44, 69], "make_aggshock_solution_termin": 11, "make_ar1_markov_array_and_plvlgrid": 62, "make_ar1_style_plvlnextfunc": [13, 19, 35, 52, 53], "make_assets_grid": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42, 52, 53, 62, 74], "make_basic_crra_solution_termin": [15, 20, 22, 23, 24, 62, 74], "make_basic_plvlpctil": [13, 19, 35, 53], "make_basic_ssj": [29, 71, 72, 74], "make_basic_ssj_matric": 29, "make_bequest_solution_termin": 12, "make_bounded_sharegrid": 25, "make_capital_grid": 52, "make_continuous_medshockdstn": 52, "make_euler_error_func": [0, 11, 15, 17, 18, 22], "make_explicit_perminc_plvlnextfunc": [13, 35], "make_exponential_mgridbas": 11, "make_fig": [0, 42], "make_grid_exp_mult": [0, 20, 42], "make_health_grid": 14, "make_histori": [8, 29], "make_labor_intmarg_solution_termin": 17, "make_log_polynomial_lbrcost": 17, "make_logistic_polynomial_die_prob": 14, "make_lognormal_knrm_init_dstn": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 62, 74], "make_lognormal_medshkdstn": [19, 53], "make_lognormal_plvl_init_dstn": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 62, 74], "make_lognormal_prefshkdstn": 22, "make_lognormal_riskydstn": [0, 12, 21, 24, 25, 35], "make_market_resources_grid": 52, "make_markov_solution_termin": 18, "make_medshock_solution_termin": 19, "make_mnrm_grid": 25, "make_mrkv_histori": 11, "make_mrkvinitdstn": 18, "make_nnrm_grid": 25, "make_one_period_oo_solv": [16, 29], "make_other_assets_grid": 62, "make_permgrofac_from_ind_and_agg": 35, "make_persistent_income_process_dict": [35, 52], "make_plvlgrid_by_simul": [13, 19, 35, 53], "make_polynomial_param": 42, "make_polynomial_permgrofac": 35, "make_polynomial_permshkstd": 35, "make_polynomial_transhkstd": 35, "make_portfolio_solution_termin": 21, "make_repagent_markov_solution_termin": 23, "make_shock_histori": [0, 29, 41, 51, 57, 61, 68], "make_simple_binary_markov": 18, "make_simple_binary_rep_markov": 23, "make_simple_dgrid": 25, "make_simple_sharegrid": [12, 21, 24], "make_solution_terminal_consbasichealth": 14, "make_solution_terminal_fast": 16, "make_solution_terminal_risky_contrib": 25, "make_tauchen_ar1": 31, "make_transition_matric": [71, 74], "make_trivial_plvlnextfunc": [13, 19, 35], "make_uniform_depreciation_dstn": 14, "make_uniform_hlvl_init_dstn": 14, "make_univari": 31, "make_warmglow_portfolio_solution_termin": 12, "makeaggshkdstn": 44, "maliar": 4, "mamba": 8, "manag": [1, 5, 8, 10, 29, 37, 66], "manent": 11, "mani": [4, 5, 6, 8, 10, 18, 30, 35, 44, 45, 47, 48, 49, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74], "manifest": 0, "manipul": [1, 6, 8, 34, 42, 74], "manual": [0, 1, 29, 42, 46, 51, 61, 63, 74], "map": [6, 11, 13, 15, 18, 22, 38, 41, 52, 53, 60, 63, 65, 66, 67, 74], "marc": 4, "march": [0, 70], "marcmaliar": 4, "marg": 53, "margin": [0, 8, 14, 15, 16, 17, 21, 25, 26, 35, 37, 40, 46, 47, 48, 49, 53, 55, 57, 58, 60, 61, 63, 65, 66, 71, 75], "margmargvaluefunccrra": 37, "margvaluefunc2d": 25, "margvaluefunc3d": 25, "margvaluefunccrra": [21, 37, 47, 49, 66], "mark": [14, 61, 62, 65], "markdown": [1, 8, 42], "market": [0, 4, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 37, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 58, 60, 61, 63, 64, 66, 67, 68, 70, 73, 74], "market_act": [8, 11, 29, 65], "markov": [0, 4, 11, 15, 18, 23, 31, 35, 44, 51, 52, 58, 62, 67, 69, 74], "markovconsumertyp": [0, 11, 18, 74], "markovprocess": [0, 31], "mashin": 8, "mass": [0, 31, 35, 42, 46, 47, 48, 49, 53, 60, 64, 74, 76], "massiv": 64, "master": [1, 4, 5, 69], "matab": 42, "match": [4, 5, 15, 29, 31, 37, 38, 42, 46, 70, 72, 74], "mateo": 25, "mateo_velasquez_giraldo_2021_4977915": 25, "materi": [3, 5, 8, 25, 42, 67, 76], "math": [0, 6, 37, 46, 52, 53, 61, 63, 68, 74], "mathbb": [12, 13, 15, 17, 19, 21, 22, 24, 35, 45, 47, 48, 51, 52, 53, 57, 58, 64, 66, 68, 74], "mathbf": [12, 21, 24, 52, 75], "mathcal": [19, 22, 35, 46, 74, 75], "mathemat": [0, 1, 3, 5, 6, 8, 15, 16, 38, 45, 49, 54, 64, 66, 67], "mathfrak": [46, 47, 52, 53, 66], "mathit": 75, "mathsf": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 47, 48, 49, 51, 52, 53, 57, 61, 63, 64, 68, 75], "matplotlib": [0, 4, 8, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 63, 64, 68, 70, 71, 72, 73, 74, 76], "matric": [0, 5, 20, 29, 35, 52, 72, 73, 75], "matrix": [0, 6, 10, 20, 29, 30, 31, 42, 51, 52, 62, 67, 69, 70, 71, 73, 74, 75], "matrix_list": 70, "matt": [1, 67], "matter": [6, 8, 45, 53, 60, 62, 65, 66, 67, 74], "matthew": [49, 53], "max": [13, 19, 42, 52, 71, 72, 74], "max_": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 63, 64, 66, 68, 69, 75], "max_ag": [60, 68], "max_loop": [4, 65], "max_p_fac": 20, "max_print": 42, "max_v": [63, 69], "maxev": 33, "maxg": 42, "maxim": [6, 53, 54, 65, 66, 75], "maximand": [47, 66], "maximum": [4, 6, 8, 11, 14, 15, 17, 18, 20, 22, 25, 29, 33, 37, 42, 45, 46, 47, 48, 49, 50, 54, 60, 62, 63, 65, 68, 71, 73, 76], "maxit": 33, "maxkink": [0, 11, 13, 15, 16, 19, 22, 23, 24, 25, 63], "maxthread": [33, 60], "mayb": [1, 29, 35, 60, 61, 62, 65, 66, 67], "mcount": [20, 73, 76], "md": [4, 8], "mdensiti": 20, "mdstn": 76, "me": [1, 53, 64, 74], "mead": [8, 33, 60], "mean": [0, 4, 6, 8, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 31, 35, 37, 42, 45, 47, 48, 49, 52, 53, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76], "mean_wealth": 4, "meaning": [60, 61, 62, 66], "meaningfulli": [60, 61], "meaningless": 15, "meanonelognorm": 31, "meant": [0, 20, 24, 34, 60, 67, 68, 72], "measur": [0, 35, 42, 63, 67, 69, 71, 74], "mechan": [61, 65], "med": [19, 53], "med_t": 19, "medcorr": 52, "medcostbot": 52, "medcostcount": 52, "medcostlogmean": 52, "medcostlogstd": 52, "medcosttop": 52, "medfunc": [19, 53], "median": [42, 50], "medic": [0, 19], "medicalexampl": 53, "medlvl": 52, "medpric": [19, 53], "medshk": [19, 53], "medshkavg": [19, 52, 53], "medshkcount": 19, "medshkcounttail": 19, "medshkcubicbool": 19, "medshkdstn": [19, 53], "medshkgrid": 19, "medshkgrid_til": 53, "medshklogmean": 52, "medshklogstd": 52, "medshkstd": [19, 52, 53], "medshktailbound": 19, "medshockconsumertyp": [19, 52], "medshockdstn": 52, "medshockpolicyfunc": [19, 53], "medthruxfunc": 19, "meet": 1, "member": [1, 65], "memori": [4, 6, 37, 68, 74], "men": 60, "mental": 6, "mention": [64, 69], "menu": 64, "mere": [1, 8, 42, 45, 47, 74], "merg": 1, "merton": 56, "mertonportfoliodict": 54, "mesh": 66, "mess": 3, "messag": [1, 15, 31, 62, 70, 73], "met": [15, 29, 60], "meta": 3, "metadata": [0, 6, 8], "metaphor": [8, 65], "meter": 40, "method": [0, 1, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 45, 46, 48, 51, 52, 53, 57, 60, 62, 63, 64, 67, 72, 73, 74], "method_nam": 8, "methodologi": [0, 72, 74, 75], "metric": [0, 29, 42, 49, 60, 64], "metricobject": [0, 8, 11, 13, 15, 16, 17, 19, 21, 25, 26, 32, 35, 37, 40, 60, 66], "mfac": [20, 73, 76], "mgrid": [20, 44, 56], "mgridbas": 11, "mho": [47, 48, 64], "micro": [4, 5, 20, 29, 65, 70, 75], "microeconom": [0, 5, 8, 11, 29, 42, 44, 54, 60, 61, 64, 65, 67, 69, 73, 74, 75], "microeconomist": 5, "microfound": 75, "mid": 52, "middl": 68, "might": [1, 5, 6, 8, 10, 11, 29, 37, 42, 44, 49, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 68, 72, 74, 77], "mild": 10, "mill": [8, 29, 65], "mill_rul": [8, 11, 29, 65, 69], "millrul": 8, "min": [37, 42, 51, 63, 70, 71, 72, 74], "min_ag": [60, 68], "min_point": 33, "min_v": [63, 69], "mind": [1, 6, 10, 64], "mindex": 76, "ming": 42, "miniconda": [1, 5], "minim": [1, 8, 33, 60, 63, 69, 74], "minimand": 60, "minimize_nelder_mead": [33, 60], "minimize_powel": [33, 60], "minimizeneldermead": 0, "minimum": [4, 8, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 29, 33, 42, 45, 47, 48, 50, 52, 53, 54, 62, 63, 64, 66, 67, 73, 76], "minor": [1, 69], "minu": [6, 37], "minuscul": 64, "minut": [44, 54, 59, 75], "minutia": 10, "mirror": 1, "misappl": 0, "miscellan": [0, 42], "mislabel": 24, "misnom": 24, "misperc": 11, "miss": [0, 10, 29, 62], "misspel": 66, "mistakenli": 29, "mit": [0, 12, 13, 15, 17, 19, 21, 22, 24, 71, 75], "mititg": 67, "mix": [0, 1, 5], "mixtur": 35, "mixturetranincshk": 35, "mixturetranincshk_hank": 35, "mkt_clear": [71, 73], "mlowerbnd": 26, "mlowerindex": 76, "mlowerweight": 76, "mlvl": [13, 14, 19, 26, 45, 46, 76], "mlvl_val": 76, "mlvlgrid": 45, "mlvlmin": [45, 53], "mlvlnow": 13, "mmax": [11, 15, 17, 18, 20, 22, 54, 59, 73, 76], "mmin": [20, 44, 49, 54, 70, 73, 76], "mminimum": 64, "mnemon": [40, 53, 60], "mnextarrai": 4, "mnow": [4, 11, 44], "mnrm": [6, 12, 15, 16, 17, 18, 21, 22, 24, 25, 26, 45, 47, 48, 49, 51, 58, 59, 61, 68, 70, 74, 76], "mnrm_hist": 51, "mnrm_list": 26, "mnrmcount": 25, "mnrmgrid": [16, 25, 45, 47, 52], "mnrmgridgrid": 52, "mnrmmax": [25, 52], "mnrmmin": [11, 15, 16, 18, 22, 25, 44, 45, 47, 48, 49, 51, 52, 57, 61, 63, 64, 69, 70], "mnrmnestfac": 25, "mnrmnow": [17, 24], "mnrmss": 47, "mnrmste": [47, 49], "mnrmtild": [25, 59], "mnrmtrg": [47, 49], "mnt": [44, 50], "mnw": 53, "mode": [1, 15, 31, 42], "model": [0, 1, 2, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 35, 37, 41, 42, 44, 51, 57, 65, 69, 72, 76, 77], "model_fil": 6, "model_stat": 6, "modelclass": 8, "moder": 51, "modern": [4, 5, 70], "modif": [1, 18, 37], "modifi": [1, 4, 15, 20, 45, 60], "modigliani": 15, "modul": [0, 1, 3, 5, 6, 8, 23, 34, 37, 47, 48, 49, 51, 57, 58, 60, 67, 69, 74], "modular": [0, 4, 5, 8, 10], "module_nam": 8, "moment": [4, 5, 46, 53, 54, 56, 65, 67], "momentarili": 53, "monei": [26, 52, 63, 64, 65, 66, 67], "monetari": 71, "mont": [0, 41, 68, 74], "monte_carlo": [0, 41], "monte_carlo_asset": 76, "monte_carlo_consumpt": 76, "montecarlosimul": 41, "month": [1, 10, 25, 67, 69], "monthli": 67, "moral": [52, 67], "more": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 31, 33, 37, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76], "moreov": [1, 46, 47, 48, 51, 52, 61, 63, 64, 66, 67, 68, 69, 74], "mort": [11, 15, 18, 22], "mortal": [0, 6, 14, 15, 16, 29, 41, 46, 49, 62, 63, 64, 67, 68, 71, 74], "mortdstn": 6, "most": [0, 3, 5, 6, 8, 12, 14, 35, 37, 42, 49, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75], "mostli": [3, 6, 10, 52, 53, 60, 64, 66, 69, 71, 72, 74], "motiv": [5, 12, 15, 16, 47, 48, 49, 52, 53, 61, 66], "mouth": 71, "move": [0, 8, 25, 26, 51, 53, 61, 63, 66, 67, 71, 74], "movement": [5, 71], "mp": 0, "mpc": [5, 11, 13, 15, 16, 18, 19, 22, 26, 47, 48, 49, 50, 55, 57, 64, 71], "mpc_list": 26, "mpcmax": [15, 16, 47, 49, 61], "mpcmin": [15, 16, 47, 49, 61], "mpcminnvr": 16, "mpcnow": 0, "mpk": 73, "mplotbottom": 64, "mplottop": 64, "mpoint": 76, "mpt": 54, "mr": 68, "mrkv": [0, 4, 11, 18, 23, 58], "mrkv_hist": 51, "mrkv_p11": [18, 23], "mrkv_p22": [18, 23], "mrkvarrai": [0, 6, 11, 18, 23, 44, 51, 58], "mrkveconomyexampl": 44, "mrkvinitdstn": 18, "mrkvnow": [0, 11, 18], "mrkvnow_hist": 11, "mrkvprbsinit": [18, 51], "mround": 42, "ms_limit": 54, "mss": 4, "mtil": 25, "mu": [31, 60, 66], "mu_": 52, "mu_h": 52, "mu_norm": 31, "much": [1, 5, 6, 10, 11, 17, 31, 47, 49, 53, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69], "multi": [8, 14, 25, 42, 45, 60, 62], "multi_rv_frozen": 31, "multi_thread": 8, "multi_thread_command": [8, 29, 60, 65], "multi_thread_commands_fak": [8, 29, 60], "multilinear": [0, 32, 66], "multipl": [1, 4, 6, 8, 12, 14, 15, 22, 29, 35, 37, 40, 42, 46, 60, 62, 65, 67], "multipli": [13, 31, 52, 53, 58, 63, 67, 74, 76], "multiprocess": 0, "multithread": [0, 8, 29, 60], "multivari": [0, 6, 8, 31, 60], "multivariate_normal_frozen": 31, "multivariatelognorm": 31, "multivariatenorm": 31, "mupperbnd": 26, "mupperindex": 76, "mupperweight": 76, "must": [1, 4, 6, 8, 10, 12, 15, 17, 18, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 45, 46, 47, 48, 49, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 74, 76], "mutat": 38, "mutual": 5, "mv77": 25, "mx1": 76, "my": 1, "my_directory_full_path": 34, "my_grid_spec": [71, 72, 74], "my_income_param": 60, "my_livprb": 60, "my_modul": 34, "myinterpol": 66, "mypath": 42, "myprob": 6, "myst": 1, "mystifi": 74, "mystr": [44, 47, 48, 49, 50, 51, 52, 53, 55, 57, 63, 64], "mytyp": [6, 52, 54, 56, 62, 68, 74], "n": [0, 1, 3, 5, 8, 14, 17, 19, 22, 25, 30, 31, 35, 37, 42, 45, 46, 49, 50, 54, 56, 57, 59, 60, 64, 66, 68, 69, 70, 71, 72, 74, 75], "n_": [47, 48, 51, 64], "n_approx": 35, "n_approx_perm": 35, "n_approx_tran": 35, "n_dim": 37, "n_nrm_next": 25, "n_nrm_tp1": 25, "n_slice": 59, "n_t": [14, 46, 69], "n_til": 59, "n_var": [71, 73], "na": 37, "nadaraya": 42, "nail": 74, "nake": 48, "name": [0, 3, 6, 8, 15, 16, 20, 29, 31, 33, 34, 35, 38, 41, 42, 49, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74], "namedtupl": 29, "namespac": [0, 29], "nan": [0, 6, 30, 37, 47, 49, 62, 66], "nan_bool": 37, "nark": [1, 15, 16], "narr": 53, "nation": 70, "natur": [4, 6, 8, 10, 12, 37, 49, 61, 62], "navig": [1, 3, 5], "nb": [6, 60, 61, 65, 68, 74], "nbreproduc": 4, "ncol": 71, "nd": [31, 66], "ndarrai": [0, 31, 40, 42], "ndim": 76, "nearbi": [0, 60, 66], "nearli": [6, 48, 63, 68], "neat": 74, "necesarili": 42, "necessari": [6, 8, 14, 22, 29, 32, 46, 47, 62, 70], "necessarili": [12, 13, 49, 63, 67, 68, 74], "need": [0, 1, 3, 6, 8, 19, 25, 29, 31, 37, 42, 45, 47, 48, 49, 52, 57, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 75], "neg": [6, 8, 15, 22, 40, 49, 64, 68], "neither": [6, 8, 29, 35, 60], "nelder": [8, 33, 60], "neldermead": 0, "neq": 63, "nest": [4, 6, 11, 23, 25, 29, 35, 42, 45, 47, 48, 62, 73, 74, 76], "net": [31, 58], "network": 4, "neural": 4, "neutral": [0, 35, 42, 74], "neutral_measur": [0, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 62, 74, 76], "never": [0, 1, 8, 62, 64, 66, 67], "nevertheless": 69, "new": [0, 1, 2, 4, 5, 8, 10, 11, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 41, 46, 48, 49, 53, 54, 57, 60, 61, 62, 63, 64, 65, 70, 71, 73, 74, 75, 76, 77], "new_data": 33, "new_solut": 15, "new_stat": 31, "newborn": [0, 6, 8, 12, 13, 15, 17, 19, 21, 22, 24, 41, 42, 61, 68, 74, 76], "newborn_dstn": 74, "newborndist": 42, "newborntransshk": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 74], "newcommand": [12, 14, 15, 17, 21, 22, 24, 47, 48, 49, 63, 64, 66, 68], "newexampl": 64, "newkeynesianconsumertyp": [20, 71, 72, 73, 76], "newli": [6, 45, 47, 48, 65], "newton": 5, "next": [1, 3, 4, 6, 8, 11, 12, 13, 14, 17, 20, 21, 25, 45, 51, 52, 53, 58, 60, 61, 63, 65, 66, 67, 68, 69, 71], "nfev": 73, "nfunc": [14, 59], "ng": 42, "nice": [66, 68], "nicer": 66, "nich": 67, "nifti": 67, "nlvl": 14, "nnrm": [25, 59], "nnrmcount": 25, "nnrmgrid": 25, "nnrmmax": 25, "nnrmmin": 25, "nnrmnestfac": 25, "nnrmtild": [25, 59], "nobodi": 70, "node": [0, 14, 19, 22, 35, 42, 46, 47, 52, 60, 62, 66, 68], "nodefaultexampl": 62, "nomin": [12, 13, 15, 17, 19, 21, 22, 24, 67], "non": [0, 1, 4, 6, 8, 17, 19, 22, 26, 30, 31, 33, 35, 37, 40, 42, 46, 47, 48, 49, 52, 53, 60, 61, 65, 66, 68, 74, 76, 77], "non_empti": 43, "nondegener": 15, "nondifferenti": 71, "nondur": 69, "none": [0, 1, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 63, 68, 72, 73, 74, 76], "nonlinear": 71, "nonmed": 19, "nontrivi": 10, "nor": [6, 10, 29, 35, 49, 61, 67, 69], "norm": [60, 71, 72, 74], "normal": [0, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 35, 37, 42, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 61, 63, 64, 66, 68], "normaliz": 67, "normalizedexampl": 45, "norwegian": 70, "notabl": [6, 67], "notat": [0, 6, 58, 60, 69, 75], "note": [1, 4, 5, 6, 8, 11, 15, 18, 22, 26, 31, 35, 37, 42, 44, 45, 46, 47, 49, 51, 53, 54, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 74], "notebook": [0, 1, 3, 5, 8, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "noth": [6, 8, 13, 14, 29, 41, 42, 46, 60, 74], "notic": [53, 54, 60, 62, 63, 64, 66, 68, 75, 76], "notimplementederror": 31, "noun": 1, "nov": 0, "novel": 5, "now": [0, 1, 3, 5, 6, 10, 14, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 59, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 76], "np": [0, 4, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 33, 35, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 73, 74, 76], "nrm": [13, 15, 16], "nrow": 71, "nth": [37, 40], "ntil": 25, "nu": [19, 37, 53], "nu_limit": 54, "nudg": 1, "nullfunc": [16, 24, 26, 29, 42, 47, 49, 62], "num": [44, 45], "num_job": [29, 60], "num_pointsm": 20, "num_pointsp": [20, 76], "num_pt": 76, "numba": [0, 16, 28, 37], "numba_tool": [0, 39], "number": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 33, 35, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74], "numer": [0, 1, 6, 8, 10, 31, 37, 38, 47, 53, 54, 56, 60, 64, 65, 69, 71], "numerair": 53, "numpi": [0, 1, 4, 5, 6, 8, 19, 20, 25, 31, 32, 37, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 73, 74, 76], "numpt": 25, "nvr": 66, "nw": 59, "nxn": 31, "o": 69, "obei": [19, 67], "obj_func": [33, 60], "object": [0, 1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 35, 37, 38, 41, 42, 44, 46, 47, 49, 51, 52, 53, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 73, 74, 75], "object_nam": 8, "objective_func": 33, "observ": [6, 17, 46, 52, 53, 65, 67, 70], "obtain": [3, 5, 26, 54, 56, 64, 70, 71, 75], "obviat": 17, "obviou": 60, "occasion": 51, "occur": [0, 6, 11, 31, 35, 37, 47, 48, 49, 61, 63, 64, 67, 68, 71, 74, 76], "off": [0, 1, 6, 8, 20, 47, 49, 66, 68, 71], "offer": [8, 63, 70], "offici": [0, 3, 5], "offset": [35, 42, 61, 71, 72, 74], "often": [3, 6, 8, 29, 37, 53, 60, 63, 65, 66, 69], "ok": 64, "ol": 10, "old": [0, 6, 10, 29, 64, 68, 72], "older": [0, 1, 70], "omega": [14, 46, 52], "omega_": [14, 46], "omega_0": 52, "omega_1": 52, "omega_t": [14, 46], "omit": [6, 46, 49, 74], "onc": [1, 3, 5, 8, 29, 40, 50, 52, 53, 63, 64, 65, 68], "one": [0, 1, 3, 6, 8, 10, 11, 12, 14, 15, 17, 18, 20, 22, 24, 25, 29, 30, 31, 35, 37, 38, 41, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 76], "one_period_solv": 16, "oneperiodexampl": 46, "oner": 6, "ones": [0, 21, 25, 29, 42, 51, 60, 61, 62, 65, 69, 76], "ones_lik": [44, 45, 46, 50, 53, 54, 56, 57, 59], "ongo": [0, 52], "onli": [0, 1, 6, 8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 41, 42, 45, 46, 47, 48, 49, 52, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76], "onlin": [1, 4, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "onlinelibrari": 4, "onstrat": 8, "onsumpt": 40, "onto": [42, 74, 76], "oop": [8, 69], "open": [0, 1, 3, 5, 6, 10, 11, 69], "oper": [3, 5, 6, 19, 29, 37, 41, 65, 68, 74, 76], "oppos": 71, "opposit": 52, "opt": 19, "opt_idx": 30, "optim": [0, 1, 4, 5, 6, 8, 12, 16, 17, 19, 21, 24, 26, 29, 33, 37, 42, 45, 46, 52, 53, 56, 63, 65, 66, 67, 69, 70, 71, 73, 74, 77], "option": [0, 1, 3, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 29, 30, 31, 33, 35, 37, 38, 40, 42, 47, 49, 51, 57, 61, 63, 64, 66, 67, 68, 74], "oracular": 10, "orang": [54, 55, 56, 63, 66], "order": [1, 3, 8, 10, 14, 15, 17, 25, 29, 31, 35, 40, 46, 47, 48, 49, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74], "ordinari": [29, 42, 46, 51, 52, 53, 60, 61, 63, 65, 66, 67], "ordinarili": 6, "org": [0, 1, 3, 4, 7, 25, 30, 31, 37, 42, 73, 76], "organ": [0, 1, 5, 8, 64, 65, 69], "organiz": 8, "orient": [0, 5, 8, 57, 69], "origin": [0, 3, 4, 6, 29, 42, 46, 47, 49, 53, 59, 60, 61, 62, 63, 64, 67, 68, 69, 73, 74], "other": [1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 29, 31, 35, 42, 45, 46, 47, 48, 49, 52, 53, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77], "otherexampl": 64, "otherwis": [1, 6, 15, 24, 29, 35, 37, 42, 45, 51, 60, 61, 62, 65, 67, 68, 74], "our": [0, 1, 5, 8, 10, 30, 48, 49, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "out": [0, 1, 3, 6, 8, 25, 37, 42, 52, 53, 61, 62, 63, 64, 65, 66, 68, 70, 71, 74], "out_grid": 62, "out_of_bound": 37, "outcom": [0, 1, 4, 5, 6, 8, 24, 29, 31, 35, 37, 52, 53, 61, 65, 67, 71, 72, 74, 75], "outcome_arrai": [71, 74], "outcome_grid": [71, 74], "outlier": 70, "output": [0, 1, 3, 4, 5, 8, 14, 29, 31, 33, 35, 37, 42, 46, 58, 60, 61, 62, 63, 65, 66, 67, 71, 73, 74, 75], "output_nam": 1, "outsid": [5, 6, 31, 45, 62, 67], "over": [0, 4, 6, 8, 11, 12, 15, 16, 17, 20, 21, 22, 24, 25, 26, 29, 31, 33, 34, 35, 37, 38, 42, 46, 47, 48, 49, 51, 53, 54, 56, 57, 60, 61, 63, 64, 66, 67, 68, 69, 70, 74, 75, 76], "overal": [1, 31, 35], "overflow": 49, "overhaul": 6, "overhead": [1, 60], "overlin": [13, 35, 45, 66], "overrid": [6, 54, 60], "overridden": 6, "oversimplif": 74, "overtim": 76, "overview": [1, 3, 4, 5, 6, 8, 74, 77], "overwrit": [8, 15, 29, 45, 61], "overwritten": [0, 11, 29, 41, 51, 61], "own": [1, 3, 5, 8, 10, 15, 24, 29, 30, 60, 62, 64, 67, 69, 71, 73], "own_shock": [71, 73], "p": [4, 13, 19, 31, 33, 35, 37, 40, 45, 53, 60, 61, 64, 66, 68, 69, 70, 74, 76], "p0": [60, 68], "p1": 68, "p_": [13, 19, 35, 45, 49, 52, 53, 64, 68, 69, 74], "p_0": [46, 49], "p_1": 46, "p_2": 46, "p_i": 68, "p_k": 46, "p_reemploi": 51, "p_t": [12, 13, 19, 21, 45, 47, 48, 49, 52, 53, 58, 64, 66, 68, 69], "p_unemploy_bad": 51, "p_unemploy_good": 51, "paas": 41, "packag": [0, 3, 5, 8, 10, 34, 60, 69], "page": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "pai": [52, 53, 67], "paid": 17, "painlessli": 69, "pair": [29, 30, 53, 60, 62, 66], "panda": [29, 59], "pandoc": 1, "paper": [3, 4, 5, 8, 10, 35, 45, 46, 65, 67, 69, 70, 74], "par_finit": 59, "par_infinit": 59, "para": 40, "parallel": [0, 29, 33, 65], "parallelneldermead": [0, 33, 60], "param": [3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 37, 45, 46, 51, 52, 53, 57, 62, 64, 68, 69, 70, 74, 76], "param_count": 29, "param_desc": 15, "param_nam": 29, "param_v": 42, "paramet": [0, 1, 3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 46, 54, 55, 59, 61, 65, 67, 68, 69, 70, 72, 73, 74, 76], "parameter": [0, 31, 64, 67, 70], "parameter_guess": 33, "parameter_nam": 43, "parameteriz": 62, "parametr": [0, 6, 8, 14, 42, 46, 52, 60, 65, 69], "paramt": 69, "parent": [0, 11, 15, 17, 24, 42, 57, 61, 67, 69], "parenthes": [6, 74], "parker": 5, "pars": [0, 6, 29, 38], "parse_income_spec": [60, 68], "parse_ssa_life_t": [60, 68], "parse_time_param": 68, "parser": [0, 6, 60], "parsimoni": 6, "part": [0, 1, 3, 5, 6, 8, 29, 47, 48, 49, 60, 61, 63, 65, 66, 68, 69, 71, 74], "partelabor": 69, "partial": [5, 25, 37, 38, 66, 75], "particular": [5, 6, 8, 15, 26, 30, 45, 47, 48, 54, 56, 60, 61, 64, 65, 66, 68, 72, 74, 75, 76], "particularli": [35, 60, 67, 71], "partli": 66, "pass": [0, 1, 4, 6, 8, 11, 12, 13, 15, 17, 19, 21, 22, 24, 29, 31, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 57, 60, 61, 62, 63, 64, 65, 66, 69, 71, 73, 74], "past": [5, 6, 11, 29, 32, 63, 76], "patch": [10, 70], "path": [3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 34, 47, 69, 74, 75], "path_to_changed_fil": 1, "pathnam": 34, "patienc": [0, 15], "patient": 64, "pattern": 5, "pbot": 66, "pctl_out": 42, "pd": 59, "pdf": [1, 31], "pdstn": 76, "pdv": [15, 16, 49, 61, 63, 64], "penal": 52, "pendent": 20, "peopl": [5, 8, 26, 42, 54, 56, 60, 67, 68, 74], "pep8": 0, "per": [6, 11, 15, 17, 18, 22, 26, 35, 38, 61, 64, 65, 67, 74], "perceiv": 4, "percent": 64, "percentag": [71, 73], "percentil": [8, 13, 19, 35, 42, 45, 53, 66], "percept": [35, 54], "perfect": [0, 11, 12, 13, 15, 16, 17, 19, 21, 22, 24, 26, 47, 48, 67, 69, 73, 75], "perfectli": [49, 75, 76], "perfforesightconsumertyp": [0, 3, 5, 15, 16, 48, 54, 61, 62, 63, 64, 69], "perfforesightconsumertypefast": [0, 16], "perfforesightcrra": 49, "perfforesightdict": 49, "perfforesightsolut": 16, "perfmitshk": [0, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 74, 76], "perform": [0, 1, 3, 5, 8, 29, 33, 42, 60, 71, 76], "perfshk_tail_n": 57, "perfshkcount": 57, "perfshkstd": 57, "perfshockconsumertyp": 57, "perhap": [29, 65, 68, 69], "period": [0, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 37, 38, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76], "periodsol": 25, "perist": 71, "perm": [42, 68, 72], "perm_shk": 42, "perm_val": 42, "perman": [0, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 42, 44, 47, 48, 49, 52, 53, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73], "permgrofac": [0, 3, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 45, 47, 48, 49, 51, 52, 53, 58, 59, 60, 63, 64, 68, 72, 73, 74, 76], "permgrofac_": [12, 15, 17, 21, 22, 24, 47, 48, 49], "permgrofac_coeff": 35, "permgrofac_t": 49, "permgrofacagg": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 44, 45, 47, 48, 49, 60, 70, 74, 76], "permgrofacagglr": 11, "permgrofaccmp": 26, "permgrofacind": 35, "permin": [12, 13, 15, 19, 21, 22, 24], "permiss": [1, 3, 17, 49], "permit": [1, 6, 20, 52, 60, 63, 64, 65, 75], "permshk": [6, 11, 12, 13, 15, 17, 18, 19, 21, 22, 24, 25, 35, 51, 60, 61, 67, 68, 71, 72, 74], "permshkaddstd": 11, "permshkaggcount": 11, "permshkaggdstn": 11, "permshkaggnow": 11, "permshkaggstd": 44, "permshkcount": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 62, 64, 73, 74, 76], "permshkdstn": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 52, 53, 61, 62, 63, 74], "permshknow": [13, 15, 17, 23], "permshkstd": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 52, 59, 60, 62, 63, 64, 72, 73, 74, 76], "permshkstd_coeff": 35, "permut": 31, "perpetu": 74, "pershkstd": 57, "persist": [13, 35, 37, 44, 51, 52, 53, 61, 66, 67, 71, 73], "persistent_shock": 45, "persistentexampl": 45, "persistentshockconsumertyp": [13, 19, 45, 52, 53, 69], "person": [1, 3, 6, 8, 61, 64, 65, 74], "perspect": [63, 66, 74], "persuad": 5, "pertain": [8, 65, 74], "pertub": [73, 76], "perturb": [4, 26, 29, 33, 60, 71, 74], "pf": 42, "pf_dictionari": 64, "pfexampl": [49, 64], "pfmpc": 26, "pfvafac": 15, "pgrid": [20, 45], "phase": [8, 60, 61, 62], "phd": 4, "phi": [12, 14, 21, 24, 52, 66], "phi_": [12, 21, 24], "phi_t": [14, 35, 46], "pi": 53, "pi_": 63, "pi_t": [53, 63], "pick": 64, "pickl": 60, "piec": 30, "piecewis": [30, 37, 42, 47, 66], "pin": [0, 67], "pioneer": 5, "pip": [1, 3, 5], "pipe": 6, "place": [0, 1, 3, 60, 61], "placehold": [3, 42], "plai": [5, 63], "plain": 29, "plan": [63, 66], "platform": [0, 5, 42], "plausibli": [8, 47], "pleas": [0, 1, 3, 5, 7, 8, 34, 69], "plenti": [3, 69], "plog": 35, "plogcount": 35, "ploggrid": [35, 52], "ploginitcount": 68, "ploginitmean": [0, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 49, 60, 62, 68, 74], "ploginitstd": [0, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 49, 62, 68, 74], "plogmean": [13, 35], "plogmrkvarrai": [35, 52], "plograng": 35, "plot": [0, 4, 8, 17, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 73, 74, 76], "plot_cfunc": 17, "plot_func": [42, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 63, 64, 66, 69, 70], "plot_funcs_d": [42, 47, 48, 55], "plot_lbrfunc": 17, "plot_point_max": 54, "plot_slices_3d": 59, "plot_slices_4d": 59, "plot_ssj": [72, 74], "plot_timeseri": 73, "plt": [4, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 63, 64, 68, 70, 71, 72, 73, 74, 76], "plu": [6, 11, 14, 15, 18, 22, 37, 47, 49, 52, 53, 64], "plug": 5, "plural": 0, "plvl": [0, 6, 11, 12, 13, 15, 17, 18, 19, 21, 22, 24, 25, 35, 45, 47, 48, 49, 53, 59, 61, 67, 68, 70, 74, 76], "plvlagg": [15, 18, 25, 61], "plvlextra": [13, 19, 35], "plvlfuncar1": [13, 35], "plvlgrid": [13, 19, 35, 45, 53, 62], "plvlgrid_default": 13, "plvlinitcount": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 62, 74], "plvlinitdstn": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 61, 62, 68, 74], "plvlinitmean": [0, 12, 13, 15, 17, 19, 21, 22, 24, 45, 47, 48, 54, 70, 76], "plvlinitstd": [0, 12, 13, 15, 17, 19, 21, 22, 24, 45, 47, 48, 70, 76], "plvlmean": [35, 52], "plvlmrkvarrai": 62, "plvlnextfunc": [13, 19, 35, 45, 52, 53], "plvlnextfunc_default": 13, "plvlnextfuncret": 13, "plvlnow": [11, 13, 17, 23], "plvlnow_init": 49, "plvlpctile": [13, 19, 35, 45, 53], "plvlpctile_bound": 35, "plvlpctile_count": 35, "plvlpctile_tail_count": 35, "plvlpctile_tail_ord": 35, "plvlpctiles_bound": [13, 19, 35], "plvlpctiles_count": [13, 19, 35], "plvlpctiles_default": 13, "plvlpctiles_tail_count": [13, 19, 35], "plvlpctiles_tail_ord": [13, 19, 35], "plvlprev": [6, 68, 74], "pmatrix": 75, "pmf": [0, 31, 76], "pmv": [0, 31, 51, 53, 57, 60], "png": 73, "poach": 1, "pocket": 52, "point": [0, 4, 5, 6, 8, 14, 16, 19, 20, 21, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 42, 44, 45, 46, 47, 48, 49, 53, 54, 57, 60, 62, 63, 64, 65, 66, 67, 69, 71, 73, 74, 76], "pointwis": 47, "polar": 37, "polici": [0, 1, 4, 6, 8, 14, 19, 20, 21, 46, 59, 61, 63, 65, 66, 67, 69, 71, 73, 76], "policyfunc": 19, "policymak": 4, "polit": 4, "polymrkvarrai": 44, "polynomi": [14, 17, 35, 37, 42, 46, 52, 53, 62, 74], "polystateeconomi": 44, "polystateexampl": 44, "pond": 26, "poor": 65, "poorli": 5, "popul": [0, 5, 6, 8, 18, 29, 41, 48, 49, 51, 52, 53, 57, 60, 61, 68, 70, 71, 74, 75], "popular": [1, 5, 8], "population_paramet": 29, "port": [0, 1], "portchoiceconsumertyp": 67, "portfolio": [0, 12, 21, 24, 25, 71], "portfoliobisect": [12, 21, 24, 25], "portfoliobool": [0, 12, 21, 24, 25, 55], "portfoliochoiceexampl": 55, "portfolioconsumerframetyp": 0, "portfolioconsumertyp": [0, 12, 21, 54, 55], "portfoliosolut": [12, 21], "portfoliotypeexampl": 55, "portion": [12, 13, 14, 15, 17, 19, 21, 22, 24, 35, 48, 52, 53, 63, 68], "portolio": 0, "posit": [8, 14, 15, 22, 31, 37, 46, 49, 52, 60, 64, 67, 68], "possibl": [0, 1, 5, 6, 12, 26, 30, 31, 46, 54, 56, 61, 62, 64, 65, 66, 69, 72, 76], "possibli": [10, 24, 60], "post": [0, 8, 10, 14, 25, 29, 42, 46, 49, 61, 71], "post_solv": [0, 6, 8, 15, 16, 26, 29], "postsolv": 60, "poststat": 0, "poststate_var": [26, 29], "potenti": [0, 6, 33, 44, 63, 64, 69], "powel": [8, 33], "power": [0, 40, 50, 53, 62, 70], "pp": 37, "pr": [0, 1], "practic": [65, 66, 69], "pre": [0, 4, 6, 8, 25, 29, 31, 37, 38, 41, 53, 60, 61, 62], "pre_comput": 37, "pre_solv": [8, 11, 13, 15, 18, 19, 22, 23, 24, 25, 26, 29, 65, 69], "prebuilt_grid": 32, "preced": [1, 53, 66], "preceed": 6, "precis": [0, 1, 52, 60, 63, 67], "precomput": 4, "precursor": 67, "predecessor": 64, "predefin": [42, 76], "predict": [6, 65, 69, 70, 71], "pref": 57, "prefer": [1, 3, 6, 19, 22, 25, 46, 47, 48, 57, 58, 64, 65, 66, 68, 69, 70, 73], "preferec": 57, "prefix": [1, 66], "prefshk": [22, 57], "prefshk_tail_bound": 22, "prefshk_tail_n": [22, 57], "prefshk_tail_ord": 22, "prefshkcount": 22, "prefshkdstn": [0, 22, 57], "prefshkdstn_default": 22, "prefshkstd": 22, "prefshock": [57, 67], "prefshockconsumertyp": 22, "prefshockexampl": 57, "preliminari": 8, "premium": 37, "prepar": [5, 8, 11, 15, 18, 23, 29, 41, 65, 69], "presenc": [0, 15, 61], "present": [4, 5, 11, 15, 18, 22, 29, 46, 47, 62, 66, 69, 73, 74, 75], "preserv": [60, 66], "preset": [3, 76], "presolv": [0, 29, 60], "presort": 42, "prespecifi": [11, 20], "pretti": [61, 63, 64, 67, 74], "prettier": 1, "prevent": [0, 1, 6, 47, 49, 61, 64, 66, 70, 74], "previou": [1, 8, 26, 33, 38, 45, 49, 64, 69, 75], "previous": [0, 8, 31, 69], "price": [19, 37, 53, 65, 67, 69, 75], "primari": [0, 61, 62, 66, 74], "prime": [47, 60, 61], "primit": [11, 15, 20, 45, 52, 57, 62, 64, 69, 74], "principl": [5, 46, 61, 63, 65], "print": [0, 3, 4, 5, 6, 29, 31, 33, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 76], "print_help": 34, "prior": [0, 6, 11, 14, 29, 48, 60, 61, 63, 65, 67, 74], "priorit": 38, "privat": [29, 67], "proactiv": 1, "prob": [13, 37, 42, 46, 51, 76], "proba": 11, "probabl": [0, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 35, 37, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 76], "probarrai": 4, "probgrid": [42, 76], "problem": [0, 1, 3, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 33, 35, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 71, 73, 74, 76], "proce": [6, 52, 63, 69], "procedur": [0, 8, 33, 69], "process": [0, 1, 3, 4, 6, 8, 11, 12, 13, 20, 26, 29, 31, 33, 35, 42, 51, 52, 61, 62, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77], "process_tim": [44, 50, 51, 57], "prod": 17, "prod_": 60, "prodb": 4, "prodg": 4, "produc": [0, 5, 8, 10, 11, 14, 25, 29, 33, 35, 46, 58, 60, 62, 67, 68, 69, 70, 71, 73, 74, 75, 76], "product": [4, 8, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 31, 35, 40, 45, 46, 47, 48, 49, 50, 58, 63, 67, 69, 71, 73, 74], "profession": 1, "professor": [1, 69], "profici": 5, "profil": [0, 35, 42, 68, 70], "program": [4, 5, 8, 52, 60, 62, 63, 65, 66, 69, 74], "progress": [1, 10, 29, 33, 60, 74], "project": [0, 1, 3, 5, 8, 10, 62, 65, 77], "prompt": [3, 5], "proof": 52, "prop": 76, "propag": [45, 49, 67], "propens": [15, 16, 26, 47, 48, 49, 50, 61, 63, 65], "proper": [0, 8, 60, 62, 67, 74], "properli": [0, 8, 29, 57, 61], "properti": [0, 29, 31, 61, 66, 67, 69], "proport": [25, 29, 31, 49, 67, 71], "proportion": 60, "propos": [0, 69, 71], "proudli": [10, 69], "prove": 66, "provid": [0, 1, 3, 4, 5, 6, 8, 10, 29, 30, 31, 33, 34, 35, 37, 38, 41, 42, 46, 47, 48, 49, 52, 53, 60, 63, 64, 66, 67, 71, 74, 75, 76], "prstinccorr": [13, 19, 35, 45, 52, 53], "pseudo": [14, 29, 37, 50, 52, 53, 64], "pseudo_invers": 50, "pseudo_inverse_interpol": 66, "pseudo_termin": [8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 61, 74], "pshk": 47, "pshk_t": 47, "psi": [12, 13, 15, 17, 19, 21, 22, 24, 35, 47, 48, 51, 53, 57, 58, 60, 63, 64, 69, 74], "psi_": [12, 13, 15, 17, 19, 21, 22, 24, 35, 45, 47, 48, 51, 53, 57, 58, 63, 64, 68, 69], "psi_t": [35, 45, 48, 52, 53, 58, 64, 68, 74], "psycholog": 10, "ptop": 66, "public": [0, 1, 26, 54, 56, 67, 70], "publish": [4, 10, 25, 66, 69, 70], "pull": [0, 6, 61, 62], "pun": 60, "purchas": [53, 67, 71], "pure": 69, "purpos": [3, 4, 5, 11, 15, 18, 22, 30, 34, 41, 42, 53, 60, 61, 63, 65, 67, 68], "push": 1, "put": [3, 6, 14, 35, 49, 53, 60, 61, 62, 64, 66, 71, 76], "py": [0, 1, 3, 4, 5, 6, 8, 20, 44, 49, 50, 53, 62, 69, 76], "pycharm": [3, 5], "pypi": 3, "pyplot": [4, 8, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 63, 64, 68, 70, 71, 72, 73, 74, 76], "pytest": [1, 4], "python": [0, 1, 4, 6, 8, 34, 40, 42, 60, 63, 64, 69, 74, 77], "pyupgrad": 1, "q": [53, 66], "q_t": 53, "qbot": 66, "qe643": 30, "qquad": [45, 51, 52, 53, 57, 58], "qtf": 73, "qtop": 66, "quad": [37, 75], "quadlinear": 37, "quadlinearinterp": [37, 66], "quadralinearinterp": 66, "quadratur": [0, 31, 66], "quadrilater": 37, "qualiti": [1, 5], "quantecon": [5, 8, 69], "quantil": 66, "quantit": 5, "quantiti": [17, 40], "quarter": [63, 71, 73], "quarterli": 63, "queri": [31, 37, 52, 66], "question": [1, 3, 4, 5, 8, 10, 52, 69, 70], "quick": [2, 3, 11, 13, 15, 19, 22, 23, 24, 25, 42, 58, 60, 62, 69, 74, 77], "quickindshkexampl": 63, "quickli": [6, 10, 37, 66, 68, 74], "quickpfexampl": 63, "quickstart": 69, "quiet": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29], "quietli": 29, "quirk": 66, "quit": [1, 8, 31, 49, 60, 63, 66, 67, 68], "quot": [64, 69], "quotat": 65, "r": [3, 8, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 37, 44, 45, 46, 47, 49, 51, 52, 53, 57, 60, 61, 63, 64, 66, 68, 69, 71, 72, 73, 74, 75, 76], "r_": [37, 46, 52, 53, 58, 63, 64, 68, 69, 75], "r_param": 33, "r_ss": [71, 73], "r_t": [63, 69, 75], "ra": [23, 58, 71], "ra_markov_param": 58, "ra_param": 58, "raexampl": 58, "rainbow": 67, "rais": [0, 5, 6, 29, 31, 40, 42, 66], "ramarkovexampl": 58, "ran": [66, 68], "random": [0, 8, 11, 13, 14, 15, 18, 19, 22, 23, 24, 29, 31, 33, 35, 41, 45, 49, 60, 67, 68, 74], "random_se": [31, 60], "random_st": 31, "randomli": [6, 11, 49, 76], "randomst": [0, 8, 14, 19, 22, 24, 35, 74], "rang": [5, 8, 37, 41, 42, 44, 47, 50, 51, 53, 54, 56, 57, 59, 63, 66, 68, 70, 71, 73, 76], "rare": [0, 6, 60], "rate": [0, 4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 32, 35, 45, 46, 47, 49, 51, 52, 54, 63, 64, 65, 69, 70, 71, 73, 74], "rather": [0, 1, 6, 8, 11, 12, 13, 14, 15, 18, 19, 22, 37, 38, 45, 46, 48, 49, 57, 60, 61, 63, 64, 65, 66, 67, 68, 74], "ratio": [11, 12, 13, 15, 19, 21, 22, 24, 44, 47, 49, 54, 64, 70, 71, 74], "ration": [65, 67, 69], "raw": [46, 66, 70], "rblock": [0, 38], "rboro": [15, 22, 48, 57, 61], "rcount": 54, "rcparam": 76, "re": [0, 1, 3, 5, 6, 25, 37, 52, 61, 62, 64, 66, 67, 68, 72, 73, 74], "reach": [0, 1, 8, 11, 31, 33, 61, 63, 66, 68], "read": [0, 1, 6, 29, 60, 61, 62, 64, 68, 69, 74], "read_shock": [0, 18, 29, 41, 68], "read_shocks_from_histori": [18, 29, 61], "readabl": 0, "reader": [1, 53, 64, 68], "readi": [1, 6, 29, 47, 48, 64], "readm": [0, 8], "readthedoc": 1, "real": [3, 6, 8, 37, 47, 49, 52, 60, 63, 73, 74, 75], "realism": 75, "realist": [60, 67, 71], "realiz": [8, 14, 15, 24, 25, 31, 38, 42, 57, 66, 67, 69, 74], "realizatiosn": 14, "realli": [61, 63, 65, 66], "realloc": 53, "reap": [8, 29, 65], "reap_var": [4, 8, 29, 65, 69], "rearrang": [35, 46, 53, 67], "reason": [1, 3, 6, 8, 46, 52, 60, 61, 62, 63, 66, 67, 69], "reassign": 31, "reb": [25, 59], "rebal": 25, "rebalanc": [25, 59], "rebalance_asset": 25, "rebuild": [61, 62, 64], "rebuilt": 62, "recal": [45, 53, 63, 64, 68, 73], "recap": 69, "receiv": [1, 8, 11, 15, 16, 18, 22, 35, 47, 49, 52, 53, 57, 63, 64, 67, 74], "recent": [5, 10, 21, 25, 63, 68, 70, 71], "recess": [5, 69], "recession_length": 51, "reciproc": 53, "recommend": [1, 3, 5, 60, 62, 67, 69, 74], "reconstruct": 64, "record": [1, 6, 15, 29, 33, 41, 47, 48, 61, 65, 68, 74], "recov": [52, 53, 58, 66, 67, 74], "recover": 52, "rectifi": 57, "rectilinear": 46, "recur": 63, "recurs": [0, 3, 8, 38, 40, 60], "red": 1, "redistribut": 1, "reduc": [0, 4, 8, 10, 46, 49, 52, 61, 62, 75, 76], "reduct": 0, "redund": [62, 68], "redundantli": 6, "ref_x": 42, "refactor": [0, 6], "refer": [0, 1, 3, 5, 6, 8, 15, 27, 31, 34, 36, 37, 40, 42, 60, 61, 62, 65, 66, 67, 68, 69, 74, 77], "referenc": [6, 46, 61], "reflect": [10, 33, 54, 69], "reform": 53, "reformat": 0, "reformat_bequest_mot": 52, "reformul": 47, "refresh": 68, "regard": 69, "regardless": [33, 35], "regimen": 0, "registr": 3, "registri": 70, "regress": [4, 8, 10, 42], "regret": [65, 68], "regular": [0, 3, 5, 66], "regularli": 46, "reject": 1, "rel": [0, 1, 3, 4, 5, 8, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 26, 31, 35, 37, 40, 45, 46, 47, 48, 49, 52, 53, 60, 61, 63, 64, 66, 67, 68, 70, 73, 74, 75, 76], "relabel": [6, 68, 74], "relat": [0, 1, 5, 60, 61, 65, 68, 71, 73], "relationship": [0, 6, 11, 46, 74], "relev": [1, 3, 6, 8, 11, 13, 15, 19, 22, 23, 24, 25, 44, 47, 49, 53, 54, 60, 64, 66, 67, 69, 74], "reli": [29, 41, 46, 52, 53, 60, 64, 66], "relprobbg": 4, "relprobgb": 4, "remain": [1, 6, 26, 29, 31, 46, 49, 51, 52, 66, 68], "remap": [6, 60, 61], "remark": [0, 1, 4, 5, 25, 63], "rememb": 69, "remot": [1, 3], "remov": [0, 1, 6, 29, 44, 47, 48, 53], "renam": 0, "renanm": 0, "render": [0, 1], "reorgan": 0, "rep": [58, 71], "repackag": 6, "repagentconsumertyp": [23, 58, 63], "repagentmarkovconsumertyp": [23, 58], "repagentmodel": 67, "repeat": [0, 4, 8, 11, 15, 16, 18, 22, 26, 29, 35, 49, 61, 62, 63, 68, 74], "repeatedli": [8, 63], "repetit": 61, "replac": [0, 6, 8, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 29, 38, 41, 45, 47, 48, 49, 51, 54, 57, 61, 62, 63, 67, 68, 71, 73, 74, 76], "replace_dead": 6, "replic": [0, 4, 5, 8, 11, 60], "repo": [1, 3, 5], "report": [1, 8, 12, 15, 17, 33, 68], "repositori": [0, 1, 3, 4, 5, 8, 10, 67, 77], "repr": 0, "repres": [0, 1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 42, 45, 46, 47, 48, 49, 51, 52, 53, 57, 62, 63, 65, 66, 68, 69, 73, 74, 75], "represent": [0, 8, 14, 15, 29, 31, 38, 46, 52, 60, 61, 63, 64, 65, 67, 74], "representativeagentconsumertyp": 62, "reproduc": [4, 8, 67, 71], "reproduct": 4, "repurpos": 8, "request": [29, 42, 60], "requir": [0, 1, 3, 5, 6, 8, 10, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 32, 46, 47, 48, 49, 51, 52, 57, 60, 61, 62, 63, 66, 69, 70, 74, 75, 76], "rerun": 1, "resampl": [8, 33], "research": [0, 5, 10, 69, 70, 73, 77], "resembl": 32, "reset": [0, 4, 6, 8, 11, 15, 18, 22, 23, 29, 31, 41, 49, 60, 61, 65, 68], "reset_rng": [8, 11, 22, 23, 29, 41], "resetrng": 0, "reshap": [8, 20], "resid": [8, 15, 29, 37, 49], "resolut": 1, "resolv": [29, 62], "resort": 29, "resourc": [3, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 37, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77], "respect": [0, 3, 6, 8, 14, 19, 20, 21, 29, 32, 35, 37, 42, 46, 47, 52, 58, 60, 61, 63, 65, 66, 67, 68, 71, 72, 73, 74], "respond": 75, "respons": [1, 4, 29, 37, 74, 75], "rest": [6, 49, 63, 64], "restart": [6, 64], "restat": 42, "restor": [0, 62], "restrict": [6, 14, 15, 29, 46, 48, 52, 53, 62, 65, 67, 73], "restructur": 0, "restructuredtext": 1, "result": [0, 5, 6, 8, 11, 13, 15, 18, 22, 29, 31, 37, 38, 44, 46, 49, 51, 55, 56, 59, 61, 62, 63, 64, 67, 68, 70, 72, 74, 75], "resum": [33, 49, 60], "resurrect": 67, "ret": [47, 48], "retain": [14, 17, 46, 49, 52, 53, 58, 63, 66, 67, 71], "retir": [0, 5, 13, 35, 45, 47, 48, 60, 63, 67, 71, 73, 74, 76], "retriev": [8, 64], "return": [0, 1, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 47, 49, 50, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76], "return_output": 42, "reusabl": 0, "revert": [0, 45, 64], "review": [1, 5, 8], "reviv": 66, "reward": [0, 28, 38, 41, 50, 53, 66], "rewrit": 0, "rfree": [0, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 68, 70, 71, 72, 73, 74, 76], "rfree_": [12, 14, 15, 17, 22, 48], "rfree_t": [15, 22, 48], "rfree_valu": 0, "rfreenow": [11, 15, 18, 22], "rh": 53, "rho": [12, 13, 14, 15, 17, 19, 21, 22, 24, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 63, 64, 66, 68, 69, 70, 73], "rho_": [12, 75], "rho_b": 71, "rho_g": 71, "rho_z": [73, 75], "ric": 15, "rich": 75, "richer": [4, 67], "right": [1, 6, 12, 15, 17, 18, 21, 22, 24, 30, 35, 46, 47, 48, 52, 53, 56, 60, 63, 64, 65, 66, 71, 74, 75], "right_i": 30, "rightarrow": [53, 54], "rigor": 5, "rise": 68, "risk": [0, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 35, 37, 40, 45, 46, 47, 48, 49, 52, 53, 54, 60, 61, 63, 64, 66, 69, 70, 72, 73, 74, 76], "riskfre": 71, "riski": [0, 12, 21, 24, 25, 35, 54, 56, 64, 71], "riskless": [12, 24, 25, 49, 64], "riskprem": 54, "risky_count_grid": 54, "riskyasset": 0, "riskyassetconsumertyp": [0, 24, 55], "riskyavg": [0, 12, 21, 24, 25, 35, 54, 59], "riskyavgtru": 54, "riskycontrib": [0, 25], "riskycontribcnssolut": 25, "riskycontribconsumertyp": [25, 59], "riskycontribrebsolut": 25, "riskycontribshasolut": 25, "riskycontribsolut": 25, "riskycount": [12, 21, 24, 25, 35, 54], "riskydstn": [12, 21, 24, 25, 35], "riskydstn_default": [21, 24], "riskynow": 24, "riskyreturnexampl": 55, "riskysharefix": [12, 21, 24, 25, 55, 67], "riskysharemertsamlognorm": 54, "riskystd": [0, 12, 21, 24, 25, 35, 54, 59], "riskystdtru": 54, "riskyvar": 54, "rk": 63, "rnextarrai": 4, "rng": [0, 8, 14, 19, 22, 24, 31, 35, 60, 62, 74], "rnow": [4, 11], "rnrm": 26, "robot": 0, "robust": [5, 8, 53], "rognli": [4, 72, 74], "room": 1, "root": [3, 8, 37, 71, 73, 75], "rootfind": 66, "roughli": [5, 8, 49, 67], "round_in_fil": 42, "rout": 1, "routin": [26, 33, 61, 71, 73], "row": [6, 12, 30, 31, 33, 71], "rpfac": 15, "rport": 24, "rsave": [15, 22, 48, 57, 61], "rst": 1, "rudimentari": 31, "rule": [0, 1, 4, 6, 8, 11, 26, 29, 31, 38, 41, 44, 57, 65, 67, 70, 71], "run": [1, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 29, 35, 41, 42, 45, 48, 49, 52, 57, 60, 61, 62, 63, 64, 65, 67, 68, 74, 77], "run_command": 29, "runtimewarn": [44, 50, 53], "rust": 5, "rv": [31, 60, 66], "s_": [12, 21, 51], "s_param": 33, "s_set": 72, "s_t": [12, 21, 24, 46, 51], "sabelh": 68, "sabelhau": 0, "sabelhaussong": 68, "safe": [0, 71, 74], "safeguard": 34, "safest": 62, "sai": [1, 6, 47, 53, 63, 64, 65, 66, 74], "said": [64, 65, 74], "sake": 63, "salient": 8, "same": [0, 1, 3, 5, 6, 8, 11, 12, 13, 15, 19, 21, 22, 24, 26, 29, 30, 31, 32, 33, 35, 37, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74], "sampl": [11, 15, 18, 31, 33, 60, 73], "samuelson": 56, "sat": 67, "satisfi": [15, 46, 48, 53, 66], "save": [0, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 29, 33, 35, 42, 44, 45, 51, 53, 55, 57, 60, 61, 65, 69, 70, 71, 74, 75], "savefig": [42, 73], "savefreq": [33, 60], "savingr": 70, "savingrate_list": 70, "savingratefunc": 70, "saw": [69, 77], "scalar": [15, 31, 38, 74, 76], "scale": [0, 12, 14, 20, 22, 31, 35, 52, 60, 63, 67, 75], "scandinavian": 70, "scare": 64, "scatter": 0, "scf": [0, 54], "scheme": [0, 6, 25], "schjern": 5, "schoen": [14, 46], "scholar": 5, "school": 60, "scientif": [1, 3, 5, 8, 69, 71], "scikit": 69, "scipi": [0, 1, 8, 31, 37, 60, 71, 73], "scope": 38, "scrap": [8, 29], "scratch": [29, 37, 60, 62], "screen": [29, 60, 62, 68, 74], "script": [1, 3, 5, 69], "sdefault": 72, "se": [6, 65, 67], "search": [3, 8, 17, 33, 44, 53, 60, 66, 71], "searchsort": 37, "season": 63, "sec": 73, "secant": 66, "second": [5, 6, 11, 25, 30, 31, 37, 40, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 68, 71, 72, 73, 74, 75, 76], "section": [3, 4, 5, 8, 35, 46, 57, 63, 64, 69, 74, 76], "sector": 37, "secular": 74, "secur": [60, 67, 68, 70], "see": [0, 1, 3, 4, 5, 6, 7, 8, 11, 15, 16, 20, 27, 29, 31, 32, 36, 37, 40, 42, 46, 47, 48, 49, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 76, 77], "seed": [0, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 33, 35, 41, 60], "seek": [8, 10, 75], "seem": [1, 15, 52, 64, 66, 70], "seen": 5, "segment": [30, 37, 48, 53, 63, 66, 67], "seiz": 49, "select": [12, 74], "select_fast_solv": 16, "select_risky_solv": 24, "self": [8, 11, 13, 14, 15, 18, 20, 22, 26, 29, 31, 37, 40, 41, 42, 44, 61, 65, 76], "semi": [53, 67], "semidefinit": 31, "semin": [4, 65], "send": [1, 10, 65], "sens": [5, 6, 10, 14, 26, 45, 59, 63, 71, 74], "sensibl": [1, 6], "sensit": 71, "sent": [29, 65], "sentenc": 1, "separ": [0, 4, 6, 12, 52, 53, 61, 69], "sequenc": [0, 6, 8, 13, 14, 15, 18, 22, 29, 30, 31, 35, 40, 41, 45, 49, 50, 53, 61, 62, 63, 64, 67, 68, 73, 76], "sequence_jacobian": [0, 64, 71, 73], "sequencespacejacobian": [0, 71, 72, 73, 74, 75, 76], "sequent": 69, "sequenti": [6, 52], "sequentialsharefunc": 56, "sequentialsharefuncadj": 56, "seri": [0, 6, 66, 68, 76], "serial": [29, 44, 45, 53, 67], "serialgroexampl": 51, "serialrexampl": 51, "serialunemploymentexampl": 51, "seriou": [46, 67, 71], "serv": [1, 14, 60], "servic": 1, "set": [0, 1, 3, 4, 5, 6, 8, 11, 12, 16, 17, 20, 21, 24, 25, 29, 35, 37, 38, 40, 41, 46, 47, 48, 50, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74], "set_mani": 29, "set_titl": [59, 71, 73], "set_verbosity_level": 29, "set_xlabel": [59, 71, 73], "set_xlim": 59, "set_ylabel": [59, 71, 73], "settl": 68, "setup": [3, 4, 45, 47, 48, 49, 64, 70], "setup_latex_env_notebook": 42, "seven": [63, 65, 69], "sever": [0, 5, 8, 35, 42, 45, 49, 51, 52, 53, 60, 62, 63, 67, 69, 71, 74], "sgu_solv": 0, "sha": [25, 59], "shake": 65, "shape": [6, 8, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 31, 32, 33, 35, 37, 49, 60, 63, 66, 68, 72, 74], "share": [0, 4, 5, 6, 8, 12, 17, 21, 24, 25, 35, 37, 38, 40, 47, 48, 49, 52, 53, 56, 58, 59, 60, 63, 65, 66, 67, 68, 73, 76], "share_adj": 21, "sharecount": [12, 21, 24, 25], "sharefunc": [24, 54, 55, 56, 59], "sharefunc_adj": [25, 59], "sharefunc_fxd": 25, "sharefuncadj": [21, 54, 55, 56], "sharefuncfxd": 21, "sharegrid": [12, 21, 24, 25], "sharegrid_default": [21, 24], "sharelimit": [12, 21, 24, 25, 35, 54, 56], "sharemax": 25, "sharenow": [21, 24], "sharex": [71, 73], "she": 63, "shelf": 60, "shift": [12, 25, 32, 37, 66], "shifter": [12, 40, 52, 53, 67], "shk": 50, "shk_dstn": 20, "shk_param": 20, "shk_prb": 42, "shk_prob": 35, "shk_std": 71, "shk_val": 35, "shkdstn": 35, "shkset": 17, "shock": [0, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 37, 38, 41, 42, 44, 46, 49, 50, 51, 58, 60, 62, 63, 66, 69, 70, 73, 75], "shock_data": 38, "shock_histori": [0, 41, 61, 68], "shock_var": 29, "shock_vars_": [4, 11, 14, 15, 18, 19, 22, 24, 25, 26, 29, 61], "shockdstn": [12, 14, 21, 24, 25, 35, 46], "shocks_b": 71, "shoot": 26, "short": [1, 6, 23, 40, 58, 59, 63, 66, 69, 74], "shorter": [4, 60, 71], "shorthand": 62, "shorthorizonag": 63, "shortli": 8, "should": [0, 1, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75], "shouldn": 6, "show": [1, 4, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 63, 67, 68, 70, 71, 72, 73, 74, 76], "show_irf": [71, 73], "shown": [26, 42, 45, 49, 57, 63, 65, 70, 74], "shrink": [33, 35, 60, 64, 67], "side": [0, 6, 53, 65, 74], "sigma": [31, 35, 37, 52, 60, 66, 73], "sigma_": [47, 48, 52, 57, 64, 69, 75], "sigma_h": 52, "sigma_perm": 35, "sigma_tran": 35, "sigma_z": 75, "sign": [1, 6], "signific": [0, 8, 48, 60, 66], "significantli": [0, 1, 37, 67, 76], "sim": [12, 13, 14, 15, 17, 19, 21, 22, 24, 35, 45, 46, 47, 48, 51, 52, 53, 57, 58, 63, 64, 66, 68, 69, 74, 75], "sim_birth": [0, 11, 13, 14, 15, 18, 21, 23, 25, 26, 29, 41, 68], "sim_common_rriski": [0, 12, 21, 24, 25], "sim_death": [11, 14, 15, 18, 26, 29, 41], "sim_one_period": [25, 29, 41, 61], "sim_period": [29, 41], "simdeath": 0, "similar": [1, 4, 51, 57, 60, 63, 69], "similarli": 0, "simpl": [1, 6, 8, 14, 34, 35, 38, 40, 44, 46, 51, 52, 53, 57, 60, 61, 62, 63, 64, 65, 68, 71, 72, 73, 74], "simple_model": [3, 5], "simpler": [6, 62, 74], "simplest": [3, 5, 6, 62, 64], "simplex": [8, 33, 60], "simpli": [6, 8, 10, 15, 16, 21, 24, 29, 35, 37, 42, 46, 47, 49, 52, 60, 61, 62, 64, 65, 66, 67, 68, 71, 74, 75], "simplic": [49, 66], "simplif": 0, "simplifi": [0, 4, 6, 8, 52, 63, 65, 66, 74, 75], "simul": [0, 2, 5, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 31, 35, 42, 44, 45, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 74], "simulate_dynam": 38, "simulation_default": [13, 15, 17, 21, 22, 24], "simulationparam": 49, "simult": 0, "simultan": [8, 52, 56, 60], "sinc": [1, 30, 49, 54, 56, 66, 67, 68, 70, 73, 74, 76], "singl": [0, 1, 4, 6, 8, 11, 15, 16, 21, 23, 24, 29, 31, 33, 35, 42, 46, 47, 49, 52, 57, 60, 61, 62, 63, 64, 65, 67, 74, 75, 76], "singleton": [63, 74], "singular": 0, "sit": [34, 68], "site": 4, "situat": [6, 29, 60, 62, 65, 66], "six": 6, "size": [1, 4, 6, 11, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 29, 31, 33, 35, 37, 41, 46, 49, 51, 53, 57, 60, 66, 68, 74, 76], "sj": 71, "skeptic": 74, "ski": 63, "skill": [64, 69], "skim": 69, "skip": [3, 60, 62, 74], "slacalek": 65, "slice": [0, 74], "slice_avg": 42, "slice_nam": 59, "slide": 71, "slight": [14, 18, 20, 49], "slightli": [20, 37, 46, 52, 54, 56, 66, 67, 69, 75], "slip": 64, "slope": [4, 11, 16, 37, 44, 47, 48, 53, 63, 64, 66], "slope_limit": [37, 39, 66], "slope_prev": 44, "slow": [4, 31], "slower": [4, 37, 53, 67, 68], "small": [0, 1, 4, 8, 11, 26, 47, 48, 52, 61, 64, 66, 68, 69, 71, 74, 75], "smaller": [48, 71], "smallest": 61, "smallopeneconomi": [11, 65, 67, 69], "smallopenmarkoveconomi": 11, "smart": 29, "smith": [0, 2, 44, 65, 69], "smooth": 63, "smoothli": 37, "snippet": 1, "so": [0, 1, 3, 5, 6, 8, 10, 11, 14, 17, 21, 29, 31, 38, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75], "social": [60, 67, 68], "softwar": [1, 5, 25, 77], "sol": 73, "sole": [1, 60, 63], "solid": 68, "solut": [0, 1, 3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 29, 37, 42, 44, 45, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 75, 76], "solution_cycl": 29, "solution_last": 29, "solution_next": [8, 12, 14, 17, 25, 61, 63], "solution_now": [12, 14, 17], "solution_termin": [8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 60, 62, 63, 74], "solution_terminal_class": 16, "solv": [0, 1, 3, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 37, 41, 42, 44, 46, 50, 54, 55, 56, 58, 59, 61, 62, 63, 66, 67, 68, 69, 70, 72, 74], "solve_ag": 29, "solve_agg_shocks_market": 44, "solve_agg_shocks_micro": 44, "solve_consaggmarkov": 11, "solve_conslaborintmarg": 17, "solve_consrepag": 23, "solve_consrepagentmarkov": 23, "solve_impulse_linear": [71, 73], "solve_krusell_smith": [4, 44], "solve_krusellsmith": 4, "solve_markov_market": 44, "solve_markov_micro": 44, "solve_one_cycl": 29, "solve_one_period": [8, 16, 24, 65, 69], "solve_one_period_consbasichealth": [14, 46], "solve_one_period_consgenincprocess": 13, "solve_one_period_consindshock": [15, 20], "solve_one_period_conskinkedr": 15, "solve_one_period_conskinkypref": 22, "solve_one_period_consmarkov": 18, "solve_one_period_consmedextmarg": 52, "solve_one_period_consmedshock": [19, 53], "solve_one_period_conspf": 15, "solve_one_period_consportfolio": 21, "solve_one_period_consportfoliowarmglow": 12, "solve_one_period_consprefshock": 22, "solve_one_period_conswarmbequest": 12, "solve_poly_st": 44, "solve_riskycontrib_cn": 25, "solve_riskycontrib_reb": 25, "solve_riskycontrib_sha": 25, "solve_steady_st": 71, "solveconsaggshock": 11, "solveconsgenincprocess": 45, "solveconsindshock": 47, "solveconskinkedr": 48, "solveconskinkypref": 57, "solveconsmarkov": 51, "solveconsperfforesight": 49, "solveconsportfolio": 0, "solveconsprefshock": 57, "solveconsrepag": 58, "solveoneperiod": 8, "solver": [0, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 37, 42, 52, 57, 60, 62, 63, 64, 66, 67, 71, 74], "solver_class": 29, "solver_funct": 29, "solveriskycontrib": 25, "solving_default": [13, 15, 17, 21, 22, 24], "solvingmicrodsop": [0, 5, 34, 42, 47, 63], "some": [0, 1, 3, 5, 6, 8, 10, 11, 14, 25, 29, 37, 45, 46, 47, 48, 49, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74], "some_nd_funct": 66, "somebodi": 5, "somecombin": 15, "somehow": [61, 65], "someon": [6, 62, 63, 67, 69, 71], "someth": [1, 6, 10, 49, 60, 61, 62, 63, 64, 66, 68, 69, 74], "sometim": [0, 5, 6, 11, 31, 52, 53, 60, 62, 63, 66, 67, 68, 74], "sometyp": 70, "somewhat": [1, 46, 52, 60, 66, 68, 74], "somewher": [3, 6], "song": [0, 68], "soon": [1, 46, 53, 60, 68], "sooner": 69, "sophist": 69, "sorri": 1, "sort": [1, 3, 26, 31, 42, 48, 49, 50, 68], "sort_bi": 42, "sought": 65, "sourc": [0, 1, 3, 5, 8, 10, 29, 35, 67, 74, 77], "sow": [8, 29, 65], "sow_var": [4, 8, 11, 29, 65], "sown": 29, "space": [0, 3, 6, 8, 24, 25, 29, 31, 35, 37, 42, 45, 46, 47, 49, 53, 57, 61, 62, 63, 64, 66, 67, 68, 73], "span": 47, "spare": 8, "spars": [8, 47, 53], "spawn": 60, "speak": [8, 10, 65, 67], "spec": [0, 15, 29], "special": [0, 4, 5, 13, 29, 42, 45, 61, 63, 65, 66, 69], "specialtyp": 62, "specif": [0, 1, 2, 4, 5, 8, 10, 18, 20, 26, 29, 35, 37, 45, 46, 47, 52, 54, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75], "specifi": [0, 1, 6, 8, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 26, 29, 31, 33, 34, 35, 41, 42, 46, 47, 48, 49, 51, 52, 53, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76], "sped": 16, "speed": [0, 4, 10, 12, 16, 46, 69, 76], "spell": [4, 51], "spellmeanb": 4, "spellmeang": 4, "spend": [10, 19, 46, 52, 53, 64, 67, 68], "spent": [17, 53, 67], "sphinx": [0, 1], "spider": 1, "spiel": 5, "spline": [0, 8, 12, 13, 15, 19, 21, 22, 24, 37, 45, 47, 48, 51, 53, 57, 63], "splint": 66, "split": [29, 52, 53], "spyder": [3, 5], "sq": 44, "sqrt": [52, 59, 66], "squar": [20, 64, 74], "squint": 72, "ss": [71, 73, 75, 76], "ss_dif": 73, "ss_rank": 71, "ss_tank": 71, "ssa": 0, "ssatool": [60, 68], "ssh": 3, "ssj": [0, 64, 72], "ssj_a_r": 72, "ssj_a_sigma_psi": 72, "ssj_a_u": 72, "ssj_c_r": [72, 74], "ssj_c_sigma_psi": 72, "ssj_c_u": 72, "ssj_exampl": 0, "ssj_explan": [4, 75], "ssj_k_r": 74, "ssj_k_sigma_psi": 74, "stabil": 4, "stabl": [0, 8, 26, 31], "stack": 75, "stae": 69, "stag": 25, "stage": [25, 68], "stage_sol": [25, 59], "stai": [44, 51], "stand": [23, 29, 58], "standalon": [0, 31], "standard": [0, 1, 6, 10, 12, 19, 22, 26, 29, 31, 35, 37, 41, 45, 47, 48, 49, 52, 53, 57, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76], "star": 62, "start": [0, 2, 3, 6, 14, 25, 29, 30, 33, 35, 42, 47, 48, 53, 58, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77], "start_tim": [50, 51, 55], "stat": [0, 31, 42, 69], "state": [0, 4, 6, 8, 11, 13, 14, 15, 17, 18, 21, 23, 24, 25, 26, 29, 31, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 62, 65, 66, 68, 69, 74], "state_dstn": 74, "state_grid": 74, "state_now": [0, 29, 48, 50, 61, 65, 68, 76], "state_prev": [0, 49], "state_var": [4, 13, 14, 15, 18, 19, 25, 26, 29, 41, 61], "statecount": [44, 51], "statement": [0, 1, 6, 66], "static": [6, 29, 65, 67], "stationari": 45, "statist": [8, 42, 68, 70, 74, 75], "statu": [70, 73], "std": [12, 13, 15, 17, 19, 21, 22, 24, 31], "std_lognorm": 31, "std_normal": 31, "stdev": [47, 48, 49, 52, 64, 68, 72], "steadi": [4, 26, 35, 47, 49, 68, 69, 74], "steadili": [49, 68], "steady_state_dstn": 71, "steadyhank": 73, "steadystate_dict": [71, 73], "steadystatedict": [71, 73], "step": [0, 1, 4, 8, 12, 38, 42, 47, 49, 52, 53, 60, 62, 64, 65, 66, 69, 70], "steve": 62, "sticki": [56, 59, 71], "stickyconsportfoliodict": 54, "stickytyp": [54, 56], "still": [0, 1, 10, 11, 47, 52, 53, 61, 66, 67, 73], "stochast": [0, 5, 6, 10, 15, 18, 25, 31, 42, 46, 52, 64, 69, 74, 76], "stock": [0, 3, 11, 26, 35, 53, 67, 69, 73, 74], "stone": [12, 40, 60], "stone_geari": 40, "stonegearycrrautil": 40, "stonegearycrrautility_inv": 40, "stonegearycrrautility_invp": 40, "stonegearycrrautilityp": 40, "stonegearycrrautilityp_inv": 40, "stonegearycrrautilityp_invp": 40, "stonegearycrrautilitypp": 40, "stop": [8, 61, 63, 67, 68, 71], "stop_dead": 6, "store": [0, 1, 3, 4, 5, 6, 8, 11, 15, 18, 20, 21, 22, 29, 31, 37, 41, 46, 47, 49, 51, 53, 60, 61, 62, 64, 65, 68, 71, 73, 74, 76], "str": [15, 29, 31, 38, 41, 42, 44, 45, 50, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 68, 72, 74, 76], "straight": 31, "straightforward": [46, 52, 60, 65, 66], "strang": 67, "straub": [4, 72, 74], "stream": 49, "strict": [41, 66], "strictli": [6, 14, 46, 52, 60, 65, 66, 67], "string": [0, 6, 8, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 29, 33, 34, 38, 42, 49, 50, 60, 61, 62, 65, 68, 74], "strip": 11, "stroke": 53, "strong": 5, "strongli": [1, 5, 8, 61], "structur": [0, 4, 5, 6, 8, 10, 22, 25, 29, 33, 34, 46, 53, 61, 62, 64, 65, 67, 68, 70, 71, 74, 77], "stuck": 10, "student": [5, 10, 67, 77], "studi": [5, 64, 75], "stuff": 68, "style": [0, 1, 6, 11, 13, 29, 35, 44, 45, 68], "styliz": 67, "sub": [6, 12, 30, 40, 61, 66, 69], "subclass": [0, 4, 6, 8, 11, 17, 29, 31, 35, 41, 45, 49, 54, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74], "subdirectori": [3, 69], "subfold": 8, "subject": [11, 26, 41, 45, 46, 47, 51, 53, 58, 63, 66, 68, 69], "submit": 1, "submodel": 0, "submodul": [0, 1, 3, 34, 68], "subplot": [71, 73], "subroutin": [8, 37], "subscript": [6, 49, 53, 74, 75], "subsect": 63, "subseqeunt": 54, "subsequ": [1, 6, 8, 29, 41, 48, 67, 69], "subset": [8, 29, 41, 65], "subsidiari": 53, "substant": [1, 3], "substanti": 70, "substitut": [40, 46, 47, 53, 60, 73], "subtract": 66, "suc": 33, "succe": 60, "succeed": [12, 14, 17, 29, 35, 60, 61, 62, 67], "success": [8, 29, 63, 65, 73, 74], "successfulli": [3, 5, 33, 49, 62], "successor": 46, "suddenli": 68, "suffer": [46, 52, 67], "suffici": [8, 11, 14, 46, 60, 63, 65, 68, 74, 75], "suffix": [1, 66], "suggest": [1, 53, 64, 66, 69, 70], "suit": [1, 4, 5], "sum": [6, 17, 33, 35, 52, 53, 60, 66, 68, 71, 75, 76], "sum_": 46, "summar": [1, 68], "summari": [1, 6, 62], "superced": 62, "superclass": [8, 29, 60, 64, 66], "supersed": 51, "supnorm": 8, "suppli": [4, 8, 11, 17, 20, 23, 35, 71, 73, 75], "support": [0, 3, 5, 6, 11, 40, 41, 60], "suppos": [6, 8, 47, 49, 51, 53, 61, 62, 63, 64, 65, 66, 68, 74], "suppress": [0, 70], "supremum": [15, 16, 60], "surd": [45, 46, 47, 48, 49, 51, 52, 53, 57, 62], "sure": [1, 3, 5, 6, 8, 14, 18, 29, 69, 73], "suriv": 63, "surpris": [64, 65, 66], "surprisingli": 69, "survior": 74, "surviv": [0, 3, 5, 6, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 29, 35, 45, 46, 47, 48, 49, 51, 52, 53, 60, 61, 63, 64, 67, 68, 72, 73, 74, 76], "survivor": [6, 11, 63, 68, 74], "sw": 73, "swap": [10, 62, 68, 71], "swap_param": 72, "switch": [3, 26, 51, 75], "swp": 0, "sy": 69, "symbol": [15, 38, 62, 68, 74], "symmetr": [31, 35], "sympi": 6, "symul": [6, 29, 61, 68, 74], "sync": [0, 1], "synonym": 62, "syntax": [0, 6, 8, 29, 40, 66, 68, 74], "sypder": 3, "system": [0, 1, 2, 3, 5, 29, 34, 37, 53, 60, 67, 68, 71, 74, 75], "systemat": [38, 69], "szeidl": 15, "t": [0, 1, 3, 6, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 29, 31, 35, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "t0": [46, 52, 54, 56, 59, 68, 72, 74], "t1": [46, 52, 54, 56, 59, 68, 72, 74], "t_": [35, 68, 74], "t_age": [0, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 45, 47, 48, 49, 54, 59, 61, 68, 74, 76], "t_cycl": [0, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 45, 47, 48, 49, 50, 54, 56, 59, 60, 61, 62, 68, 70, 74, 76], "t_discard": 4, "t_end": [44, 50, 53, 57, 58], "t_i": 68, "t_mat": 76, "t_max": [72, 74], "t_now": 70, "t_plot": [71, 73], "t_retir": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 59, 60, 62, 63, 70, 73, 74, 76], "t_seq": [6, 68, 74], "t_sim": [4, 6, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 68, 70, 71, 73, 76], "t_ss": 71, "t_start": [44, 50, 53, 57, 58], "tabl": [0, 45, 47, 48, 49, 57, 60, 64, 69], "tac": 38, "tack": 52, "tackl": 64, "tail": [19, 22, 35, 57, 66], "tailor": [1, 5], "take": [0, 3, 5, 6, 8, 11, 14, 21, 23, 25, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 44, 46, 47, 48, 52, 53, 54, 56, 58, 59, 63, 64, 65, 66, 68, 69, 74, 75, 76], "taken": [40, 67, 73], "talk": [1, 60], "target": [11, 15, 23, 26, 29, 34, 61, 71, 73], "target_dir": 42, "target_path": 34, "targets_ra_ss": 71, "targets_td": 71, "task": [0, 1, 8, 63, 69], "tast": [0, 30, 37], "tation": 29, "tau": [25, 59], "tauchen": [0, 31], "tax": [20, 25, 35, 45, 47, 48, 59, 67, 71, 73], "tax_rat": [20, 35, 45, 47, 48, 71, 73, 76], "tb": 26, "tbd": 0, "teach": [31, 63, 67], "team": [1, 65], "teardown": 4, "technic": [5, 65, 71], "techniqu": [4, 5, 60, 66], "technologi": 67, "technologist": 1, "tediou": [6, 74], "tell": [0, 6, 49, 53, 61, 62, 63, 64, 68, 71], "temp": 76, "temp_dict": [55, 71], "temp_func": 60, "tempag": [71, 73], "templat": 0, "temporari": [11, 15, 18, 22, 73, 74], "temporarili": 1, "tempt": 74, "ten": 63, "tend": 71, "tensor": 37, "term": [12, 29, 31, 42, 46, 47, 52, 53, 63, 64, 65, 66, 67, 71, 74], "term_ag": 29, "termin": [0, 3, 5, 8, 11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 25, 29, 33, 35, 42, 46, 49, 52, 60, 61, 62, 63, 67, 74, 76], "test": [0, 3, 5, 6, 8, 15, 40, 42, 54, 57, 70], "test_ag": 4, "test_consaggshockmodel": [1, 4], "test_latex_instal": 42, "testtyp": 68, "text": [6, 7, 12, 13, 14, 15, 17, 19, 21, 22, 24, 33, 35, 42, 46, 47, 48, 49, 52, 53, 63, 64, 66, 68, 74, 75], "textbf": [12, 19, 22, 35, 64, 74, 75], "texttt": [45, 46, 47, 51, 53, 57, 58, 69], "textual": 67, "tfp": [35, 40, 74, 75], "th": [20, 25, 31, 32, 33, 37, 50, 66], "than": [0, 1, 5, 6, 8, 12, 13, 14, 15, 17, 19, 33, 37, 38, 40, 41, 45, 47, 48, 49, 51, 52, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74], "thank": [1, 57], "that_dict_nam": 42, "thei": [0, 1, 3, 5, 6, 8, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 29, 35, 37, 38, 41, 44, 45, 46, 47, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75], "them": [0, 1, 3, 5, 6, 8, 11, 14, 25, 29, 31, 32, 38, 42, 46, 49, 52, 53, 61, 63, 64, 65, 66, 67, 68, 69, 71, 74], "themselv": [8, 65], "theorem": 75, "theoret": [3, 5, 15, 48, 54, 56, 67], "theori": [35, 48, 64, 69], "therefor": [1, 3, 57, 76], "thereof": 35, "thet": 25, "theta": [12, 13, 15, 17, 19, 21, 22, 24, 35, 47, 48, 51, 53, 58, 60, 64, 69, 74, 75], "theta_": [12, 13, 15, 17, 19, 21, 22, 24, 45, 47, 48, 51, 53, 57, 58, 63, 64, 68, 69, 75], "theta_t": [35, 45, 52, 53, 58, 64, 68, 69, 74], "thi": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77], "thing": [1, 6, 11, 34, 60, 61, 62, 64, 65, 66, 67, 68, 71], "think": [1, 60, 64, 67, 69, 71, 74], "third": [11, 25, 37, 48, 66], "this_param": 6, "thistyp": [29, 62, 74], "those": [0, 1, 3, 6, 8, 10, 11, 18, 26, 29, 46, 48, 49, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74], "though": [46, 63], "thought": [42, 76], "thread": [8, 29, 60], "three": [0, 1, 6, 8, 11, 15, 16, 23, 25, 29, 37, 42, 45, 46, 48, 49, 60, 62, 63, 69, 71, 74, 76], "thrill": 1, "through": [0, 1, 3, 4, 5, 6, 8, 14, 29, 49, 53, 61, 62, 65, 66, 69, 77], "throughout": [1, 8, 66, 67, 68], "throw": [0, 65, 66, 70, 74], "thrown": 63, "thu": [5, 6, 8, 11, 26, 29, 35, 46, 47, 48, 49, 52, 53, 60, 61, 62, 65, 66, 67, 68, 69, 74, 75, 76], "ti": 63, "tight": 74, "tight_layout": [71, 72, 73, 74], "tightli": 74, "tile": 59, "time": [0, 1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 33, 35, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 67, 68, 70, 72, 73, 74, 76], "time_inv": [8, 24, 29, 51, 61, 63], "time_inv_": [4, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 29, 61], "time_param": [54, 68], "time_var": 29, "time_vari": [8, 24, 29, 51, 61, 63], "time_vary_": [13, 14, 15, 17, 18, 19, 22, 24, 25, 29, 61], "timestonest": [0, 20, 42, 76], "timevaryingdiscretedistribut": [0, 31], "tin": 53, "tini": [52, 71], "tinker": 34, "tion": [15, 16, 35], "titl": [1, 3, 4, 25, 46, 50, 52, 53, 54, 59, 60, 71, 72, 73, 74, 76], "to_dict": 29, "to_namedtupl": 29, "todai": [35, 53, 67], "todo": [16, 23, 26, 31, 38, 40, 41], "togeth": [8, 10, 42, 53, 60, 62, 63, 64, 66, 69], "toggl": 51, "tokuoka": 65, "told": [10, 69], "toler": [4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 33, 59, 60, 63, 65, 72], "tolist": 44, "too": [48, 60, 62, 66, 67], "took": [44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 68, 72, 74], "tool": [0, 1, 3, 4, 5, 10, 33, 35, 38, 42, 45, 46, 60, 63, 67, 68, 69, 70, 71, 74, 77], "toolkit": [0, 1, 4, 5, 42, 64, 69, 70, 73, 75, 77], "top": [1, 3, 6, 8, 29, 31, 42, 47, 56, 59, 64, 66, 67, 71, 74], "top_x": 59, "topic": [60, 64, 69], "total": [4, 6, 8, 19, 35, 37, 46, 49, 51, 53, 60, 63, 71, 72, 74, 75], "tottim": 42, "toward": [5, 13, 25, 35, 45, 71], "tower": 10, "track": [0, 4, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 29, 41, 45, 49, 61, 65, 68, 70, 74, 76], "track_var": [4, 6, 8, 12, 13, 14, 15, 17, 19, 21, 22, 24, 29, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 65, 68, 70, 76], "tracker": 1, "tractabl": [26, 67], "tractablebufferstock": 26, "tractablebufferstockconsumertyp": [62, 63], "tractablebufferstockmodel": [8, 28], "tractableconsumersolut": 26, "tractableconsumertyp": [8, 26, 67, 69], "tradit": [4, 26], "tragic": 1, "train": [4, 69], "tran": 42, "tran_matrix": 76, "tran_shk": 42, "tranmatrix": [42, 76], "trans_arrai": 74, "trans_matrix": 31, "transform": [0, 8, 29, 69], "transhk": [6, 11, 12, 13, 15, 17, 18, 19, 21, 22, 24, 25, 35, 51, 61, 63, 68, 70, 74], "transhkaggcount": 11, "transhkaggdstn": 11, "transhkaggnow": 11, "transhkaggstd": [11, 44], "transhkcount": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 62, 64, 73, 74, 76], "transhkdstn": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 52, 53, 61, 62, 63, 74], "transhkgrid": [17, 50], "transhkgridterm": 50, "transhknow": [13, 15, 23], "transhkset": 50, "transhkstd": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 59, 60, 62, 63, 64, 72, 73, 74, 76], "transhkstd_coeff": 35, "transit": [0, 4, 13, 14, 15, 18, 20, 23, 26, 29, 31, 35, 38, 42, 46, 47, 51, 52, 62, 73, 74], "transition_matrix": [20, 31], "transition_matrix_exampl": 76, "transitori": [0, 6, 8, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 35, 42, 45, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 63, 64, 66, 68, 69, 71, 73, 74, 75, 76], "translat": [1, 10, 45, 66], "transmit": 69, "transpar": 5, "transshk": 67, "transtion": 0, "trauma": 10, "travi": 0, "treat": [1, 6, 8, 11, 14, 35, 52, 53, 60, 63, 64, 65, 74], "treatment": [48, 67], "trend": 74, "tri": [1, 29, 37, 62, 65, 66], "triangl": [42, 51, 64], "triangle_": 51, "triangle_kernel": 42, "triangul": 46, "triangular": 65, "trick": [10, 66, 69, 74], "trickier": [52, 67], "trigger": 1, "trilinear": 37, "trilinearinterp": [37, 66], "trilinearinterponinterp1d": [37, 66], "trilinearli": 37, "trivari": 35, "trivia": 67, "trivial": [0, 8, 11, 13, 14, 15, 19, 22, 23, 24, 25, 26, 35, 37, 42, 45, 47, 49, 52, 53, 57, 60, 61, 62, 63, 67, 74, 75], "troubl": 0, "tructor": 29, "true": [0, 4, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 37, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 76], "truli": [6, 63, 76], "try": [1, 33, 60, 61, 62, 63, 64, 65, 66, 74, 77], "tshkemp": 47, "tshkemp_t": 47, "tupl": [15, 29, 30, 31, 38, 40, 74], "turn": [0, 6, 8, 14, 44, 47, 49, 52, 53, 62, 65, 66, 71, 72, 74], "turnov": [29, 41], "tutori": [0, 4, 31, 63, 64, 74], "twenti": 60, "twist": [68, 74], "two": [0, 1, 4, 5, 6, 8, 10, 11, 12, 19, 22, 24, 25, 30, 35, 37, 40, 44, 45, 46, 47, 48, 49, 52, 53, 54, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 74], "txt": [0, 1, 3, 8, 20, 33], "type": [0, 1, 3, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 59, 63, 64, 66, 68, 70, 71, 72, 73, 74, 76], "typeerror": [29, 62], "typic": [6, 35, 41, 46, 52, 65, 66, 74], "typo": [0, 77], "u": [0, 1, 12, 13, 14, 15, 17, 21, 22, 24, 37, 40, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 60, 63, 64, 66, 67, 68, 69, 70, 75], "u_": [12, 17, 75], "u_inv": 37, "u_t": [17, 19], "uat": 37, "ubiquit": 5, "uc": 40, "uchicago": 4, "ugli": 10, "ultim": 10, "uncertainti": [15, 16, 35, 46, 47, 48, 49, 63, 67, 69, 70, 71, 74], "uncertin": 69, "unchang": 0, "uncommon": [8, 64, 66], "uncondit": [31, 52, 57, 66], "unconstrain": [47, 53, 63], "unconvent": 6, "undeclar": 6, "undefin": [15, 16, 17], "under": [0, 1, 7, 15, 34, 53, 63, 70, 75], "underbrac": [47, 52], "undergrad": 1, "underl": 31, "underli": [0, 5, 6, 8, 31, 37, 47, 49, 64, 66, 74], "underlin": [12, 13, 15, 19, 21, 22, 24, 45, 47, 48, 49, 51, 53, 57, 63, 64, 66, 68], "underrepres": 57, "underscor": [1, 61], "underset": 64, "understand": [1, 3, 5, 8, 69, 74, 77], "understood": [8, 10, 69], "undo": 60, "unemp": [35, 74], "unemp_length": 51, "unemploi": [26, 35, 47, 48, 51, 64, 67, 74], "unemploy": [0, 4, 26, 35, 44, 45, 46, 47, 48, 63, 64, 66, 67, 69, 71, 73, 76], "unemployed_income_dist": 51, "unempprb": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 45, 46, 47, 48, 51, 58, 62, 63, 64, 71, 72, 73, 74, 76], "unempprbret": [11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 45, 47, 48, 62, 63, 73, 74, 76], "unexpect": [1, 6, 68], "unfamiliar": [5, 8, 10], "unfortun": [11, 66], "unicod": 15, "uniform": [0, 14, 31, 46, 65], "uniformli": [24, 25, 35, 42, 46], "unimpress": 64, "unind": 62, "uniniti": 6, "uninstal": 3, "unint": 12, "unintend": 0, "union": [29, 31], "uniqu": [8, 48, 62, 70], "unit": [0, 1, 5, 17, 19, 24, 25, 75, 76], "unitari": 57, "unitless": 8, "unittest": [1, 3], "univari": [8, 14, 31, 60, 67], "univariate_dstn": 31, "univers": [60, 61, 68, 69, 74], "unknown": [53, 71, 73], "unknowns_ra_ss": 71, "unknowns_ta_ss": 71, "unknowns_td": 71, "unless": [1, 3, 57, 64], "unlik": [6, 8, 13, 14, 19, 31, 41, 52, 53, 60, 65, 66, 67], "unnam": [11, 40, 42], "unnecessarili": 6, "unnorm": 76, "unpack": [0, 6, 15, 29, 44, 50, 55, 60, 61, 63, 70], "unpack_cfunc": 15, "unpack_solut": 29, "unpackcfunc": 0, "unreason": 60, "unsuccess": 33, "unsurprisingli": [23, 58], "until": [3, 4, 5, 8, 17, 25, 26, 29, 60, 63, 64, 65, 67], "unto": 6, "untreat": 52, "unused_param": 25, "unusu": [0, 6, 60, 63, 64, 67, 68], "up": [0, 1, 3, 4, 5, 6, 8, 12, 16, 37, 40, 46, 48, 49, 52, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77], "up_inv": 37, "uparrow": 45, "upcom": 11, "updat": [0, 1, 3, 4, 8, 11, 12, 13, 17, 21, 23, 24, 29, 33, 42, 44, 45, 51, 54, 55, 56, 60, 61, 64, 65, 68, 69, 72, 74], "update_dynam": 29, "update_income_process": [13, 15, 45, 76], "update_plvlgrid": 13, "update_plvlnextfunc": 13, "update_polar": 37, "update_solution_termin": 8, "update_tim": 24, "updateafunc": 0, "updateassetsgrid": 45, "updateincomeprocess": 0, "updateplvlgrid": 45, "updateplvlnextfunc": 45, "upon": [1, 12, 38, 64], "upper": [8, 14, 30, 35, 37, 42, 45, 49, 52, 53, 60, 61, 66], "upper_envelop": 30, "upperenvelop": 37, "upshot": 53, "upsid": 74, "upstream": 1, "urat": 4, "urate_bad": 51, "urate_good": 51, "urateb": 4, "urateg": 4, "url": [3, 25], "us": [0, 1, 4, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 77], "us_ssa": [60, 68], "usabl": 75, "usag": [0, 8, 68, 74], "use_default": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 62], "use_infimum": 0, "user": [0, 1, 5, 6, 8, 29, 31, 34, 35, 37, 42, 44, 45, 47, 49, 50, 52, 53, 57, 60, 61, 62, 63, 64, 68, 74], "usernam": 1, "userwarn": 49, "usual": [1, 6, 8, 25, 29, 34, 35, 52, 53, 58, 60, 61, 62, 63, 65, 66, 67, 68, 71, 74], "usualt": 46, "util": [0, 1, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 26, 28, 29, 35, 37, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 68, 69, 70, 75, 76], "utilityfunccobbdougla": [0, 40], "utilityfunccobbdouglascrra": [0, 40], "utilityfuncconstelastsub": [0, 40], "utilityfunccrra": [0, 40, 60], "utilityfuncstonegeari": 40, "utilityfunct": 40, "utilti": 40, "uv": 4, "v": [1, 4, 5, 15, 17, 21, 37, 45, 46, 47, 52, 53, 55, 57, 59, 63, 65, 66, 68, 69], "v1": 25, "v_": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 63, 64, 66, 68, 75], "v_int": 30, "v_t": [12, 13, 14, 15, 17, 19, 21, 22, 24, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 63, 64, 66, 68], "vacil": 76, "vafac": 15, "vagu": 60, "val": [37, 38, 42], "valid": [0, 11, 28, 33, 48, 49, 51, 65, 66], "validli": 6, "valu": [0, 4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 46, 50, 52, 53, 54, 55, 60, 61, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 76], "valuabl": 67, "valuat": 66, "valueerror": 40, "valuefunc2d": 25, "valuefunc3d": 25, "valuefunccrra": [21, 37, 47, 49, 66], "vanish": [49, 71], "var": [47, 49, 63, 74], "var_attr": [31, 60], "var_nam": [31, 51, 60], "varepsilon": 69, "varepsilon_t": 69, "vari": [0, 4, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 29, 31, 35, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 63, 64, 67, 74, 76], "variabel": 38, "variabl": [0, 1, 3, 4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 37, 38, 41, 42, 45, 46, 47, 48, 49, 52, 53, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76], "variablelowerbound": 66, "variablelowerboundfunc2d": [37, 66], "variablelowerboundfunc3d": [37, 66], "variablelowerboundfunc4d": 66, "variablelowerboundfuncnd": 66, "varianc": [0, 31, 37, 74], "variant": [8, 51, 61], "variat": [1, 11, 12, 14, 15, 31, 37, 67, 68], "varieti": [0, 5, 8, 29, 60, 66, 69], "variou": [0, 1, 3, 5, 12, 15, 29, 35, 45, 50, 55, 60, 64, 65, 66, 74], "varnam": [29, 41], "varphi": [13, 35, 45], "varphi_t": 46, "varrho": 69, "vdot": 75, "ve": [1, 3, 5, 45, 47, 64], "vec_erg_dstn": 76, "vecdstn": 76, "vecdstn_fast": 76, "vector": [0, 6, 11, 14, 20, 30, 31, 33, 35, 41, 42, 53, 60, 65, 66, 68, 74, 76], "vel\u00e1squez": 25, "verb": [1, 48], "verbos": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 33, 44, 45, 50, 59, 73, 74], "verbosetyp": 60, "veri": [1, 6, 8, 11, 15, 16, 18, 22, 26, 35, 46, 47, 48, 49, 51, 52, 53, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75], "verifi": [1, 4, 10, 37, 48, 71, 74], "version": [0, 1, 3, 5, 7, 8, 11, 13, 15, 16, 20, 25, 31, 33, 35, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76], "versu": [6, 37, 54, 56], "vertic": [32, 33, 37, 64], "verystrangeag": 63, "verystrangedict": 63, "vfunc": [0, 14, 15, 17, 25, 37, 45, 47, 48, 49, 51, 53, 57, 61], "vfunc_adj": 25, "vfunc_fxd": 25, "vfuncadj": 21, "vfuncbool": [0, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45, 47, 48, 51, 53, 54, 57, 59, 63, 74], "vfuncfxd": 21, "vfuncnvr": [16, 37], "vfuncnvrsslop": 16, "vgrid": 53, "via": [3, 4, 8, 14, 74, 75], "victim": 69, "view": [1, 5, 29, 74], "vim": 0, "violat": 74, "virtual": [64, 75], "virtualenv": 1, "visibl": 48, "visibli": 66, "visit": [3, 4, 5, 12, 13, 14, 15, 17, 19, 21, 22, 24], "visualstudio": 3, "vnrm": 15, "vnrmp": 15, "vnrmpp": 15, "vnvr": 16, "vnvrsfunc": [14, 66], "vnvrsp": 16, "volatil": 67, "vowel": 6, "vp": [17, 50, 53], "vpfunc": [15, 17, 47, 49, 50, 53, 57, 61], "vpfuncadj": 21, "vpgrid": 53, "vpp": 37, "vppfunc": [15, 47, 49, 61], "vscode": [3, 5], "w": [1, 11, 14, 37, 46, 59, 61, 66, 70, 71, 73, 75], "w_": [58, 69, 75], "w_grid": 66, "w_list": 37, "w_n": 37, "w_slice": 59, "w_ss": 73, "w_t": [69, 75], "wa": [0, 1, 6, 8, 10, 14, 15, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "wage": [11, 14, 17, 20, 35, 46, 65, 67, 69, 71, 73, 76], "wagert": [14, 17], "wagerte_": 14, "wagerte_t": 50, "wagertecount": [14, 35, 46], "wagertedstn": [14, 35], "wagertemean": [14, 35, 46], "wagertestd": [14, 35, 46], "wai": [0, 1, 3, 5, 6, 8, 29, 31, 32, 34, 41, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74], "wait": [1, 66], "walk": [3, 4, 5, 13, 45], "want": [1, 3, 5, 6, 8, 29, 34, 35, 42, 47, 48, 49, 53, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77], "warm": [0, 12, 61], "warn": [0, 1, 29, 31, 37, 49, 64, 70], "warp": 37, "warrant": [8, 74], "wasn": 66, "wast": [1, 6, 66], "watson": 42, "wave": 68, "wavi": 68, "wdu9": [71, 76], "we": [0, 1, 3, 5, 6, 8, 10, 13, 15, 29, 31, 35, 37, 45, 46, 47, 48, 49, 52, 53, 54, 56, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "weak": 15, "wealth": [0, 4, 6, 11, 12, 15, 16, 18, 22, 49, 52, 54, 56, 61, 63, 64, 65, 68, 70], "wealthportfolio": 0, "wealthportfolioconsumertyp": 67, "wealthportfoliosolv": 0, "webpag": 69, "websit": [1, 3, 5, 8], "weed": [64, 71], "week": 1, "weibul": [0, 31], "weight": [0, 6, 11, 12, 32, 33, 42, 52, 66, 71, 74], "weird": 66, "weirder": 65, "welcom": 51, "well": [0, 1, 5, 6, 8, 11, 13, 14, 15, 17, 18, 19, 22, 26, 42, 45, 46, 47, 48, 49, 52, 53, 60, 61, 63, 64, 65, 66, 67, 69, 74], "went": [60, 62], "were": [0, 6, 10, 14, 42, 47, 48, 49, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74], "wether": 25, "what": [1, 3, 5, 6, 8, 10, 24, 26, 29, 30, 46, 51, 53, 60, 61, 62, 64, 66, 69, 71, 72, 77], "whatev": [6, 52, 61, 64, 65], "when": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 41, 42, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "whenev": [8, 37, 62, 66, 68, 74], "where": [1, 3, 5, 11, 13, 15, 17, 24, 25, 29, 30, 37, 45, 47, 49, 52, 53, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 76], "wherea": [66, 67], "wherev": 3, "whether": [0, 1, 6, 8, 11, 12, 13, 15, 17, 18, 19, 21, 22, 24, 25, 29, 30, 31, 33, 35, 37, 42, 45, 47, 48, 49, 52, 53, 60, 61, 62, 67, 68, 70, 74], "which": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "which_ag": [11, 13, 14, 15, 18, 21, 25, 26, 29, 41], "which_var": [33, 60], "while": [1, 3, 6, 8, 14, 26, 35, 42, 44, 45, 46, 47, 48, 49, 51, 53, 61, 62, 63, 65, 68, 69, 70, 71, 73, 74, 75, 76], "whistl": 67, "white": [14, 37, 46, 53, 65, 67], "who": [0, 1, 5, 6, 8, 10, 11, 14, 15, 17, 21, 25, 29, 45, 46, 48, 49, 51, 53, 57, 60, 61, 63, 64, 65, 68, 74, 77], "who_di": [11, 12, 13, 15, 17, 19, 21, 22, 24, 29, 61], "whoa": 68, "whole": [1, 5, 62, 63, 69], "whom": [8, 64], "whose": [3, 5, 6, 8, 10, 15, 20, 29, 31, 37, 42, 47, 51, 53, 57, 65, 67, 70, 71], "why": [1, 49, 62, 63, 64, 66, 68, 69, 74], "wide": [5, 8, 29, 60, 69, 74], "wider": [41, 66], "widespread": 5, "widetild": 66, "width": 14, "wiggl": [49, 54], "wilei": 4, "william": [4, 71, 72, 73, 76], "willing": [10, 48, 53], "win": 42, "windfal": 68, "window": [3, 5, 42], "winter": 63, "winterpol": 37, "wip": 1, "wire": [0, 71], "wise": [30, 53, 60], "wish": [37, 69], "wiswal": [8, 33, 60], "withdraw": [25, 59], "within": [0, 1, 6, 8, 10, 11, 13, 15, 29, 42, 60, 61, 63, 64, 66, 68, 73, 74], "without": [0, 1, 5, 6, 10, 12, 15, 17, 21, 22, 24, 29, 30, 41, 45, 48, 49, 52, 54, 60, 62, 63, 64, 67, 69, 74, 76], "wnow": [4, 11], "won": [1, 6, 60, 61, 62, 66, 67, 68, 74], "wonder": [49, 65, 66], "word": 1, "work": [0, 1, 3, 5, 6, 8, 11, 15, 17, 22, 29, 30, 31, 35, 40, 45, 46, 47, 48, 49, 52, 54, 60, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 76, 77], "workabl": 60, "worker": 74, "workflow": 4, "workhors": [63, 66, 68, 72], "workshop": 71, "workspac": [64, 68], "world": [6, 65, 69], "worri": [0, 3, 62, 64, 74], "wors": [10, 69], "worst": [0, 15, 33, 60], "worstprb": 15, "worthwhil": 48, "would": [0, 1, 6, 8, 13, 20, 24, 30, 34, 38, 42, 47, 49, 51, 52, 53, 54, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 74], "wouldn": [63, 74], "wp": [12, 21], "wrap": [6, 31, 46, 64], "wrapper": [0, 8, 37], "write": [0, 1, 3, 5, 6, 8, 10, 51, 60, 61, 62, 64, 69, 70, 71, 74], "writer": 1, "writeup": 1, "written": [1, 3, 6, 8, 29, 42, 45, 49, 51, 52, 53, 57, 58, 61, 63, 64, 68, 69, 77], "wrong": [0, 15, 62], "wrote": 66, "wrpfac": 15, "wrt": 75, "wrte": 58, "wrtenow": 11, "wsearchfunc": 37, "www": [3, 4, 7, 26, 31, 42, 54, 56], "wxinterpol": 37, "x": [0, 6, 13, 21, 29, 30, 31, 32, 35, 37, 40, 41, 42, 46, 49, 52, 53, 59, 60, 62, 66, 70, 71, 73, 74], "x0": 39, "x1": [37, 76], "x2": 37, "x_": 74, "x_0": [30, 37], "x_grid": [30, 66], "x_hist": 49, "x_i": 30, "x_j": [30, 60], "x_list": [37, 39, 47], "x_n": [30, 37], "x_obj": 31, "x_po": 37, "x_queri": 37, "x_ref": 42, "x_t": [17, 19, 53], "x_valu": [37, 46, 66], "xarrai": [0, 31], "xfunc": 19, "xing": 30, "xing_point": 30, "xinterpol": [37, 52], "xlabel": [4, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 60, 63, 64, 68, 71, 72, 73, 74, 76], "xlim": [45, 46, 50, 52, 53, 54, 56, 57, 71, 72, 73, 74, 76], "xlvl": 19, "xlvlcubicbool": 19, "xlvlgrid": 19, "xopt": 33, "xplorat": 8, "xq": 37, "xscale": 54, "xsearchfunc": 37, "xtol": 33, "xyinterpol": 37, "y": [30, 31, 32, 37, 42, 46, 59, 60, 66, 68, 69, 70, 71, 73, 74], "y1": 37, "y2": 37, "y_": [14, 19, 46, 49, 52, 53, 63, 64, 66, 69, 75], "y_0": [30, 37], "y_grid": 66, "y_i": 30, "y_j": 30, "y_list": [37, 39, 47], "y_n": [30, 37], "y_name": 59, "y_po": 37, "y_queri": 37, "y_slice": 59, "y_ss": [71, 73], "y_t": [52, 63, 69, 74], "y_valu": [37, 46, 66], "yai": 3, "yaml": [0, 6, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 61], "ye": [5, 64], "year": [5, 6, 10, 25, 63, 67, 68, 69, 70, 73], "yet": [0, 1, 5, 6, 11, 13, 17, 18, 19, 22, 45, 48, 54, 57, 68, 76], "yield": [8, 11, 14, 25, 46, 52, 53, 63, 65, 66, 67, 71, 74, 75], "yike": 64, "ylabel": [4, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 60, 63, 64, 68, 71, 72, 73, 74, 76], "ylim": [44, 45, 46, 48, 50, 52, 53, 54, 56, 57, 60, 63, 68, 76], "ylvl": 14, "ynrm": [6, 68, 74], "you": [0, 1, 3, 5, 6, 8, 10, 13, 31, 34, 47, 48, 52, 53, 60, 62, 63, 64, 65, 66, 67, 68, 72, 76, 77], "young": [1, 10], "younger": 68, "your": [0, 1, 3, 5, 6, 8, 10, 34, 35, 60, 61, 62, 65, 66, 67, 68, 69, 74, 76], "your_func": 73, "yourag": 74, "youth": 74, "yq": 37, "ysearchfunc": 37, "ytick": 71, "z": [6, 32, 37, 59, 66, 71, 73, 75], "z_": 75, "z_0": 37, "z_grid": 66, "z_list": 37, "z_n": 37, "z_ss": [71, 73], "z_t": [17, 75], "z_valu": 37, "zbot": 66, "zenodo": 25, "zero": [0, 8, 11, 12, 13, 14, 15, 21, 25, 33, 37, 41, 44, 46, 47, 48, 49, 50, 51, 53, 60, 61, 63, 64, 66, 67, 68, 69, 71, 73, 76], "zeta": [40, 60], "zeta_j": 60, "zotero": 30, "zprev": 6, "zsearchfunc": 37, "ztop": 66, "\ud835\ude7c\ud835\ude8a\ud835\ude9b\ud835\ude94\ud835\ude98\ud835\ude9fconsumertyp": 69}, "titles": ["Release Notes", "Contributing to Econ-ARK", "Guides", "HARK installation guide", "Krusell-Smith Model in HARK", "Quick Start Guide", "New Simulation System and Model Specification Files for HARK", "License", "ARKitecture of Econ-ARK", "Overview", "Introduction to HARK", "ConsAggShockModel", "ConsBequestModel", "ConsGenIncProcessModel", "ConsHealthModel", "ConsIndShockModel", "ConsIndShockModelFast", "ConsLaborModel", "ConsMarkovModel", "ConsMedModel", "ConsNewKeynesianModel", "ConsPortfolioModel", "ConsPrefShockModel", "ConsRepAgentModel", "ConsRiskyAssetModel", "ConsRiskyContribModel", "TractableBufferStockModel", "Consumption Saving", "API Reference", "Core", "dcegm", "Distribution", "Econforgeinterp", "Estimation", "Helpers", "Calibration", "Tools", "Interpolation", "Model", "Numba Tools", "Rewards", "Simulation", "Utilities", "Validators", "Example ConsAggShockModel", "Permanent versus Persistent Income Shocks", "Basic Health Investment in a Consumption-Saving Model", "Consumption-Saving model with Idiosyncratic Income Shocks", "Consumption-Saving model with Idiosyncratic Income Shocks and Different Interest Rates on Borrowing and Saving", "Perfect foresight consumption-saving", "Consumption-Saving with Intensive Margin Labor Supply Choice", "Additional parameter value to solve an instance of MarkovConsumerType", "Consumption-Saving with Medical Care Choice on the Extensive Margin", "Medical Care as a Consumption Good with Stochastic Demand", "Portfolio Models in HARK", "Example Implementations of <code class=\"docutils literal notranslate\"><span class=\"pre\">HARK.ConsumptionSaving.ConsRiskyAssetModel</span></code>", "Consumption-Saving with Portfolio Allocation: Sequential Solvers", "Multiplicative Shocks to Utility", "Representative Agent Consumption-Saving Model", "\u201cRisky Contribution\u201d Model (UNKNOWN / UNEXPLAINED)", "Advanced and Uncommon HARK Concepts", "Elements of an AgentType Subclass", "Constructed Attributes and Model Defaults", "The Nature of Time in HARK\u2019s Microeconomic Framework", "A Gentle Introduction to HARK", "Solving for \u201cMacroeconomic\u201d Equilibrium in HARK: the <code class=\"docutils literal notranslate\"><span class=\"pre\">Market</span></code> class", "Numeric Methods Commonly Used in HARK", "Directory of Consumption-Saving Models in HARK", "Simulating Microeconomic Models", "Journey: Economics PhD Student", "A Life Cycle Model: The Distribution of Assets By Age", "HARK and the Sequence Space Jacobian (SSJ) Method", "Computing Heterogenous Agent Sequence Space Jacobians in HARK", "Solving Krusell Smith Model with HARK and SSJ", "Making Heterogeneous Agent Sequence Space Jacobian Matrices in HARK", "The Sequence Space Jacobian (SSJ) method", "Using Transition Matrix Methods under IndShockConsumerType", "Econ-ARK documentation \u2013 HARK"], "titleterms": {"": [1, 58, 61, 63, 64, 65, 67, 68, 74, 75], "0": [0, 55], "1": [0, 1, 3, 4, 5, 45, 51, 54, 67, 69, 76], "10": [0, 76], "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "2": [0, 3, 4, 5, 45, 51, 54, 69, 76], "2021": 76, "3": [0, 3, 4, 5, 51, 54, 69], "4": [0, 3, 4, 5, 51, 54, 69], "5": [0, 54, 69], "6": [0, 69], "7": 0, "8": 0, "A": [8, 54, 64, 69, 70, 74], "And": 3, "As": 74, "At": 65, "Be": 74, "By": [65, 70], "If": 69, "In": 60, "It": [6, 60, 63], "On": 74, "One": [61, 67], "That": 61, "The": [6, 54, 63, 66, 69, 70, 75], "To": 61, "With": [67, 74, 76], "__": 67, "about": [9, 63, 64, 68, 69], "accuraci": 76, "action": 61, "ad": [1, 64], "addit": [3, 5, 8, 45, 51, 57, 65, 67], "advanc": [3, 4, 60], "advantag": 75, "aeon": 63, "ag": [63, 70], "agent": [4, 58, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76], "agenttyp": [8, 61, 62, 65], "aggreg": [67, 76], "aggshockconsumertyp": [4, 44, 67], "aggshockmarkovconsumertyp": [4, 44, 67], "algorithm": [4, 66, 75], "all": [65, 67], "alloc": [56, 67], "alter": 68, "an": [3, 8, 47, 48, 49, 51, 57, 61, 64, 67, 76], "anticip": 76, "api": 28, "approxim": 63, "ar": [67, 74], "ark": [1, 3, 8, 77], "arkitectur": 8, "around": 75, "arriv": 6, "asid": 3, "asset": [67, 70, 73, 76], "attribut": [6, 8, 35, 62, 64], "background": [46, 74], "balanc": 71, "baselin": 54, "basic": [6, 46, 60, 67, 74], "basichealthconsumertyp": 67, "befor": 69, "bequest": 67, "bequestwarmglowconsumertyp": 67, "bequestwarmglowportfoliotyp": 67, "best": 4, "better": 61, "birth": 68, "block": 6, "borrow": [48, 67], "both": 76, "bound": 66, "break": 0, "bring": 71, "budget": 71, "bug": 1, "build": 1, "calc_ergodic_dist": 76, "calcul": [71, 76], "calibr": [35, 60, 71, 73], "call": 74, "campbel": 71, "can": [61, 63, 74], "capit": 73, "care": [52, 53, 67], "carlo": 76, "case": 6, "caveat": 65, "certif": 1, "chang": [0, 62, 64, 76], "character": 46, "check": 4, "choic": [50, 52, 54, 55, 67], "class": [4, 8, 65, 69], "clear": [71, 75], "cobbdouglaseconomi": 4, "cobbdouglasmarkoveconomi": 4, "code": [1, 4, 69, 71], "commit": 1, "common": 4, "commonli": 66, "commun": 4, "compar": [55, 71, 72, 76], "complex": 62, "complic": 61, "compon": 4, "comput": [4, 52, 71, 72, 73, 76], "concept": [60, 65], "conda": [1, 3, 5], "conduct": 1, "connect": 6, "consaggshockmodel": [11, 44, 67], "consbequestmodel": [12, 67], "consgenincprocessmodel": [13, 67], "conshealthmodel": [14, 67], "consindshockmodel": [15, 67], "consindshockmodelfast": 16, "conslabormodel": [17, 67], "consmarkovmodel": [18, 67], "consmedmodel": [19, 67], "consnewkeynesianmodel": 20, "consportfoliomodel": [21, 67], "consprefshockmodel": [22, 57, 67], "consrepagentmodel": [23, 67], "consriskyassetmodel": [24, 55, 67], "consriskycontribmodel": 25, "constrain": [49, 53], "constraint": 71, "construct": [45, 47, 48, 49, 52, 53, 57, 62, 64], "constructor": 62, "consum": [45, 49, 55], "consumpt": [27, 46, 47, 48, 49, 50, 52, 53, 56, 58, 63, 66, 67, 68, 76], "consumptionsav": 55, "conswealthportfoliomodel": 67, "contain": 75, "content": 3, "contribut": [1, 59], "convent": [1, 62], "converg": 4, "core": [8, 29], "could": 63, "creat": [3, 5, 72, 76], "cubic": 66, "custom": 4, "cycl": [54, 60, 63, 70], "cyclic": 63, "dai": 61, "data": [49, 68], "dcegm": 30, "debug": [4, 62], "declar": 6, "default": 62, "deficit": 71, "defin": 75, "define_distribution_grid": 76, "demand": 53, "demark": 8, "demonstr": [3, 5], "depend": 63, "deriv": 66, "determin": 75, "dev": 0, "dev1": 0, "dev2": 0, "dev3": 0, "dev4": 0, "dev5": 0, "develop": [1, 2, 3], "development": 0, "deviat": 72, "dictionari": 76, "diff": 75, "differ": [48, 57, 67], "directori": 67, "discount": 71, "discret": [54, 66, 67], "discretedistribut": 60, "discretedistributionlabel": 60, "distanc": 60, "distribut": [6, 8, 31, 52, 60, 61, 70, 76], "do": [6, 65, 66, 67, 72, 74], "document": [1, 4, 77], "doe": [65, 71, 74], "don": 61, "down": 8, "draw": [6, 68], "dynam": [6, 75], "econ": [1, 8, 77], "econforgeinterp": 32, "econom": 69, "economi": [4, 71], "editor": [3, 5], "effici": 4, "element": [61, 65], "end": [61, 63], "endogen": [66, 67], "environ": [1, 3, 5, 76], "eqn": 75, "equat": 75, "equilibrium": [4, 65, 69, 71], "essenti": 4, "estim": [8, 33, 60], "evalu": 6, "event": 6, "evolv": 67, "examin": [6, 47, 48, 49], "exampl": [1, 3, 4, 5, 8, 9, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 60, 63, 68, 69, 74], "example_warmglowbequest": 67, "example_warmglowbequestport": 67, "exist": 65, "exogen": 67, "expect": 52, "expens": 67, "explan": 4, "explicit": [45, 67], "explicitperminc": 45, "extend": 4, "extens": [52, 67], "extern": 4, "extra": [61, 67], "factor": [51, 71], "farm": 8, "featur": [0, 67, 71], "few": 69, "file": 6, "financ": 71, "financi": 67, "find": [69, 71], "finit": 63, "firm": [73, 75], "first": [64, 74], "fix": [51, 55], "foresight": [49, 63, 64, 76], "framework": 63, "free": 67, "from": [3, 60, 61], "from_solut": 60, "from_t": 60, "function": [4, 6, 53, 60, 62, 66, 73, 74], "g": 71, "gener": [8, 45, 49, 52, 67, 69], "genincprocess": 45, "genincprocessconsumertyp": 67, "genincprocessmodel": 67, "gentl": 64, "get": [1, 61], "get_control": 61, "get_postst": 61, "get_shock": 61, "gimm": 62, "given": [55, 76], "glow": 67, "go": 74, "good": [53, 67], "govern": 71, "grid": 66, "gridpoint": 76, "growth": 51, "guid": [1, 2, 3, 5], "guidelin": 1, "ha": 74, "had": 61, "hank": [71, 75], "happen": 6, "hark": [3, 4, 5, 6, 8, 9, 10, 54, 55, 60, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 77], "harmenberg": 76, "health": [46, 67], "helper": [4, 34], "here": 67, "heterogen": [72, 74, 75], "higher": 67, "histori": 4, "hood": 74, "hook": 1, "horizon": 63, "household": [71, 75], "how": [1, 61, 65, 68, 69, 74], "i": [61, 74], "idiosyncrat": [47, 48, 55, 67], "illustr": [3, 67], "immun": 51, "implement": [44, 52, 53, 55, 56, 76], "impuls": [71, 73], "inbound": 6, "incom": [45, 47, 48, 51, 55, 60, 63, 64, 67, 68, 72, 74, 75, 76], "incorpor": 65, "increas": 76, "individu": 4, "indshockconsumertyp": [47, 67, 76], "indshockexplicitpermincconsumertyp": 67, "infinit": 63, "inform": 6, "init_ks_ag": 4, "init_ks_economi": 4, "initi": [6, 68], "input": [35, 45, 46, 52, 53, 57, 61, 62, 71], "instal": [3, 5], "instanc": [47, 48, 49, 51, 57, 76], "instruct": 3, "integr": 4, "intens": 50, "interest": [48, 51, 57, 67, 72, 75, 76], "interpol": [8, 37, 66], "intertempor": 6, "introduct": [0, 4, 9, 10, 64, 69], "introductori": 69, "invari": 61, "invers": 66, "invest": 46, "ipynb": 67, "issu": [1, 4], "itself": 67, "jacobian": [4, 71, 72, 73, 74, 75], "journei": [4, 69], "just": 62, "k": 4, "kill": 61, "kink": 48, "kinkedrconsumertyp": [48, 67], "kinkypref": 57, "kinkyprefconsumertyp": 67, "know": 74, "krusel": [4, 73, 75], "krusellsmitheconomi": 4, "krusellsmithtyp": 4, "labor": [50, 67, 75], "laborintmargconsumertyp": 67, "learn": [5, 9, 64, 67, 69], "legaci": [61, 68], "let": 71, "licens": 7, "life": [54, 60, 63, 70], "lifecycl": 68, "limit": 54, "line": 60, "linear": [66, 75], "link": 75, "liquid": [49, 53, 76], "literatur": 4, "littl": 69, "lognorm": 66, "lower": 66, "m": 61, "macro": 71, "macroeconom": 65, "made": 3, "main": [4, 69], "major": 0, "make": [61, 68, 71, 74], "man": 61, "mani": 75, "manipul": 68, "mankiw": 71, "manual": 68, "margin": [50, 52, 67], "market": [8, 65, 69, 71, 75, 76], "markov": 6, "markovconsumertyp": [51, 67], "math": 66, "matric": [71, 74, 76], "matrix": 76, "matter": 71, "me": [60, 61], "mean": 65, "measur": [60, 76], "medextmargconsumertyp": [52, 67], "medic": [52, 53, 67], "medshockconsumertyp": [53, 67], "merton": 54, "method": [4, 47, 49, 61, 65, 66, 68, 69, 71, 75, 76], "metric": 8, "micro": 71, "microeconom": [63, 68, 71], "middl": 60, "minim": 4, "minor": 0, "mit": 76, "model": [3, 4, 5, 6, 9, 28, 38, 45, 46, 47, 48, 49, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 73, 74, 75], "mont": 76, "more": [60, 64, 69], "mortal": 60, "motiv": 67, "multidimension": 66, "multipl": 57, "my": 60, "name": [1, 60, 61], "natur": 63, "need": [53, 69], "neutral": 76, "new": [3, 6, 68, 72], "next": 5, "non": [62, 63, 67], "normal": [45, 67, 74, 76], "note": [0, 65, 76], "notebook": 4, "noth": 61, "numba": 39, "number": 76, "numer": 66, "off": 60, "offset": 6, "one": 67, "onli": 4, "oper": 60, "optim": [54, 60], "option": [6, 60, 62], "ordinari": 6, "organ": 4, "origin": 1, "other": [0, 60], "our": 60, "out": 67, "outcom": 68, "output": [6, 76], "over": 52, "overal": 75, "overview": 9, "parallel": [8, 60], "param": 11, "paramet": [4, 6, 20, 35, 45, 47, 48, 49, 51, 52, 53, 57, 60, 62, 63, 64, 71], "pars": 60, "particip": 65, "pass": 35, "path": 76, "perfect": [49, 63, 64, 76], "perfforesightconsumertyp": [49, 67], "perhap": 61, "period": 51, "perman": [45, 51, 67, 72, 74, 76], "persist": 45, "persistentshock": 45, "persistentshockconsumertyp": 67, "perturb": 76, "phd": 69, "plot": 71, "point": 61, "polici": 53, "portfolio": [54, 55, 56, 67], "portfolioconsumertyp": 67, "post_solv": [60, 61], "practic": 4, "pre": [1, 68], "pre_solv": [60, 61], "precis": 76, "prefer": 67, "prefshockconsumertyp": [57, 67], "primari": 4, "probabl": 72, "problem": [4, 52, 58, 63, 64, 69, 75], "process": [45, 60, 63, 67], "product": 75, "pseudo": 66, "pseudo_termin": 63, "pull": 1, "purpos": 8, "python": [3, 5], "quick": [4, 5], "r": 48, "random": [6, 61], "rank": 71, "rate": [48, 57, 67, 72, 75, 76], "read_shock": 61, "real": [72, 76], "realism": 71, "realist": 63, "realiz": 6, "refer": [4, 28], "relat": 4, "releas": 0, "remark": [3, 8], "repagentconsumertyp": 67, "repagentmarkovconsumertyp": 67, "replic": 3, "repres": [58, 60, 61, 64, 67, 71], "represent": 53, "request": 1, "requir": 65, "resourc": [4, 76], "respond": 1, "respons": [71, 73], "result": 4, "return": 55, "reward": [8, 40, 60], "rich": 71, "rightarrow": 71, "risk": [67, 68], "riski": [55, 59, 67], "riskyassetconsumertyp": 67, "rr": 55, "run": [3, 5, 6], "sai": 60, "same": 72, "samuelson": 54, "save": [27, 46, 47, 48, 49, 50, 52, 56, 58, 63, 66, 67, 68], "second": [64, 67], "section": 6, "sequenc": [4, 71, 72, 74, 75], "sequenti": 56, "sequentialportfolioconsumertyp": 56, "seri": 71, "serial": 51, "set": [49, 76], "setup": [1, 73], "share": [54, 55], "shock": [45, 47, 48, 52, 53, 55, 57, 61, 64, 67, 68, 71, 72, 74, 76], "show": 61, "sim_birth": 61, "sim_death": 61, "simpl": [3, 5, 66], "simul": [4, 6, 41, 47, 48, 49, 61, 68, 71, 73, 76], "smith": [4, 73, 75], "so": 61, "soln": 71, "solut": [4, 6, 46, 47, 48, 49, 53, 61, 66, 69], "solution_termin": 61, "solv": [4, 45, 47, 48, 49, 51, 52, 53, 57, 60, 64, 65, 71, 73, 75, 76], "solve_one_period": 61, "solver": [8, 46, 56, 61], "sourc": 69, "space": [4, 71, 72, 74, 75], "special": [6, 62], "specif": 6, "specifi": 71, "spend": 71, "spline": 66, "ssj": [4, 71, 73, 74, 75], "standard": [63, 67, 72], "start": [1, 4, 5, 61, 69], "state": [61, 67, 71, 72, 73, 75, 76], "statement": [46, 47, 48, 49], "steadi": [71, 72, 73, 75, 76], "step": [3, 5, 61], "sticki": 54, "stochast": [53, 67], "strang": 63, "structur": [60, 63, 69], "student": 69, "studi": 69, "style": 62, "stylist": 1, "subclass": 61, "summari": [4, 66], "supplementari": 69, "suppli": [50, 67], "support": 4, "sure": 74, "symbol": 6, "system": [6, 61], "t": [61, 76], "t_cycl": 63, "ta": 71, "take": [60, 61, 71], "tank": 71, "tell": 60, "test": [1, 4], "text": [3, 5], "them": 72, "theori": 67, "thi": [61, 63, 67, 68, 74], "thing": [72, 74], "time": [61, 63, 71], "tip": 4, "tool": [8, 28, 36, 39], "toolkit": [3, 71], "topic": 4, "tractablebufferstockconsumertyp": 67, "tractablebufferstockmodel": [26, 67], "tradit": 66, "transit": [6, 61, 76], "transitori": 67, "treatment": 52, "trick": 76, "turn": 60, "tutori": [3, 5, 8, 69], "twist": 6, "two": 71, "type": [55, 69], "u": 71, "uncommon": 60, "under": [74, 76], "unemploy": [51, 72], "unexplain": 59, "univers": 8, "unknown": 59, "up": [60, 61, 76], "updat": 62, "us": [3, 5, 60, 62, 66, 73, 74, 75, 76], "usag": [2, 4, 6, 60], "user": 3, "util": [8, 42, 57, 60, 67], "v": [67, 71, 76], "valid": 43, "valu": [45, 47, 48, 49, 51, 57, 62, 67, 71], "vari": 61, "variabl": [6, 61, 66, 74], "venv": 1, "verbos": 60, "version": 72, "versu": 45, "view": 62, "virtual": [3, 5], "virtualenv": [3, 5], "visual": [4, 68], "w": 55, "wage": 75, "wai": 68, "want": [61, 69], "warm": 67, "we": [65, 66], "wealth": [67, 76], "welcom": 1, "what": [63, 65, 67, 68, 74, 75], "whatev": 62, "when": [53, 60], "where": 6, "who": [66, 67, 76], "why": [61, 65, 71], "word": 69, "work": [4, 65, 69, 74], "workhors": [60, 67], "wrap": 61, "you": [61, 69, 74], "your": 64}})